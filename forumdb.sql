-- phpMyAdmin SQL Dump
-- version 5.1.0
-- https://www.phpmyadmin.net/
--
-- Anamakine: 127.0.0.1
-- Üretim Zamanı: 08 Şub 2022, 16:36:54
-- Sunucu sürümü: 10.4.18-MariaDB
-- PHP Sürümü: 8.0.3

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
START TRANSACTION;
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- Veritabanı: `forumdb`
--

-- --------------------------------------------------------

--
-- Tablo için tablo yapısı `tbl_titles`
--

CREATE TABLE `tbl_titles` (
  `id` int(11) NOT NULL,
  `title` varchar(50) COLLATE utf8mb4_turkish_ci NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_turkish_ci;

--
-- Tablo döküm verisi `tbl_titles`
--

INSERT INTO `tbl_titles` (`id`, `title`) VALUES
(44, 'C# for döngüsü'),
(60, 'c# metotlar'),
(43, 'Ck Editör kullanımı'),
(63, 'deneme'),
(47, 'JavaScript Yazdırma'),
(50, 'Js callback'),
(56, 'Php checkbox kullanımı'),
(51, 'Php Cookieler'),
(45, 'Php değişkenler'),
(46, 'Php Diziler'),
(55, 'Php fonksiyon kullanımı'),
(57, 'Php form kullanımı'),
(59, 'Php ile tarih saat'),
(62, 'php kaçış karakterleri'),
(61, 'php mail formu yapımı'),
(54, 'Php operatörleri'),
(58, 'Php sayfalama mantığı'),
(52, 'Php session kullanımı'),
(53, 'Php veri türleri'),
(48, 'Python Değişken Kullanımı');

-- --------------------------------------------------------

--
-- Tablo için tablo yapısı `tbl_topic`
--

CREATE TABLE `tbl_topic` (
  `id` int(11) NOT NULL,
  `topictext` mediumtext COLLATE utf8mb4_turkish_ci NOT NULL,
  `titleId` int(11) NOT NULL,
  `userId` int(11) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_turkish_ci;

--
-- Tablo döküm verisi `tbl_topic`
--

INSERT INTO `tbl_topic` (`id`, `topictext`, `titleId`, `userId`) VALUES
(46, '<p><code>&lt;!</code><code>DOCTYPE</code> <code>html&gt;</code></p>\r\n\r\n<p><code>&lt;</code><code>html</code><code>&gt;</code></p>\r\n\r\n<p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>&lt;</code><code>head</code><code>&gt;</code></p>\r\n\r\n<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>&lt;</code><code>meta</code> <code>charset</code><code>=</code><code>&quot;utf-8&quot;</code><code>&gt;</code></p>\r\n\r\n<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>&lt;</code><code>title</code><code>&gt;CKEditor&lt;/</code><code>title</code><code>&gt;</code></p>\r\n\r\n<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>&lt;</code><code>script</code> <code>src</code><code>=</code><code>&quot;//cdn.ckeditor.com/4.14.1/standard/ckeditor.js&quot;</code><code>&gt;&lt;/</code><code>script</code><code>&gt;</code></p>\r\n\r\n<p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>&lt;/</code><code>head</code><code>&gt;</code></p>\r\n\r\n<p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>&lt;</code><code>body</code><code>&gt;</code></p>\r\n\r\n<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>&lt;</code><code>textarea</code> <code>name</code><code>=</code><code>&quot;editor1&quot;</code><code>&gt;&lt;/</code><code>textarea</code><code>&gt;</code></p>\r\n\r\n<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>&lt;</code><code>script</code><code>&gt;</code></p>\r\n\r\n<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>CKEDITOR.replace( &#39;editor1&#39; );</code></p>\r\n\r\n<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>&lt;/</code><code>script</code><code>&gt;</code></p>\r\n\r\n<p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>&lt;/</code><code>body</code><code>&gt;</code></p>\r\n\r\n<p><code>&lt;/</code><code>html</code><code>&gt;</code></p>\r\n', 43, 1),
(47, '<p><strong>&Ouml;rnek 4: 1&rsquo;den 9&rsquo;lara kadar olan klasik &ccedil;arpım tablosunu oluşturalım.</strong></p>\r\n\r\n<p><em>&Ccedil;&ouml;z&uuml;m:</em>&nbsp;Bu &ouml;rnekte 2 tane for d&ouml;ng&uuml;s&uuml;n&uuml;n i&ccedil;- i&ccedil;e kullanıldığına dikkat ediniz. Dıştaki for d&ouml;ng&uuml;s&uuml; 1 kere &ccedil;alıştığında i&ccedil;teki for d&ouml;ng&uuml;s&uuml; 9 kere &ccedil;alıştırılır.</p>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n\r\n			<p>2</p>\r\n\r\n			<p>3</p>\r\n\r\n			<p>4</p>\r\n\r\n			<p>5</p>\r\n\r\n			<p>6</p>\r\n\r\n			<p>7</p>\r\n\r\n			<p>8</p>\r\n\r\n			<p>9</p>\r\n			</td>\r\n			<td>\r\n			<p>for (int i = 1; i &lt;= 9; i++)</p>\r\n\r\n			<p>{</p>\r\n\r\n			<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for (int j = 1; j &lt;= 9; j++)</p>\r\n\r\n			<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</p>\r\n\r\n			<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Console.WriteLine(&quot;{0} x {1}={2}&quot;, i, j, i * j);</p>\r\n\r\n			<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</p>\r\n\r\n			<p>Console.WriteLine(&quot;------------------&quot;);</p>\r\n\r\n			<p>}</p>\r\n\r\n			<p>Console.ReadKey();</p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n', 44, 1),
(48, '<p>PHP&rsquo;de değişkenler, sabitler ve dizinleri, &ccedil;alışmanın i&ccedil;inde kullanacağın verileri barındıracak&nbsp;<strong>kutular</strong>&nbsp;olarak hayal edebilirsin. Mesela ger&ccedil;ek bir&nbsp;<strong>posta kutusu hayal et</strong>, i&ccedil;ine g&uuml;nl&uuml;k gazete konur ve sonra sen o gazeteyi okursun. Daha sonra eski gazete gider yeni bir dergi gelir.</p>\r\n\r\n<p>Yukarıdaki &ouml;rneği programlama dilinde ş&ouml;yle a&ccedil;ıklarım; &ouml;nce değişken isimlerinde t&uuml;rk&ccedil;e karakter ya da boşluk kullanamayacağım i&ccedil;in değişkene i&ccedil;eriğine uygun bir ad belirlerim, ben &ldquo;<strong>posta_kutusu</strong>&rdquo; dedim. Sonrasında bu değişkene&nbsp;<strong>gazete</strong>&nbsp;y&uuml;klerim.</p>\r\n\r\n<p>Bunuda matematiksel ve mantıksal olarak &ldquo;<strong>=</strong>&rdquo; eşittir işareti ile yaparım;<br />\r\n<strong>$posta_kutusu = &ldquo;gazete&rdquo;;</strong>. B&ouml;yle yaptığımda benim posta_kutusu değişkenime gazete değerini y&uuml;klemiş oldum. Ve şuan ben ne zaman posta_kutusu değişkenini kullanmak istesem elime &ldquo;gazete&rdquo; sonucu ge&ccedil;ecek, ta ki onun i&ccedil;eriğini tekrar değiştirene kadar.</p>\r\n\r\n<h2>PHP değişkenleri</h2>\r\n\r\n<p>Hemen yukarda anlattığım &ouml;rneğin PHP&rsquo;de uygulanmasını g&ouml;stereyim. PHP&rsquo;de değişkenleri başına bir dolar ($) işareti koyarak belirtiriz. Buradan bile PHP&rsquo;nin &ccedil;ok zengin bir dil olduğunu &ccedil;ıkarabilirsin.</p>\r\n\r\n<p>Bir değişken tanımlarken uyman gereken kuralların listesi;</p>\r\n\r\n<ol>\r\n	<li>Harfler, sayılar ve alt &ccedil;izgi(_) dışında bir karakter kullanamazsın.</li>\r\n	<li>Değişken adını bir rakam ile başlatamazsın. (<strong>$1degisken</strong>&nbsp;Yanlış,&nbsp;<strong>$degisken1</strong>&nbsp;Uygun)</li>\r\n	<li>PHP değişken adlarında b&uuml;y&uuml;k k&uuml;&ccedil;&uuml;k harf ayrımı yapar, yani $degisken ile $dEgiSkEn&nbsp;<ins>aynı değildir</ins>.</li>\r\n</ol>\r\n\r\n<p>Bu &uuml;&ccedil; kurala uyan t&uuml;m terimler birer değişken adı olabilir.<br />\r\nBir ka&ccedil; uygun değişken &ouml;rneği:&nbsp;<small>$meyveler, $posta_kutusu, $kolay1dil, $x, $_php</small></p>\r\n\r\n<h2>Değişkenlere değer atama, d&uuml;zenleme ve silme</h2>\r\n\r\n<p>En başta anlattığım masalda da dediğim gibi bir değer atama işini mantıksal ve matematiksel olarak ilkokulda &ouml;ğrendiğimiz &ldquo;<strong>=</strong>&rdquo; operat&ouml;r&uuml; ile yaparız.</p>\r\n\r\n<p>Bu eşittir olayı t&uuml;m g&uuml;ncel programlama dillerinde aynıdır. Yani g&uuml;n&uuml;m&uuml;z&uuml;n &ccedil;oğu programlama dillinde değer atama ve d&uuml;zenleme işlemi bu operat&ouml;r ile yapılır. &Ccedil;&uuml;nk&uuml; aklın yolu birdir.</p>\r\n\r\n<p>Şimdi&nbsp;<strong>$posta_kutusu</strong>&nbsp;değişkenine&nbsp;<strong>gazete</strong>&nbsp;değerini atayalım;</p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n\r\n			<p>2</p>\r\n\r\n			<p>3</p>\r\n\r\n			<p>4</p>\r\n			</td>\r\n			<td>\r\n			<p><code>&lt;?php</code></p>\r\n\r\n			<p><code>$posta_kutusu</code> <code>= </code><code>&quot;gazete&quot;</code><code>;</code></p>\r\n\r\n			<p><code>echo</code> <code>$posta_kutusu</code><code>;</code></p>\r\n\r\n			<p><code>?&gt;</code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>Ekranda&nbsp;<strong>gazete</strong>&nbsp;yazar.</p>\r\n\r\n<p>Değişkenlere atıyacağınız değerlere g&ouml;re tırnak işareti kullanıp kullanmayacağını belirleyebilirsin. Eğer gireceğin değer bir&nbsp;<strong>rakam</strong>&nbsp;ise tırnak i&ccedil;inde yazmasanda olur. Ama yazacağın bir yazı ise onu tırnak i&ccedil;ine&nbsp;<ins>alman gerekiyor</ins>.</p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n\r\n			<p>2</p>\r\n\r\n			<p>3</p>\r\n\r\n			<p>4</p>\r\n\r\n			<p>5</p>\r\n\r\n			<p>6</p>\r\n			</td>\r\n			<td>\r\n			<p><code>&lt;?php</code></p>\r\n\r\n			<p><code>$sayi</code> <code>= 100;</code></p>\r\n\r\n			<p><code>$adres</code> <code>= </code><code>&quot;//www.phpr.org&quot;</code><code>;</code></p>\r\n\r\n			<p><code>$yil</code> <code>= 2010;</code></p>\r\n\r\n			<p><code>$x</code> <code>= 10;</code></p>\r\n\r\n			<p><code>?&gt;</code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>Aksini denemeye &ccedil;alışırsan ve yazıları tırnak i&ccedil;ine almazsan&nbsp;<strong>hatalar</strong>&nbsp;ile karşılaşırsın. &Ccedil;&uuml;nk&uuml; tırnak i&ccedil;ine almadığın her şey ya mantıksal ya da matematiksel olmak&nbsp;<ins>zorunda</ins>.</p>\r\n\r\n<p>Bir değişkene atadığımız değeri değiştirmeside ilk değerin y&uuml;klenmesi ile aynı. Yani en son o değişkene ne y&uuml;klediysek o değeri taşır. Kodlar yukarıdan aşağıya doğru &ccedil;alışır. &Ouml;rnek;</p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n\r\n			<p>2</p>\r\n\r\n			<p>3</p>\r\n\r\n			<p>4</p>\r\n\r\n			<p>5</p>\r\n\r\n			<p>6</p>\r\n\r\n			<p>7</p>\r\n\r\n			<p>8</p>\r\n\r\n			<p>9</p>\r\n			</td>\r\n			<td>\r\n			<p><code>&lt;?php</code></p>\r\n\r\n			<p><code>$posta_kutusu</code> <code>= </code><code>&quot;gazete&quot;</code><code>;</code></p>\r\n\r\n			<p><code>// şuan posta_kutusu değişkeninde gazete değeri var</code></p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code>$posta_kutusu</code> <code>= </code><code>&quot;dergi&quot;</code><code>;</code></p>\r\n\r\n			<p><code>// şuan ise dergi değeri var</code></p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code>echo</code> <code>$posta_kutusu</code><code>;</code></p>\r\n\r\n			<p><code>?&gt;</code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>Ekranda&nbsp;<strong>dergi</strong>&nbsp;yazar.</p>\r\n\r\n<p>Bir değişkeni silmek ve onu bir daha kullanmamak i&ccedil;in ise&nbsp;<strong>unset()</strong>&nbsp;fonksiyonunu kullanırız. Fakat fonksiyonlar hakkında hen&uuml;z fikrin yoksa bu unset olayını daha sonraya saklayabilirsin. &Ouml;rnek bir kullanım;</p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n\r\n			<p>2</p>\r\n\r\n			<p>3</p>\r\n\r\n			<p>4</p>\r\n\r\n			<p>5</p>\r\n			</td>\r\n			<td>\r\n			<p><code>&lt;?php</code></p>\r\n\r\n			<p><code>$posta_kutusu</code> <code>= </code><code>&quot;gazete&quot;</code><code>;</code></p>\r\n\r\n			<p><code>unset(</code><code>$posta_kutusu</code><code>);</code></p>\r\n\r\n			<p><code>// artık posta_kutusu diye bir değişken yok</code></p>\r\n\r\n			<p><code>?&gt;</code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>Şuraya kadar PHP&rsquo;de bir değişken oluşturma, değişkenlere değer verme ve d&uuml;zenleme olayını kapmış durumdayız. Bir sonraki derse ge&ccedil;ebilir ya da anlamadıysan baştan okuyabilirsin.</p>\r\n', 45, 1),
(49, '<p>Dizileri tanım olarak kısaca daha &ouml;nceden &ouml;ğrendiğin değişkene birden fazla değer atamak ve atadığın değerleri sırayalayıp, &ccedil;oklu verilere rahat m&uuml;dahale etmeni sağlayan veri tipleri diyebilirim.</p>\r\n\r\n<p>Değerleri bir kategori altında toplamak ya da daha dinamik değişkenler oluşturmak i&ccedil;in diziler idealdir. &Ouml;rneğin sadece bir&nbsp;<strong>$uyeler</strong>&nbsp;değişkeninde y&uuml;zlerce kullanıcının verilerine ulaşıp değişiklikler yapabiliriz.</p>\r\n\r\n<p>Dizilerin kullanımı, oluşturulması ve değiştirilmesi gayet basit aynı zamanda bunların birden fazla da yolu var.</p>\r\n\r\n<h2>Dizi (Array) oluşturma</h2>\r\n\r\n<p>İster&nbsp;<strong>Array()</strong>&nbsp;fonksiyonunu kullanarak istersen de fonksiyon kullanmadan dizi oluşturabilirsin.<br />\r\nİlk olarak&nbsp;<strong>Array()</strong>&nbsp;fonksiyon ile oluşturmayı g&ouml;stereyim:</p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n			</td>\r\n			<td>\r\n			<p><code>$meyveler</code> <code>= </code><code>array</code><code>(</code><code>&quot;Elma&quot;</code><code>, </code><code>&quot;Armut&quot;</code><code>, </code><code>&quot;Muz&quot;</code><code>, </code><code>&quot;Kiraz&quot;</code><code>);</code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><strong>$meyveler</strong>&nbsp;dizisine&nbsp;<strong>array()</strong>&nbsp;fonksiyonuyla 4 tane değer atadık.</p>\r\n\r\n<p>Aynı işlemi fonksiyon kullanmadan yapalım:</p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n\r\n			<p>2</p>\r\n\r\n			<p>3</p>\r\n\r\n			<p>4</p>\r\n			</td>\r\n			<td>\r\n			<p><code>$meyveler</code><code>[0] = </code><code>&quot;Elma&quot;</code><code>;</code></p>\r\n\r\n			<p><code>$meyveler</code><code>[1] = </code><code>&quot;Armut&quot;</code><code>;</code></p>\r\n\r\n			<p><code>$meyveler</code><code>[2] = </code><code>&quot;Muz&quot;</code><code>;</code></p>\r\n\r\n			<p><code>$meyveler</code><code>[3] = </code><code>&quot;Kiraz&quot;</code><code>;</code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>Fonksiyonsuz y&ouml;ntemde aslında dizinin nasıl sonu&ccedil; verdiği ortaya &ccedil;ıkmış oluyor.<br />\r\n&Uuml;stteki&nbsp;<strong>Array()</strong>&nbsp;fonksiyonu ve fonksiyonsuz şekilde oluşturduğumuz dizilerde aynı işlemi yaptık.</p>\r\n\r\n<p><strong>Array()</strong>&nbsp;fonksiyonu ile oluşturduğumuz bu dizide her bir değerin anahtarı sayısal olur, yani anahtarlar 0, 1, 2, 3, &hellip; şeklinde gider. Yukarıdaki&nbsp;<strong>$meyveler</strong>&nbsp;dizisinin 0. anahtarının değeri Elma, 1. anahtarının değeri ise Armut olur.</p>\r\n\r\n<p><strong>Array()</strong>&nbsp;fonksiyonu ile anahtarları sayısal olmayan ve kendi istediğin gibi olacak olan diziler oluşturmak i&ccedil;in ise şu y&ouml;ntemi uygulamalısın:</p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n			</td>\r\n			<td>\r\n			<p><code>$meyveler</code> <code>= </code><code>array</code><code>(</code><code>&#39;bir&#39;</code> <code>=&gt; </code><code>&#39;Elma&#39;</code><code>, </code><code>&#39;iki&#39;</code> <code>=&gt; </code><code>&#39;Armut&#39;</code><code>, </code><code>&#39;&uuml;&ccedil;&#39;</code> <code>=&gt; </code><code>&#39;Muz&#39;</code><code>);</code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>Burada anahtarlarını kendim belirtmiş oldum. Aynısını bir de Array fonksiyonunu kullanmadan yapayım:</p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n\r\n			<p>2</p>\r\n\r\n			<p>3</p>\r\n			</td>\r\n			<td>\r\n			<p><code>$meyveler</code><code>[</code><code>&#39;bir&#39;</code><code>] = </code><code>&#39;Elma&#39;</code><code>;</code></p>\r\n\r\n			<p><code>$meyveler</code><code>[</code><code>&#39;iki&#39;</code><code>] = </code><code>&#39;Armut&#39;</code><code>;</code></p>\r\n\r\n			<p><code>$meyveler</code><code>[</code><code>&#39;&uuml;&ccedil;&#39;</code><code>] = </code><code>&#39;Muz&#39;</code><code>;</code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>Bu da bir &ouml;nceki &ouml;rneğin fonksiyonsuz tanımlanmış hali.</p>\r\n\r\n<p>Dizilerde bir adet anahtara ve sonrasında her anahtar i&ccedil;in bir değere ihtiyacın var. Burada anahtar olan kısım ve değer olan kısmı şu şekilde g&ouml;stereyim:</p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n			</td>\r\n			<td>\r\n			<p><code>$dizi</code><code>[</code><code>&quot;anahtar&quot;</code><code>] = </code><code>&quot;değer&quot;</code><code>;</code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>Anahtar olan kısıma ister sayı istersen de yazı girebilirsin. Sıralamalar i&ccedil;in ideal olan dizi anahtarı sayılardır. Sayı anahtarlar ile dizilerde daha rahat &ccedil;alışabilirsin.</p>\r\n\r\n<h2>Dizileri kullanmak</h2>\r\n\r\n<p>Bir dizi oluşturduktan sonra onu oluşturduğun gibi kullanıp, değiştirebilirsin. Hemen &ouml;rnek ile a&ccedil;ıklayayım:</p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n\r\n			<p>2</p>\r\n\r\n			<p>3</p>\r\n\r\n			<p>4</p>\r\n			</td>\r\n			<td>\r\n			<p><code>$meyveler</code><code>[0] = </code><code>&quot;Elma&quot;</code><code>;</code></p>\r\n\r\n			<p><code>$meyveler</code><code>[1] = </code><code>&quot;Armut&quot;</code><code>;</code></p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code>echo</code> <code>$meyveler</code><code>[0];</code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>Ekranda&nbsp;<strong>Elma</strong>&nbsp;yazar.</p>\r\n\r\n<h2>Dizileri değiştirmek</h2>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n\r\n			<p>2</p>\r\n\r\n			<p>3</p>\r\n\r\n			<p>4</p>\r\n			</td>\r\n			<td>\r\n			<p><code>$meyveler</code><code>[0] = </code><code>&quot;Elma&quot;</code><code>;</code></p>\r\n\r\n			<p><code>$meyveler</code><code>[0] = </code><code>&quot;Portakal&quot;</code><code>;</code></p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code>echo</code> <code>$meyveler</code><code>[0];</code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>Ekranda Portakal yazar. &Ccedil;&uuml;nk&uuml; $meyveler dizisinin 0. anahtarının değeri Elma iken sonraki satırda Portakal olarak değiştirdik.</p>\r\n\r\n<p>Hep sayısal anahtarlar ile g&ouml;sterdik, şimdi bir de yazılı anahtarlar ile g&ouml;stereyim:</p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n\r\n			<p>2</p>\r\n\r\n			<p>3</p>\r\n\r\n			<p>4</p>\r\n\r\n			<p>5</p>\r\n			</td>\r\n			<td>\r\n			<p><code>$misafir</code><code>[</code><code>&quot;isim&quot;</code><code>] = </code><code>&quot;Musa&quot;</code><code>;</code></p>\r\n\r\n			<p><code>$misafir</code><code>[</code><code>&quot;yaş&quot;</code><code>] = 18;</code></p>\r\n\r\n			<p><code>$misafir</code><code>[</code><code>&quot;il&quot;</code><code>] = </code><code>&quot;İstanbul&quot;</code><code>;</code></p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code>echo</code> <code>&#39;Misafirin ismi &#39;</code> <code>. </code><code>$misafir</code><code>[</code><code>&quot;isim&quot;</code><code>] . </code><code>&#39;, yaşı &#39;</code> <code>. </code><code>$misafir</code><code>[</code><code>&quot;yaş&quot;</code><code>] . </code><code>&#39;, ili ise &#39;</code> <code>. </code><code>$misafir</code><code>[</code><code>&quot;il&quot;</code><code>] . </code><code>&#39;.&#39;</code><code>;</code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>Ekranda&nbsp;<strong>Misafirin ismi Musa, yaşı 18, ili ise İstanbul.</strong>&nbsp;yazar.</p>\r\n\r\n<h2>İ&ccedil; i&ccedil;e dizi tanımlamak</h2>\r\n\r\n<p>Bir dizi oluşturduktan hemen sonra o dizinin i&ccedil;ine sonsuza kadar daha dizi oluşturabiliriz. Aynı alt kategori mantığı gibi d&uuml;ş&uuml;nebilirsin. Yine bunu ister fonksiyon ile istersen de bodoslama olarak yapabilirsin:</p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n\r\n			<p>2</p>\r\n\r\n			<p>3</p>\r\n\r\n			<p>4</p>\r\n			</td>\r\n			<td>\r\n			<p><code>$yemek</code><code>[</code><code>&quot;tatlı&quot;</code><code>] = </code><code>array</code><code>(</code><code>&quot;pasta&quot;</code><code>, </code><code>&quot;kurabiye&quot;</code><code>, </code><code>&quot;şeker&quot;</code><code>);</code></p>\r\n\r\n			<p><code>$yemek</code><code>[</code><code>&quot;acı&quot;</code><code>] = </code><code>array</code><code>(</code><code>&quot;biber&quot;</code><code>, </code><code>&quot;acılı adana&quot;</code><code>, </code><code>&quot;meksika sosu&quot;</code><code>);</code></p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code>echo</code> <code>&#39;Ben &#39;</code> <code>. </code><code>$yemek</code><code>[</code><code>&quot;tatlı&quot;</code><code>][0] . </code><code>&#39; yedim&#39;</code><code>;</code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>Ekranda&nbsp;<strong>Ben pasta yedim</strong>&nbsp;yazar. Burada olduğu gibi istediğin kadar i&ccedil;e i&ccedil;e dizi oluşturabilirsin. Bir de fonksiyon kullanmadan g&ouml;stereyim:</p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n\r\n			<p>2</p>\r\n\r\n			<p>3</p>\r\n\r\n			<p>4</p>\r\n\r\n			<p>5</p>\r\n\r\n			<p>6</p>\r\n\r\n			<p>7</p>\r\n\r\n			<p>8</p>\r\n\r\n			<p>9</p>\r\n			</td>\r\n			<td>\r\n			<p><code>$yemek</code><code>[</code><code>&quot;tatlı&quot;</code><code>][0] = </code><code>&quot;pasta&quot;</code><code>;</code></p>\r\n\r\n			<p><code>$yemek</code><code>[</code><code>&quot;tatlı&quot;</code><code>][1] = </code><code>&quot;kurabiye&quot;</code><code>;</code></p>\r\n\r\n			<p><code>$yemek</code><code>[</code><code>&quot;tatlı&quot;</code><code>][2] = </code><code>&quot;şeker&quot;</code><code>;</code></p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code>$yemek</code><code>[</code><code>&quot;acı&quot;</code><code>][0] = </code><code>&quot;biber&quot;</code><code>;</code></p>\r\n\r\n			<p><code>$yemek</code><code>[</code><code>&quot;acı&quot;</code><code>][1] = </code><code>&quot;acılı adana&quot;</code><code>;</code></p>\r\n\r\n			<p><code>$yemek</code><code>[</code><code>&quot;acı&quot;</code><code>][2] = </code><code>&quot;meksika sosu&quot;</code><code>;</code></p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code>echo</code> <code>&#39;Ben &#39;</code> <code>. </code><code>$yemek</code><code>[</code><code>&quot;tatlı&quot;</code><code>][0] . </code><code>&#39; yedim&#39;</code><code>;</code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<h2>Dizi silmek</h2>\r\n\r\n<p>Oluşturduğun dizilerden birini eksiltmek ya da tamamını yok etmek i&ccedil;in değişkenleri yok etmekte kullandığımız&nbsp;<strong>unset()</strong>&nbsp;fonksiyonunu kullanıyoruz. İşin aslı bu fonksiyon t&uuml;m değişken tiplerini yok etmekte kullanabilirsin.</p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n\r\n			<p>2</p>\r\n\r\n			<p>3</p>\r\n\r\n			<p>4</p>\r\n\r\n			<p>5</p>\r\n\r\n			<p>6</p>\r\n\r\n			<p>7</p>\r\n			</td>\r\n			<td>\r\n			<p><code>$meyveler</code><code>[0] = </code><code>&quot;Elma&quot;</code><code>;</code></p>\r\n\r\n			<p><code>$meyveler</code><code>[1] = </code><code>&quot;Armut&quot;</code><code>;</code></p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code>// sadece bir diziyi silmek i&ccedil;in:</code></p>\r\n\r\n			<p><code>unset(</code><code>$meyveler</code><code>[0]);</code></p>\r\n\r\n			<p><code>// tamamını silmek i&ccedil;in:</code></p>\r\n\r\n			<p><code>unset(</code><code>$meyveler</code><code>);</code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<h2>Dizinin t&uuml;m&uuml;n&uuml; yazdırmak</h2>\r\n\r\n<p>Eğer biz ger&ccedil;ekten bir diziyi olduğu gibi t&uuml;m i&ccedil;indekilerle ekrana yazdırmak istiyorsak&nbsp;<strong>print_r()</strong>&nbsp;fonksiyonunu kullanacağız. Bu bize i&ccedil;ine yazdığımız dizinin sahip olduğu t&uuml;m anahtarları ve değerlerini g&ouml;sterir:</p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n\r\n			<p>2</p>\r\n			</td>\r\n			<td>\r\n			<p><code>$renkler</code> <code>= </code><code>array</code><code>(</code><code>&quot;mavi&quot;</code><code>, </code><code>&quot;turuncu&quot;</code><code>, </code><code>&quot;yeşil&quot;</code><code>);</code></p>\r\n\r\n			<p><code>print_r(</code><code>$renkler</code><code>);</code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>Ekranda ş&ouml;yle bir &ccedil;ıktı belirir:</p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><code>Array</code></p>\r\n\r\n			<p><code>(</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>[0] =&gt; mavi</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>[1] =&gt; turuncu</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>[2] =&gt; yeşil</code></p>\r\n\r\n			<p><code>)</code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>Dizi yaptığınız bir değişkeni&nbsp;<em>herhangi bir anahtar kullanmadan</em>&nbsp;direkt olarak hep kullandığımız ekrana yansıtma fonksiyonu olan&nbsp;<strong>echo</strong>&nbsp;ile ekrana&nbsp;<strong>yazamıyoruz</strong>.</p>\r\n\r\n<p>&Ccedil;&uuml;nk&uuml; adı &uuml;st&uuml;nde dizi birden fazla değere sahip olduğu i&ccedil;in tek başına yazdırmaya kalktığınızda &ldquo;Array&rdquo; şeklinde sonu&ccedil; alırsın. Hemen bunun nasıl olacağını da g&ouml;stereyim:</p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n\r\n			<p>2</p>\r\n			</td>\r\n			<td>\r\n			<p><code>$renkler</code> <code>= </code><code>array</code><code>(</code><code>&quot;mavi&quot;</code><code>, </code><code>&quot;turuncu&quot;</code><code>, </code><code>&quot;yeşil&quot;</code><code>);</code></p>\r\n\r\n			<p><code>echo</code> <code>$renkler</code><code>;</code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>Bir diziyi herhangi bir anahtarını belirtmeden yazdırmaya &ccedil;alıştığımız i&ccedil;in ekranda uyarı babında yalnızca&nbsp;<strong>Array</strong>&nbsp;yazar.</p>\r\n\r\n<h2>Dizilerin eleman sayısını bulmak</h2>\r\n\r\n<p>Bir dizide ka&ccedil; eleman olduğunu saymak i&ccedil;in&nbsp;<strong>count()</strong>&nbsp;fonksiyonunu kullanıyoruz. Hemen basit bir &ouml;rnek ile g&ouml;stereyim:</p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n\r\n			<p>2</p>\r\n			</td>\r\n			<td>\r\n			<p><code>$renkler</code> <code>= </code><code>array</code><code>(</code><code>&quot;mavi&quot;</code><code>, </code><code>&quot;turuncu&quot;</code><code>, </code><code>&quot;yeşil&quot;</code><code>);</code></p>\r\n\r\n			<p><code>echo</code> <code>count</code><code>(</code><code>$renkler</code><code>);</code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>Ekranda&nbsp;<strong>3</strong>&nbsp;yazar. &Ccedil;&uuml;nk&uuml;&nbsp;<strong>$renkler</strong>&nbsp;dizinin 3 elemanı var.</p>\r\n\r\n<h2>Dizileri sıralama</h2>\r\n\r\n<p>Dizileri 2 alanda sıralayabiliyoruz. Birincisi anahtara g&ouml;re sıralama, diğeri ise değerlere g&ouml;re sıralama. Bunlarında bir miktar fonksiyonlar ile yapıyoruz.</p>\r\n\r\n<p>T&uuml;m sıralama fonksiyonlarını bir liste halinde yazayım ve bir &ouml;rnek ile a&ccedil;ıklayayım:</p>\r\n', 46, 1),
(50, '<p>Web sayfamız i&ccedil;in yazdırma butonu eklemek istersek JavaScript print metodunu kullanabiliriz.</p>\r\n\r\n<p>Metodun kullanımı aşağıdaki gibidir.</p>\r\n<table>\r\n<p>&lt;script&gt;</p>\r\n\r\n<p>function&nbsp;yazdir()</p>\r\n\r\n<p>{</p>\r\n\r\n<p>window.print();</p>\r\n\r\n<p>}</p>\r\n</table>', 47, 1),
(51, '<p>Neredeyse t&uuml;m programlama dillerinde değişkenler tanımlanarak kullanılırlar. Python dilinde ise değişken kullanmak i&ccedil;in tanımlama işlemine gerek yoktur.</p>\r\n\r\n<p>Bir değişken ilk kullanıldığı anda oluşturulmuş olur.</p>\r\n\r\n<p>x =&nbsp;5</p>\r\n\r\n<p>y =&nbsp;6</p>\r\n\r\n<p>print( x + y )</p>\r\n\r\n<p>Değişkeni kullanabilmek i&ccedil;in t&uuml;r belirtme yani tanımlama işlemine gerek yoktur<a href=\"https://www.btdersleri.com/ders/python-de%C4%9Fi%C5%9Fken-kullan%C4%B1m%C4%B1\">.</a>&nbsp;Atanan verinin t&uuml;r&uuml;ne g&ouml;re değişkenin t&uuml;r&uuml; de otomatik belirlenir. &Uuml;stelik aynı değişkene programın devamında farklı t&uuml;rde bir değer atanırsa, değişkenin t&uuml;r&uuml; de değişecektir.</p>\r\n\r\n<p>x =&nbsp;10</p>\r\n\r\n<p>x =&nbsp;&quot;Zafer&quot;</p>\r\n\r\n<p>print( x )</p>\r\n\r\n<p>Yukarıda x değişkenine ilk anda 10 sayısal değeri atanmış, değişkenin t&uuml;r&uuml; de sayı olarak oluşturulmuştur. Ardından aynı x değişkenine string bir değer atanınca değişkenin t&uuml;r&uuml; otomatik olarak değişecek ve string olacaktır.</p>\r\n\r\n<p>Python dilinde değişken isimlendirme konusundaki kurallar diğer programlama dilleriyle benzerdir.</p>\r\n\r\n<ul>\r\n	<li>Değişken adı harf, sayı veya alt &ccedil;izgi karakteri i&ccedil;erebilir.</li>\r\n	<li>İlk karakter sayı olamaz. Harf veya alt &ccedil;izgi karakteri ile başlamalıdır.</li>\r\n	<li>Değişken adları b&uuml;y&uuml;k k&uuml;&ccedil;&uuml;k harf duyarlıdır<a href=\"https://www.btdersleri.com/ders/python-de%C4%9Fi%C5%9Fken-kullan%C4%B1m%C4%B1\">.</a>&nbsp;X ile x farklı değişkenler olarak kullanılabilir.</li>\r\n</ul>\r\n\r\n<p>Metin t&uuml;r&uuml;ndeki verileri birleştirmek i&ccedil;in + operat&ouml;r&uuml; kullanılır.</p>\r\n\r\n<p>x =&nbsp;&quot;Zafer&quot;</p>\r\n\r\n<p>print(&nbsp;&quot;Hoş geldin &quot;&nbsp;+ x )</p>\r\n\r\n<p>+ operat&ouml;r&uuml; sayılar arasında kullanılırsa toplama işlemi ger&ccedil;ekleşir.</p>\r\n\r\n<p>Bir metin ile sayı arasında + operat&ouml;r&uuml; kullandığımızda ise hata alırız.</p>\r\n\r\n<p>a =&nbsp;5</p>\r\n\r\n<p>b =&nbsp;&quot;No:&quot;</p>\r\n\r\n<p>print&nbsp;( b+a )&nbsp;# hataya sebep olacaktır.</p>\r\n\r\n<h2>Metin (String) T&uuml;r&uuml;ndeki Veriler</h2>\r\n\r\n<p>Python dilinde metinsel ifadeleri belirtmek i&ccedil;in tek ya da &ccedil;ift tırnak kullanabiliriz. Karakterler i&ccedil;in ayrı bir t&uuml;r (char t&uuml;r&uuml;) yoktur. Veri tek bir karakterden oluşuyorsa da t&uuml;r&uuml; string&#39;tir.</p>\r\n\r\n<p>Karakter t&uuml;r&uuml; olmamasına rağmen metinler karakterlerden oluşan bir dizi mantığıyla kullanılırlar ve k&ouml;şeli parantez kullanarak metnin istenen konumundaki karaktere ulaşabiliriz.</p>\r\n\r\n<p>x =&nbsp;&quot;btDersleri&quot;</p>\r\n\r\n<p>print( x[3] )</p>\r\n\r\n<p>Yukarıdaki kodlar &ccedil;alıştırıldığında ekrana &quot;e&quot; yazılacaktır. İndex numaraları Python&#39;da da sıfırdan başlar.</p>\r\n\r\n<p>Aşağıdaki gibi bir kullanım ise metnin i&ccedil;inden par&ccedil;a almakta kullanılır<a href=\"https://www.btdersleri.com/ders/python-de%C4%9Fi%C5%9Fken-kullan%C4%B1m%C4%B1\">.</a>&nbsp;Bir &ccedil;ok dildeki SubString metoduna benzer ancak bazı farkları vardır.</p>\r\n\r\n<p>x =&nbsp;&quot;btDersleri&quot;</p>\r\n\r\n<p>print( x[2:6] )</p>\r\n\r\n<p>Burada ilk sayı alınacak par&ccedil;anın başlangı&ccedil; konumunu belirtir. İkinci sayı ise bitiş konumunu belirtir ancak bitiş konumundaki karakter sonuca dahil edilmez. Başlangı&ccedil; konumu dahil, bitiş konumu ise değildir. Yukarıdaki &ouml;rnek &ccedil;alıştığında ekrana &quot;Ders&quot; yazılır. 6 numaralı konumdaki &quot;l&quot; harfi sonuca dahil edilmez.</p>\r\n\r\n<p>Diğer metin fonksiyonlarını ileriki konularımızda anlatacağız.</p>\r\n\r\n<h2>Python Sayı T&uuml;rleri</h2>\r\n\r\n<p>Python dilinde 3 farklı sayı t&uuml;r&uuml; bulunmaktadır.</p>\r\n\r\n<ul>\r\n	<li>int (tam sayılar i&ccedil;in kullanılır)</li>\r\n	<li>float (ondalık sayılar i&ccedil;in kullanılır)</li>\r\n	<li>complex (karmaşık sayılar i&ccedil;in kullanılır)</li>\r\n</ul>\r\n\r\n<p>Bu t&uuml;r&uuml; biz yazarken belirtmeyiz, verdiğimiz değere g&ouml;re otomatik belirlenir.</p>\r\n\r\n<h3>Int (Integer) Sayı T&uuml;r&uuml;</h3>\r\n\r\n<p>Pozitif ve negatif t&uuml;m tam sayılar i&ccedil;in kullanılır. Uzunluk sınırı yoktur.</p>\r\n\r\n<p>sayi1&nbsp;=&nbsp;10</p>\r\n\r\n<p>sayi2 = -15</p>\r\n\r\n<p>toplam = sayi1 + sayi2</p>\r\n\r\n<p>Yukarıdaki &uuml;&ccedil; değişkenin de t&uuml;r&uuml; int olarak belirlenecektir.</p>\r\n\r\n<h3>Float&nbsp;T&uuml;r&uuml; (Ondalık - Kayan Noktalı Sayılar)&nbsp;</h3>\r\n\r\n<p>Pozitif ve negatif ondalık sayılar i&ccedil;in kullanılır. Ondalık kısmı ayırmak i&ccedil;in nokta (.) kullanılır.</p>\r\n\r\n<p>pi&nbsp;=&nbsp;3.14</p>\r\n\r\n<p>r =&nbsp;5.0</p>\r\n\r\n<p>Değişkenlere bilimsel formatta değer ataması yapabiliriz<a href=\"https://www.btdersleri.com/ders/python-de%C4%9Fi%C5%9Fken-kullan%C4%B1m%C4%B1\">.</a>&nbsp;Bunun i&ccedil;in &quot;e&quot; karakteri kullanılır. &quot;e&quot; karakterinden &ouml;nce yazılan tam veya ondalık sayı, 10&#39;un &quot;e&quot; karakterinden sonra belirtilen kuvveti ile &ccedil;arpılacak demektir. &Ouml;rneğin;</p>\r\n\r\n<p>z&nbsp;= 524e4</p>\r\n\r\n<p>k =&nbsp;2.87e3</p>\r\n\r\n<p>Yukarıda z değişkene atanan değer 524 ile 10 &uuml;zeri 4&#39;&uuml;n &ccedil;arpımıdır. Sonu&ccedil; olarak z değişkeninin değeri 5240000&#39;dir.</p>\r\n\r\n<p>k değişkeninin değeri ise 2870 olacaktır.</p>\r\n\r\n<h3>Complex T&uuml;r&uuml;</h3>\r\n\r\n<p>Matematikte kullanılan karmaşık sayıları ifade etmemizi sağlar. Sanal kısım yazılırken &quot;j&quot; karakteri kullanılır.</p>\r\n\r\n<p>x&nbsp;=&nbsp;4&nbsp;+ 6j</p>\r\n\r\n<p>y = -4j</p>\r\n\r\n<h1>Casting İşlemi (Veri Tipi D&ouml;n&uuml;ş&uuml;m&uuml;)</h1>\r\n\r\n<p>Programlama esnasında bazen bir veriyi o an bulunduğu t&uuml;rden farklı bir t&uuml;re d&ouml;n&uuml;şt&uuml;rmemiz gerekebilir. Buna Casting adı verilir ve bu işlem i&ccedil;in veri t&uuml;rlerinin kendi yapıcı metotları kullanılır.</p>\r\n\r\n<h3>Int tipine d&ouml;n&uuml;şt&uuml;rme</h3>\r\n\r\n<p>int( ) metodu ile ondalık sayıları ya da metin t&uuml;r&uuml;ndeki verileri tam sayı t&uuml;r&uuml;ne d&ouml;n&uuml;şt&uuml;rebiliriz<a href=\"https://www.btdersleri.com/ders/python-de%C4%9Fi%C5%9Fken-kullan%C4%B1m%C4%B1\">.</a>&nbsp;Ondalık sayılar tam sayıya d&ouml;n&uuml;şt&uuml;r&uuml;ld&uuml;ğ&uuml;nde ondalık kısım atılacak yani aşağı yuvarlanmış olacaktır.&nbsp;</p>\r\n\r\n<p>Metinlerin tam sayıya d&ouml;n&uuml;şt&uuml;r&uuml;lebilmesi i&ccedil;inse i&ccedil;inde sayı dışında karakter bulunmaması gerekir.</p>\r\n\r\n<p>x =&nbsp;int(3.9)&nbsp; &nbsp;# x değişkeni 3 olacaktır</p>\r\n\r\n<p>y = int(&quot;55&quot;) # y değişkeni 55 olacaktır</p>\r\n\r\n<p>z = int(&quot;3a&quot;) # hata</p>\r\n\r\n<p>a = 4.7</p>\r\n\r\n<p>k = int( a ) # k değişkeni 4 olacaktır</p>\r\n\r\n<h3>Float t&uuml;r&uuml;ne d&ouml;n&uuml;şt&uuml;rme</h3>\r\n\r\n<p>float( ) metodu ile tam sayıları veya stringleri, float tipine d&ouml;n&uuml;şt&uuml;rebiliriz. Tam sayılar ondalık kısımları 0 olacak şekilde d&ouml;n&uuml;şt&uuml;r&uuml;l&uuml;r. Metinler ise d&ouml;n&uuml;şt&uuml;r&uuml;lebilmeleri i&ccedil;in ondalık sayı yapısına uygun bir ifadeye sahip olmalıdır.</p>\r\n\r\n<p>x =&nbsp;float(&nbsp;2&nbsp;)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;# x değişkeni 2.0 olacaktır</p>\r\n\r\n<p>y =&nbsp;&quot;36&quot;</p>\r\n\r\n<p>z =&nbsp;float( y )&nbsp;&nbsp;&nbsp;# z değişkeni 36.0 olacaktır</p>\r\n\r\n<p>k =&nbsp;float(&quot;3.1&quot;)&nbsp;# k değişkeni 3.1 olacaktır</p>\r\n\r\n<h3>String t&uuml;r&uuml;ne d&ouml;n&uuml;şt&uuml;rme</h3>\r\n\r\n<p>&Ccedil;eşitli t&uuml;rdeki verileri string t&uuml;r&uuml;ne d&ouml;n&uuml;şt&uuml;rmek i&ccedil;in str( ) metodu kullanılır.</p>\r\n\r\n<p>x = str(55)&nbsp;# x değişkeni&nbsp;&quot;55&quot;&nbsp;olacaktır</p>\r\n\r\n<p>y = str(2.5)&nbsp; &nbsp; # y değişkeni&nbsp;&quot;2.5&quot;&nbsp;olacaktır</p>\r\n', 48, 1),
(53, '<table>\r\n	<tbody>\r\n		<tr>\r\n			<td>function siparisVer(text, callback){</td>\r\n		</tr>\r\n		<tr>\r\n			<td>&nbsp;</td>\r\n			<td>&nbsp;console.log(text);</td>\r\n		</tr>\r\n		<tr>\r\n			<td>&nbsp;</td>\r\n			<td>&nbsp;callback();</td>\r\n		</tr>\r\n		<tr>\r\n			<td>&nbsp;</td>\r\n			<td>&nbsp;}</td>\r\n		</tr>\r\n		<tr>\r\n			<td>&nbsp;</td>\r\n			<td>&nbsp;function menu(){</td>\r\n		</tr>\r\n		<tr>\r\n			<td>&nbsp;</td>\r\n			<td>&nbsp;Console.log(&quot;Sipariş alındı&quot;);</td>\r\n		</tr>\r\n		<tr>\r\n			<td>&nbsp;</td>\r\n			<td>&nbsp;};</td>\r\n		</tr>\r\n		<tr>\r\n			<td>&nbsp;</td>\r\n			<td>&nbsp;siparisVer(&quot;Sipariş alınıyor&quot;, men&uuml;);</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n', 50, 1),
(54, '<p>Girilen sitelerin tarayıcılar(browserlar) &uuml;zerinde bıraktığı izlere&nbsp;<strong>cookie</strong>, T&uuml;rk&ccedil;esiyle de&nbsp;<strong>&ccedil;erez</strong>&nbsp;denir. Bu izler siteye tekrar ziyaret edildiğinde yeniden g&ouml;nderilerek bazı şeylerin yeniden hatırlanmasını sağlar.</p>\r\n\r\n<p>Mesela giriş formlarında kullanıcının şifresini ve kullanıcı adını cookieler sayesinde tarayıcıya kaydederek bir sonraki gelişinde bilgilerini yeniden girmek zorunda kalmadan direkt giriş yapabilir.</p>\r\n\r\n<p>Temel olarak kullanıcı bilgilerini hatırlanmasında kullanılan &ccedil;erezleri hayal g&uuml;c&uuml;n&uuml;z&uuml;n el verdiği kadar bir &ccedil;ok alanda da kullanmak m&uuml;mk&uuml;n.</p>\r\n\r\n<h2>Cookie oluşturma</h2>\r\n\r\n<p>PHP&rsquo;de cookie oluşturma işini bir&nbsp;<strong>setcookie()</strong>&nbsp;fonksiyonu ile yapıyoruz. Fonksiyonda tarayıcıya g&ouml;nderilecek ve saklanacak olan değerin anahtarını ve i&ccedil;eriğini belirttiğimiz gibi bir de ne kadar s&uuml;re tarayıcıda saklanacağınıda belirtiyoruz.</p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n			</td>\r\n			<td>\r\n			<p><code>setcookie(</code><code>&quot;&ccedil;erezim&quot;</code><code>, </code><code>&quot;selam d&uuml;nya&quot;</code><code>);</code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>Yukarıdaki &ouml;rnekte&nbsp;<strong>&ccedil;erezim</strong>&nbsp;adında bir cookie oluşturduk ve değerinide&nbsp;<strong>selam d&uuml;nya</strong>&nbsp;yaptık. Ve 3. parametre olarak hi&ccedil; bir şey girmediğimiz i&ccedil;in varsayılan olarak tarayıcı kapatıldığında &ccedil;erez silinecek.</p>\r\n\r\n<p>Eğer &ccedil;erezin bizim istediğimiz bir gelecek tarihte silinmesini istiyorsakta 3. parametreyi devreye sokacağız. İşte bunun i&ccedil;inde bir &ouml;rnek:</p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n			</td>\r\n			<td>\r\n			<p><code>setcookie(</code><code>&quot;&ccedil;erezim&quot;</code><code>, </code><code>&quot;selam d&uuml;nya&quot;</code><code>, time() + (60*60*24));</code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>Şimdi 3. olarak girdiğimiz&nbsp;<strong>time() + (60*60*24)</strong>&nbsp;bu parametre şu anki zamana saniye cinsinden&nbsp;<strong>60*60*24</strong>&nbsp;tam olarak&nbsp;<strong>24</strong>&nbsp;saat yani 1 g&uuml;n eklemiş olduk.</p>\r\n\r\n<p>Bu oluşturduğumuz &ccedil;erezin son kullanma tarihi şuandan itibaren + 24 saat sonra demek oluyor. 1 g&uuml;n sonrasında bu &ccedil;erez siteye girildiğinde&nbsp;<strong>g&ouml;nderilmiyor olacak</strong>.</p>\r\n\r\n<h2>Cookie silme</h2>\r\n\r\n<p>Oluşturduğumuz bir &ccedil;erezi silmek i&ccedil;in yine normal bir &ccedil;erez tanımlarmış gibi&nbsp;<strong>setcookie()</strong>&nbsp;fonksiyonunu kullanıyoruz. Tek fark 3. son kullanma tarihi paramteremize ge&ccedil;miş bir zaman giriyoruz. Bu sayede &ccedil;erezin tarihi dolmuş varsayılıp hemen siliniyor. &Ouml;rnek olarak bu &ccedil;ereze&nbsp;<strong>time() &ndash; 3600</strong>&nbsp;diyerek 1 saat &ouml;ncesini g&ouml;stereceğiz ve &ccedil;erez silinmiş olacak:</p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n			</td>\r\n			<td>\r\n			<p><code>setcookie(</code><code>&quot;&ccedil;erezim&quot;</code><code>, </code><code>&quot;selam d&uuml;nya&quot;</code><code>, time() - 3600);</code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<h2>Cookie kullanımı</h2>\r\n\r\n<p>&Ccedil;erez kullanımı $_COOKIE dizisi &uuml;zerinden yapılır. Bu dizi otomatik olarak o sayfaya g&ouml;nderilen &ccedil;erezlere g&ouml;re oluşur. Yukarıdaki oluşturduğumuz &ccedil;ereze ulaşmak i&ccedil;in aşağıdaki kodu kullanırız, ki bu koddan ne kadar basit ve anlaşılır olduğu belli oluyor:</p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n			</td>\r\n			<td>\r\n			<p><code>echo</code> <code>$_COOKIE</code><code>[</code><code>&#39;&ccedil;erezim&#39;</code><code>];</code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>Ekranda yukarıdaki &ouml;rneğin devamı olarak g&ouml;sterdiğimiz bu &ouml;rnekten &ouml;t&uuml;r&uuml;&nbsp;<strong>selam d&uuml;nya</strong>&nbsp;yazar.</p>\r\n\r\n<h2>Cookie değerini değiştirmek</h2>\r\n\r\n<p>&Ccedil;erezleri oluşturmakta ve silmekte olduğu gibi değerini değiştirmekte de setcookie() fonksiyonunu kullanıyoruz. Ve oluşturmakta olduğu gibi değerini değiştirmekte aynıdır. Sadece &ccedil;erez adına &ouml;nceden tanımladığımız adı yazmamız yeterli. Eğer &ccedil;erez yoksa oluşturulur varsa değeri değiştirilir.</p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n\r\n			<p>2</p>\r\n\r\n			<p>3</p>\r\n\r\n			<p>4</p>\r\n			</td>\r\n			<td>\r\n			<p><code>setcookie(</code><code>&quot;&ccedil;erezim&quot;</code><code>, </code><code>&quot;selam d&uuml;nya&quot;</code><code>);</code></p>\r\n\r\n			<p><code>setcookie(</code><code>&quot;&ccedil;erezim&quot;</code><code>, </code><code>&quot;merhaba d&uuml;nya&quot;</code><code>);</code></p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code>echo</code> <code>$_COOKIE</code><code>[</code><code>&#39;&ccedil;erezim&#39;</code><code>];</code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>Ekranda&nbsp;<strong>merhaba d&uuml;nya</strong>&nbsp;yazar.</p>\r\n\r\n<h2>Cookie tanımlanmış mı diye bakmak</h2>\r\n\r\n<p>T&uuml;m değişkenlerin varlığını kontrol edecek olan isset() fonksiyonu ile bir &ccedil;erezin tanımlanıp tanımlanmadığını bulabiliriz. Kullanımı if ifadesi ile olacak olan bu fonksiyonun bu kullanımını hen&uuml;z bu ifadeyi anlatmadığımız i&ccedil;in &ouml;rnek g&ouml;stermiyorum.</p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n			</td>\r\n			<td>\r\n			<p><code>echo</code> <code>isset(</code><code>$_COOKIE</code><code>[</code><code>&#39;olmayan&#39;</code><code>]);</code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>Ekranda bir şey yazmaz,&nbsp;<strong>FALSE</strong>&nbsp;değeri d&ouml;ner. &Ccedil;&uuml;nk&uuml; b&ouml;yle bir &ccedil;erez tanımlamadık. Tanımlanmış bir &ccedil;erez olsaydı ekranda olumlu manada&nbsp;<strong>1</strong>&nbsp;yazardı.</p>\r\n', 51, 1);
INSERT INTO `tbl_topic` (`id`, `topictext`, `titleId`, `userId`) VALUES
(55, '<p>PHP de session olayını cookie ile karşılaştırarak yapalım. &Ccedil;&uuml;nk&uuml; kullanım ve uygulama olarak cookie ile aynı ama teknik olarak farklı. Session aynı &ccedil;erezlerde olduğu gibi&nbsp;<strong>$_SESSION</strong>&nbsp;global dizisi ile okunur, fakat yazılması i&ccedil;in &ccedil;erezlerdeki gibi bir fonksiyona ihtiya&ccedil;&nbsp;<strong>duymaz</strong>.</p>\r\n\r\n<p>&Ccedil;erezlerin son kullanma tarihini biz belirlerken sessionlar tarayıcının kapatılmasıyla silinir. Yani siteye girildiğinde oluşturacağımız sessionlar, girenin sayfayı kapatmasıyla silinecektir.</p>\r\n\r\n<p>Kullanım, oluşturma ve silme dışındaki asıl teknik farkı da sessionların tarayıcıya direkt olarak&nbsp;<strong>tanımlanmıyor</strong>&nbsp;olması.</p>\r\n\r\n<h2>Session ve cookie arasındaki fark</h2>\r\n\r\n<p>Bunu ş&ouml;yle a&ccedil;ıklayayım; bir &ccedil;erez tanımladığımızda bu &ccedil;erezin adı ve değeri tarayıcıya a&ccedil;ıkca g&ouml;nderilir ve bu değer istenilen s&uuml;re boyunca tarayıcıda a&ccedil;ık bir şekilde saklanır.</p>\r\n\r\n<p>Sessionda ise kaydedilen değer ve değerin adı tarayıcıya&nbsp;<strong>g&ouml;nderilmez</strong>. Onun yerine&nbsp;<strong>PHPSESSID</strong>&nbsp;adında i&ccedil;inde uzun bir session id değeri bulunan bir &ccedil;erez tanımlanır. Ve bizim oluşturduğumuz sessionlar sunucuda saklanır ve girenlerin g&ouml;nderdiği PHPSESSID kimliğine g&ouml;re kime ait oldukları bulunur ve yeniden d&uuml;zenlenir.</p>\r\n\r\n<p><img alt=\"kredi kartı\" src=\"https://www.phpr.org/wp-content/uploads/2010/06/kart.gif\" style=\"float:right; height:156px; width:184px\" />Bu olayı daha iyi anlamanız i&ccedil;in&nbsp;<strong>kredi kartı &ouml;rneği</strong>ni vereyim: Session olayı aynı kredi kartı kullanımı gibidir. Banka size bir kart verir bu kartın i&ccedil;inde size &ouml;zel bir anahtar kod yer alır. Ama para ve bilgiler bankada saklanır.</p>\r\n\r\n<p>Siz bilgilerinize ve paralarınıza ulaşmak i&ccedil;in kartı kullanırsınız. Sessionda size direkt olarak bilgileri vermek yerine bir&nbsp;<strong>PHPSESSID</strong>&nbsp;adında değer verir ve o değer &uuml;zerinden size ait olan verileri okur ve d&uuml;zenler.</p>\r\n\r\n<h2>Session nerelerde kullanılabilir</h2>\r\n\r\n<p>Oturumun kapanmasıyla silinmesi ve tekniği nedeniyle session verileri daha &ccedil;ok kullanıcılarınızın sitenize giriş yaptığında onları tarayıcıyı kapatana kadar giriş yapmış şekilde tutmanıza ve bazı yerlerde sanal sepet uygulamarını ger&ccedil;ekleştirmenizde kullanılır.</p>\r\n\r\n<h2>Session oluşturma</h2>\r\n\r\n<p>Başta da dediğim gibi sessionları tek bir&nbsp;<strong>$_SESSION</strong>&nbsp;global dizisi &uuml;zerinden okuyup, oluşturup, silebiliyoruz. Tek &ouml;nemli mevzu session kullanımına ya da oluşturulmasına başlamadan &ouml;nce bir kere her sayfanın en başında&nbsp;<strong>session_start()</strong>&nbsp;fonksiyonunu yazmalıyız, bu fonksiyon session olayını kullanıma hazırlar ve olmazsa olmazdır.</p>\r\n\r\n<p>Bazı sunucularda session kullanımı otomatik olarak hep a&ccedil;ıktır, a&ccedil;ık olan sunucularda&nbsp;<strong>session_start()</strong>&nbsp;yazmaya &ccedil;alışırsanız&nbsp;<strong>hata verir</strong>. Bu durumda bu fonksiyonu kullanmaya gerek yoktur.</p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n\r\n			<p>2</p>\r\n			</td>\r\n			<td>\r\n			<p><code>session_start();</code></p>\r\n\r\n			<p><code>$_SESSION</code><code>[</code><code>&#39;mesaj&#39;</code><code>] = </code><code>&#39;Selam d&uuml;nya!&#39;</code><code>;</code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>Yukarıda ilk &ouml;nce session kullanımını başlattık ve ardından aynı bir dizi tanımlarmış gibi $_SESSION global dizisine&nbsp;<strong>mesaj</strong>&nbsp;anahtarına&nbsp;<strong>Selam d&uuml;nya!</strong>&nbsp;değerini verdik. Yani mesaj adında bir session oluşturduk ve değerini Selam d&uuml;nya! yaptık.</p>\r\n\r\n<p>Bu oluşturduğumuz değer giren kişinin tarayıcısı kapatılmadığı s&uuml;rece gezdiği her sayfaya tekrar geri g&ouml;nderilecek ve bir &ouml;nceki sayfada yaptığı işlemleri, kullanıcı adı ya da şifre gibi verileri bu şekilde yeniden hatırlanmasını sağlayacak.</p>\r\n\r\n<p>Mesela session ile bir sayfada giren kişinin adını belirtmesini isteyip t&uuml;m sayfalarda onun bu adını hatırlatabilirim.</p>\r\n\r\n<h2>Session dizi (array) atama</h2>\r\n\r\n<p>Sessionlara yazı, sayı gibi değerler atadığımız gibi aynı zamanda dizi (<strong>array</strong>) da atayabiliriz. Bunu yapmak i&ccedil;in sıradan bir dizi tanımlıyormuş gibi davranman yeterli.</p>\r\n\r\n<p>Session dizi &ouml;rneği:</p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n\r\n			<p>2</p>\r\n			</td>\r\n			<td>\r\n			<p><code>session_start();</code></p>\r\n\r\n			<p><code>$_SESSION</code><code>[</code><code>&#39;uyeler&#39;</code><code>] = </code><code>array</code><code>(</code><code>&#39;Musa&#39;</code><code>, </code><code>&#39;Hakan&#39;</code><code>, </code><code>&#39;Orhan&#39;</code><code>);</code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>Bu şekilde sessionların i&ccedil;erisinde dizi verileride taşıyabiliriz. Ve başka sayfalarda &ccedil;ağırdığımızda aynen dizi şeklinde kullanmaya devam edebiliriz.</p>\r\n\r\n<h2>Session silme</h2>\r\n\r\n<p>Daha &ouml;ncelerde de bahsettiğimiz gibi yine burada da session silme işleminde de&nbsp;<strong>unset()</strong>&nbsp;fonksiyonunu kullanıyoruz.</p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n\r\n			<p>2</p>\r\n\r\n			<p>3</p>\r\n			</td>\r\n			<td>\r\n			<p><code>session_start();</code></p>\r\n\r\n			<p><code>$_SESSION</code><code>[</code><code>&#39;gezegen&#39;</code><code>] = </code><code>&#39;d&uuml;nya&#39;</code><code>;</code></p>\r\n\r\n			<p><code>unset(</code><code>$_SESSION</code><code>[</code><code>&#39;gezegen&#39;</code><code>]);</code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>Yukarıda &ouml;nce bir session oluşturduk ve hemen ardından da onu sildik.</p>\r\n\r\n<h2>T&uuml;m sessionları silmek</h2>\r\n\r\n<p>Bu işlem i&ccedil;in de&nbsp;<strong>session_destroy()</strong>&nbsp;fonksiyonunu kullanacağız. Bu fonksiyon tanımlanmış t&uuml;m sessionları yok eder.</p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n\r\n			<p>2</p>\r\n			</td>\r\n			<td>\r\n			<p><code>session_start();</code></p>\r\n\r\n			<p><code>session_destroy();</code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<h2>Session var mı diye kontrol etmek</h2>\r\n\r\n<p>Yine diğer &ccedil;alışmalarda varlığını kontrol etmekte kullandığımız&nbsp;<strong>isset()</strong>&nbsp;fonksiyonunu kullanacağız. Bu fonksiyon eğer i&ccedil;ine yazdığımız session varsa olumlu yoksa olumsuz d&ouml;ner.</p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n\r\n			<p>2</p>\r\n			</td>\r\n			<td>\r\n			<p><code>session_start();</code></p>\r\n\r\n			<p><code>echo</code> <code>isset(</code><code>$_SESSION</code><code>[</code><code>&#39;deneme&#39;</code><code>]);</code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<h2>Session kullanımı hakkında bir &ouml;rnek</h2>\r\n\r\n<p>Hemen anlattıklarımızı pekiştirip pratik yapmak &uuml;zere basit bir &ouml;rnek g&ouml;sterelim;</p>\r\n\r\n<p>&Ouml;ncelikle ilk.php adında bir php dosyası oluşturalım ve i&ccedil;inde bir session oluşturup bir başka php sayfasında o veriyi okutmayı deneyelim.</p>\r\n\r\n<p><strong>ilk.php</strong>:</p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n\r\n			<p>2</p>\r\n\r\n			<p>3</p>\r\n\r\n			<p>4</p>\r\n\r\n			<p>5</p>\r\n\r\n			<p>6</p>\r\n			</td>\r\n			<td>\r\n			<p><code>&lt;?php</code></p>\r\n\r\n			<p><code>session_start();</code></p>\r\n\r\n			<p><code>$_SESSION</code><code>[</code><code>&#39;isim&#39;</code><code>] = </code><code>&#39;Musa&#39;</code><code>;</code></p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code>echo</code> <code>&#39;Sessionumuzu oluşturduk.&#39;</code><code>;</code></p>\r\n\r\n			<p><code>?&gt;</code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>Bu sayfayı oluşturup &ccedil;alıştırdıktan sonra 2. php sayfamızıda yapalım. Bunun adıda&nbsp;<strong>son.php</strong>&nbsp;olsun.</p>\r\n\r\n<p><strong>son.php</strong>:</p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n\r\n			<p>2</p>\r\n\r\n			<p>3</p>\r\n\r\n			<p>4</p>\r\n\r\n			<p>5</p>\r\n			</td>\r\n			<td>\r\n			<p><code>&lt;?php</code></p>\r\n\r\n			<p><code>session_start();</code></p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code>echo</code> <code>&#39;Daha &ouml;nceden kaydedilmiş isim: &#39;</code> <code>. </code><code>$_SESSION</code><code>[</code><code>&#39;isim&#39;</code><code>];</code></p>\r\n\r\n			<p><code>?&gt;</code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>ilk.php yi ziyaret ettikten sonra bu sayfaya geldiğimizde ekranda&nbsp;<strong>Daha &ouml;nceden kaydedilmiş isim: Musa</strong>&nbsp;yazacaktır. Eğer ilk.php ye uğramadan yani sessionumuzu oluşturmadan son.php ye girmeye &ccedil;alışırsak b&ouml;yle bir session oluşturulmadığı i&ccedil;in kod hata verecektir.</p>\r\n', 52, 1),
(56, '<p>PHP altı farklı genel veri tipine sahip. Bunları &ouml;nce sırayla listeleyeyim ve sonra kısaca değineyim.</p>\r\n\r\n<ol>\r\n	<li><strong>Tamsayı</strong>&nbsp;(Integer): 5 ya da 2157 gibi.</li>\r\n	<li><strong>&Ccedil;ift</strong>&nbsp;(Double): 10,5 ya da 1,5 gibi.</li>\r\n	<li><strong>Alfan&uuml;merik</strong>, yazı ya da metin t&uuml;r&uuml; de diyebiliriz (String): &ldquo;phpr.org&rdquo; gibi.</li>\r\n	<li><strong>Mantıksal</strong>&nbsp;(Boolean): true ya da false yani yanlış ya da doğru.</li>\r\n	<li><strong>Nesne</strong>&nbsp;(Object)</li>\r\n	<li><strong>Dizi</strong>&nbsp;(Array)</li>\r\n</ol>\r\n\r\n<p>PHP&rsquo;de değişken tipleri oluşturduğunuz değişkenlere uyguladığınız değişikliliklere g&ouml;re otomatik olarak belirlenir. Yani bir değişkene ilk tanımlamasında bir sayısal değer verdiyseniz tipi otomatik olarak tamsayı ya da duruma g&ouml;re &ccedil;ift olur.</p>\r\n\r\n<p>Mesela bir tam sayı tipinde değişken tanımlayalım:</p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n			</td>\r\n			<td>\r\n			<p><code>$sayi</code> <code>= 12345;</code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>oluşturduğumuz&nbsp;<strong>$sayi</strong>&nbsp;değişkeni tipi otomatik olarak tamsayı oldu.</p>\r\n\r\n<p>Eğer sayıları tırnak i&ccedil;ine alıp yazsaydık bu değerler sayı yerine alfan&uuml;merik muamelesi g&ouml;r&uuml;rd&uuml;. &Ccedil;&uuml;nk&uuml;&nbsp;<strong>tırnak i&ccedil;inde</strong>&nbsp;yazacağımız değerler alfan&uuml;merik olur</p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n\r\n			<p>2</p>\r\n			</td>\r\n			<td>\r\n			<p><code>$yanlis</code> <code>= </code><code>&quot;12345&quot;</code><code>;</code></p>\r\n\r\n			<p><code>$dogru</code> <code>= </code><code>&quot;selam d&uuml;nya!&quot;</code><code>;</code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>Sayıları matematiksel olarak kullanacaksak onları tırnak i&ccedil;inde&nbsp;<strong>yazmamamız</strong>&nbsp;gerekiyor. Buradan &ccedil;ıkarmamız gereken ders budur.</p>\r\n', 53, 1);
INSERT INTO `tbl_topic` (`id`, `topictext`, `titleId`, `userId`) VALUES
(57, '<p>PHP ifadeleri ve operat&ouml;rleri</p>\r\n\r\n<p>PHP&rsquo;de yapacağımız ve yaptıracağımız her şey i&ccedil;in PHP ifadelerini kullanırız. Adı &uuml;st&uuml;nde &ccedil;alışmamızı ifade edecek şeylere PHP ifadeleri deriz. Genel olarak&nbsp;<strong>&lt;?php</strong>&nbsp;ve&nbsp;<strong>?&gt;</strong>&nbsp;arasına yazacağımız her şey bir PHP ifadesidir.</p>\r\n\r\n<p>Bunlardan bir &ccedil;oğunu ayrı başlıklar altında anlattım ve şimdi ise yeni bir başlık altında operat&ouml;rlere ve mantıksal ifadelere değineceğim.</p>\r\n\r\n<p>Şimdi ifadelerimizde ve değişkenler &uuml;zerinde bir takım işlemler yapmamızı ve koşullar belirtmemizi sağlayacak olan operat&ouml;rlerden başlayalım, bol etiketli bir yazı olacak.</p>\r\n\r\n<h1>PHP operat&ouml;rleri</h1>\r\n\r\n<p>Bu başlık altında sırayla aritmetik operat&ouml;rler, atama operat&ouml;rlerini, karşılaştırma operat&ouml;rleri, mantıksal operat&ouml;rler ve diğer operat&ouml;rleri anlatacağım.</p>\r\n\r\n<h2>Aritmetik operat&ouml;rler</h2>\r\n\r\n<p>Aritmetik operat&ouml;rler gayet&nbsp;<strong>basit</strong>. İlkokulda &ouml;ğrendiğimiz şeyler, bunlara&nbsp;<strong>matematiksel operat&ouml;rler</strong>de diyebilirsin. Bu operat&ouml;rler ile istediğin değerlerin toplamasını, &ccedil;ıkarmasını, b&ouml;lmesini ve &ccedil;arpmasını yapabilirsin.</p>\r\n\r\n<p>İşte PHP&rsquo;de aritmetik operat&ouml;rler, isimleri ve &ouml;rnekleri:</p>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td><strong>Operat&ouml;r</strong></td>\r\n			<td><strong>İsim</strong></td>\r\n			<td><strong>&Ouml;rnek</strong></td>\r\n		</tr>\r\n		<tr>\r\n			<td>+</td>\r\n			<td>Toplama</td>\r\n			<td>$a + $b</td>\r\n		</tr>\r\n		<tr>\r\n			<td>&ndash;</td>\r\n			<td>&Ccedil;ıkartma</td>\r\n			<td>$a &ndash; $b</td>\r\n		</tr>\r\n		<tr>\r\n			<td>*</td>\r\n			<td>&Ccedil;arpma</td>\r\n			<td>$a * $b</td>\r\n		</tr>\r\n		<tr>\r\n			<td>/</td>\r\n			<td>B&ouml;lme</td>\r\n			<td>$a / $b</td>\r\n		</tr>\r\n		<tr>\r\n			<td>%</td>\r\n			<td>Mod&uuml;l</td>\r\n			<td>$a % $b</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>Bunların bir de uygulamasını g&ouml;sterelim:</p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n\r\n			<p>2</p>\r\n\r\n			<p>3</p>\r\n\r\n			<p>4</p>\r\n\r\n			<p>5</p>\r\n			</td>\r\n			<td>\r\n			<p><code>$a</code> <code>= 10;</code></p>\r\n\r\n			<p><code>$b</code> <code>= 20;</code></p>\r\n\r\n			<p><code>$c</code> <code>= 5;</code></p>\r\n\r\n			<p><code>$sonuc</code> <code>= </code><code>$a</code> <code>+ </code><code>$b</code> <code>- </code><code>$c</code><code>;</code></p>\r\n\r\n			<p><code>echo</code> <code>$sonuc</code><code>;</code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>Ekranda&nbsp;<strong>25</strong>&nbsp;yazar.</p>\r\n\r\n<p><strong>$a</strong>&nbsp;değişkeninin değeri 10,&nbsp;<strong>$b</strong>&nbsp;değişkeninin değeri 20,&nbsp;<strong>$c</strong>&nbsp;değişkeninin değeri ise 5.&nbsp;<strong>$sonuc</strong>&nbsp;değişkenine de&nbsp;<strong>$a</strong>&nbsp;değişkeni artı&nbsp;<strong>$b</strong>&nbsp;değişkeni ve eksi<strong>&nbsp;$c</strong>&nbsp;değişkeni dedik, bu da&nbsp;<strong>$sonuc</strong>&nbsp;değişkenine&nbsp;<strong>10 + 20 &ndash; 5</strong>&nbsp;işlemini yaptırarak&nbsp;<strong>25</strong>&nbsp;değerini verdi.</p>\r\n\r\n<p>Bir tane de işe yarar bir deneme ile g&ouml;sterelim:</p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n\r\n			<p>2</p>\r\n\r\n			<p>3</p>\r\n\r\n			<p>4</p>\r\n			</td>\r\n			<td>\r\n			<p><code>$yil</code> <code>= 2010;</code></p>\r\n\r\n			<p><code>$dogum_yili</code> <code>= 1992;</code></p>\r\n\r\n			<p><code>$yas</code> <code>= </code><code>$yil</code> <code>- </code><code>$dogum_yili</code><code>;</code></p>\r\n\r\n			<p><code>echo</code> <code>$yas</code><code>;</code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>Ekranda&nbsp;<strong>18</strong>&nbsp;yazar.&nbsp;<strong>2010</strong>&nbsp;yılından doğum yılımızı &ccedil;ıkarttık ve yaşımızı bulduk.</p>\r\n\r\n<h2>Karakter katarı operat&ouml;rleri</h2>\r\n\r\n<p>İki ya da daha fazla karakteri ard arda eklemek i&ccedil;in kullanacağın bu operat&ouml;r&uuml; aslında bir ka&ccedil; ders &ouml;ncesinde &ouml;rnek olarak kullandım. Orada anlamamış olabilirsin. Ama şimdi bu eksikliği gidereceğiz.</p>\r\n\r\n<p>Yazıları ve diğer değerleri yan yana birleştirmek ve başka değerlere eklemek i&ccedil;in &ldquo;<strong>.</strong>&rdquo; (nokta) operat&ouml;r&uuml;n&uuml; kullanacağız. Hemen bir &ouml;rnek ile g&ouml;stereyim yine:</p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n\r\n			<p>2</p>\r\n\r\n			<p>3</p>\r\n\r\n			<p>4</p>\r\n\r\n			<p>5</p>\r\n			</td>\r\n			<td>\r\n			<p><code>$isim</code> <code>= </code><code>&#39;Musa&#39;</code><code>;</code></p>\r\n\r\n			<p><code>$mesaj</code> <code>= </code><code>&#39;Selam &#39;</code><code>;</code></p>\r\n\r\n			<p><code>$sonuc</code> <code>= </code><code>$mesaj</code> <code>. </code><code>$isim</code><code>;</code></p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code>echo</code> <code>$sonuc</code><code>;</code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>Ekranda&nbsp;<strong>Selam Musa</strong>&nbsp;yazar. Burada&nbsp;<strong>$sonuc</strong>&nbsp;değişkenine&nbsp;<strong>$mesaj</strong>&nbsp;değişkeni ile&nbsp;<strong>$isim</strong>&nbsp;değişkenini yan yana ekledik.</p>\r\n\r\n<p>Bir &ouml;rnek daha g&ouml;stereyim:</p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n\r\n			<p>2</p>\r\n\r\n			<p>3</p>\r\n\r\n			<p>4</p>\r\n			</td>\r\n			<td>\r\n			<p><code>$isim</code> <code>= </code><code>&#39;Musa&#39;</code><code>;</code></p>\r\n\r\n			<p><code>$sonuc</code> <code>= </code><code>&#39;Selam &#39;</code> <code>. </code><code>$isim</code><code>;</code></p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code>echo</code> <code>$sonuc</code><code>;</code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>Bu sefer de aynı şey yazar. Farklı yaptığımız şey;&nbsp;<strong>$mesaj</strong>&nbsp;değişkeni kullanmak yerine sonu&ccedil; değişkenine direkt mesajımızı verdik ve yanına nokta operat&ouml;r&uuml; ile&nbsp;<strong>$isim</strong>&nbsp;değişkenini birleştirdik.</p>\r\n\r\n<h2>Tek tırnak ile &ccedil;ift tırnak arasındaki fark</h2>\r\n\r\n<p>Bu konuda son olarak dikkat etmemiz gereken ufak bir farklı yoldan bahsedeceğim. Bu da PHP de&nbsp;<strong>&ldquo;</strong>&nbsp;(&ccedil;ift tırnak) ile&nbsp;<strong>&lsquo;</strong>&nbsp;(tek tırnak) arasında bazı kullanım farklılıkları olması. Tek tırnak ile vereceğimiz değerlerin i&ccedil;erisine değişken yazamayız, hemen &ouml;rnek ile g&ouml;sterelim:</p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n\r\n			<p>2</p>\r\n\r\n			<p>3</p>\r\n\r\n			<p>4</p>\r\n			</td>\r\n			<td>\r\n			<p><code>$isim</code> <code>= </code><code>&#39;Musa&#39;</code><code>;</code></p>\r\n\r\n			<p><code>$mesaj</code> <code>= </code><code>&#39;Selam $isim&#39;</code><code>;</code></p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code>echo</code> <code>$mesaj</code><code>;</code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>Ekranda&nbsp;<strong>Selam $isim</strong>&nbsp;yazar. &Ccedil;&uuml;nk&uuml; biz&nbsp;<strong>değişkeni de tek tırnak i&ccedil;inde yazdık</strong>. Bu nedenle o&nbsp;<strong>$isim</strong>&lsquo;e bir değişken değil yazı g&ouml;z&uuml;yle baktı. Eğer&nbsp;<strong>$isim</strong>&nbsp;değişkenini yazdırmak istiyorsan işte o zaman bir yukarıda verdiğimiz &ouml;rnekteki gibi yapmalısın.</p>\r\n\r\n<p>Bu bahsettiğim olay yanlızca tek tırnak i&ccedil;in ge&ccedil;erli. &Ccedil;ift tırnakda ise bu durum daha farklı. &Ccedil;ift tırnak i&ccedil;erisine yazacağımız değişkenlerin değerleri yazar. Yani nokta operat&ouml;r&uuml;n&uuml; kullanmadan da değişkenleri &ccedil;ift tırnak i&ccedil;inde birleştirebiliyoruz. Hemen yine bir &ouml;rnek geliyor:</p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n\r\n			<p>2</p>\r\n\r\n			<p>3</p>\r\n\r\n			<p>4</p>\r\n			</td>\r\n			<td>\r\n			<p><code>$isim</code> <code>= </code><code>&#39;Musa&#39;</code><code>;</code></p>\r\n\r\n			<p><code>$mesaj</code> <code>= </code><code>&quot;Selam $isim&quot;</code><code>;</code></p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code>echo</code> <code>$mesaj</code><code>;</code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&Ccedil;ok dikkat edin bir &ouml;nceki &ouml;rnek ile aynı fakat sadece mesaj değişkeninde tek tırnak değil &ccedil;ift tırnak kullandık. Ve bu durumda ekranda&nbsp;<strong>Selam Musa</strong>&nbsp;yazacak. &Ccedil;&uuml;nk&uuml; &ccedil;ift tırnak i&ccedil;ine yazılan değişkenlerin değerlerini verir. Fakat tek tırnakda b&ouml;yle bir durum&nbsp;<strong>s&ouml;z konusu değil</strong>.</p>\r\n\r\n<p>Buradaki ama&ccedil; bazen dolar işaretini kendi başına kullanmamız gereken bazı yerlerde PHP&rsquo;nin o dolar işaretini değişken sanmamasını sağlamaktır. Mesela ekrana &ldquo;&Uuml;cret: 100$&rdquo; yazdırmak istediğimizde eğer &ccedil;ift tırnak kullanırsak PHP hata verir. &Ccedil;&uuml;nk&uuml; &ccedil;ift tırnak i&ccedil;erisinde dolar işareti &ouml;zel karakter ve değişken ifadesi olarak algılanır. Bu durumlarda tek tırnak ya da ka&ccedil;ış operat&ouml;r&uuml; kullanılır.</p>\r\n\r\n<h2>Ka&ccedil;ış operat&ouml;r&uuml;</h2>\r\n\r\n<p>Ka&ccedil;ış operat&ouml;r&uuml; ters b&ouml;l&uuml;m işaretidir &ldquo;&rdquo;.</p>\r\n\r\n<p>Ka&ccedil;ış operat&ouml;r&uuml;n&uuml;n kullanımınıda hemen bir &ouml;rnek ile g&ouml;sterelim:</p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n\r\n			<p>2</p>\r\n			</td>\r\n			<td>\r\n			<p><code>$mesaj</code> <code>= </code><code>&quot;&Uuml;cret: 100$&quot;</code><code>;</code></p>\r\n\r\n			<p><code>echo</code> <code>$mesaj</code><code>;</code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>Ekranda&nbsp;<strong>&Uuml;cret: 100$</strong>&nbsp;yazar. &Ccedil;ift tırnak ile $ dolar işaretini kullandık ama başına ters b&ouml;l&uuml;m işareti koyduk. Bu nedenle o dolar işaretini değişken olarak algılamadı.</p>\r\n\r\n<p>&Ccedil;ift tırnakta değişken kullandığımız i&ccedil;in $ dolar işaretinden ka&ccedil;makta kullandığımız bu operat&ouml;r&uuml; aynı zamanda &ccedil;ift tırnak i&ccedil;ine &ccedil;ift tırnak i&ccedil;eren bir şey yazarkende kullanabiliriz. Hemen buna da bir &ouml;rnek:</p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n\r\n			<p>2</p>\r\n			</td>\r\n			<td>\r\n			<p><code>$mesaj</code> <code>= </code><code>&quot;Musa: &quot;bu ka&ccedil;ış operat&ouml;r&uuml;n&uuml; anlamak i&ccedil;in iyi bir &ouml;rnek&quot; dedi.&quot;</code><code>;</code></p>\r\n\r\n			<p><code>echo</code> <code>$mesaj</code><code>;</code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>Ekranda&nbsp;<strong>Musa: &ldquo;bu ka&ccedil;ış operat&ouml;r&uuml;n&uuml; anlamak i&ccedil;in iyi bir &ouml;rnek&rdquo; dedi.</strong>&nbsp;yazar. &Ccedil;ift tırnak i&ccedil;inde &ccedil;ift tırnak işaretini kullansaydık PHP hata verirdi. Ama ka&ccedil;ış operat&ouml;r&uuml; sayesinde b&ouml;yle bir hata almadık ve kendimizi ifade ettik.</p>\r\n\r\n<p>Biraz karışık bir konu gibi gelebilir ama aslında basit. Son olarak hepsini bir &ouml;rnek ile g&ouml;stereyim:</p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n\r\n			<p>2</p>\r\n\r\n			<p>3</p>\r\n\r\n			<p>4</p>\r\n\r\n			<p>5</p>\r\n\r\n			<p>6</p>\r\n\r\n			<p>7</p>\r\n\r\n			<p>8</p>\r\n\r\n			<p>9</p>\r\n\r\n			<p>10</p>\r\n\r\n			<p>11</p>\r\n			</td>\r\n			<td>\r\n			<p><code>$isim</code> <code>= </code><code>&quot;Musa&quot;</code><code>;</code></p>\r\n\r\n			<p><code>$mesaj</code> <code>= </code><code>&quot;Merhaba &quot;</code><code>;</code></p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code>$sonuc</code> <code>= </code><code>$mesaj</code> <code>. </code><code>$isim</code><code>; </code><code>// Değeri: Merhaba Musa</code></p>\r\n\r\n			<p><code>$sonuc</code> <code>= </code><code>&quot;$mesaj $isim&quot;</code><code>; </code><code>// Değeri: Merhaba Musa</code></p>\r\n\r\n			<p><code>$sonuc</code> <code>= </code><code>&#39;Selam &#39;</code> <code>. </code><code>$isim</code><code>; </code><code>// Değeri: Selam Musa</code></p>\r\n\r\n			<p><code>$sonuc</code> <code>= </code><code>&#39;Değerimiz: 100,000,000$&#39;</code><code>; </code><code>//Değeri: Değerimiz: 100,000,000$</code></p>\r\n\r\n			<p><code>$sonuc</code> <code>= </code><code>&quot;Bu hatalı bir fiyat: 100$&quot;</code><code>; </code><code>//PHP hata verir!</code></p>\r\n\r\n			<p><code>$sonuc</code> <code>= </code><code>&quot;Bu hatasız bir fiyat: 100$&quot;</code><code>; </code><code>//Değeri: Bu hatasız bir fiyat: 100$</code></p>\r\n\r\n			<p><code>$sonuc</code> <code>= </code><code>&quot;Tırnak denemesi: &quot;PHP&quot;&quot;</code><code>; </code><code>//Değeri: Tırnak denemesi: &quot;PHP&quot;</code></p>\r\n\r\n			<p><code>$sonuc</code> <code>= </code><code>&quot;Hatalı bir &ouml;rnek, &quot;</code><code>ka&ccedil;ış karakteri</code><code>&quot; kullanmadan tırnak a&ccedil;tık&quot;</code><code>; </code><code>//PHP hata verir.</code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<h2>Atama operat&ouml;rleri</h2>\r\n\r\n<p>Atama operat&ouml;rleri ile değişkenlere&nbsp;<strong>değer atarız</strong>. Temel atama operat&ouml;r&uuml; eşittirdir (=). Bunu ge&ccedil;en &ouml;rneklerde ve anlatımlarda anladığını varsayıyorum. Tek bir eşittir işareti, istenilen değişkene istenilen değeri atamamızı sağlar.</p>\r\n\r\n<p>Diğer operat&ouml;rlerini de bir tablo &uuml;zerinde g&ouml;sterelim. Bu operat&ouml;rler birleşik atama operat&ouml;rleri. Bunlar bir değişkenin sonuna bir değer eklemekte ya da değişkendeki sonuca bir sayı eklememizi kolaylaştırır. Basit bir &ouml;rnek ile kavrayabileceğimiz bu birleşik atama operat&ouml;rlerini &ouml;nce tabloda g&ouml;sterelim:</p>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td><strong>Operat&ouml;r</strong></td>\r\n			<td><strong>Kullanışı</strong></td>\r\n			<td><strong>Karşılığı</strong></td>\r\n		</tr>\r\n		<tr>\r\n			<td>+=</td>\r\n			<td>$a += $b</td>\r\n			<td>$a = $a + $b</td>\r\n		</tr>\r\n		<tr>\r\n			<td>-=</td>\r\n			<td>$a -= $b</td>\r\n			<td>$a = $a &ndash; $b</td>\r\n		</tr>\r\n		<tr>\r\n			<td>*=</td>\r\n			<td>$a *= $b</td>\r\n			<td>$a = $a * $b</td>\r\n		</tr>\r\n		<tr>\r\n			<td>/=</td>\r\n			<td>$a /= $b</td>\r\n			<td>$a = $a / $b</td>\r\n		</tr>\r\n		<tr>\r\n			<td>%=</td>\r\n			<td>$a %= $b</td>\r\n			<td>$a = $a % $b</td>\r\n		</tr>\r\n		<tr>\r\n			<td>.=</td>\r\n			<td>$a .= $b</td>\r\n			<td>$a = $a . $b</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&Ouml;rnek bir atama operat&ouml;r&uuml; kullanımı:</p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n\r\n			<p>2</p>\r\n\r\n			<p>3</p>\r\n\r\n			<p>4</p>\r\n\r\n			<p>5</p>\r\n			</td>\r\n			<td>\r\n			<p><code>$a</code> <code>= 10;</code></p>\r\n\r\n			<p><code>$b</code> <code>= 20;</code></p>\r\n\r\n			<p><code>$a</code> <code>+= </code><code>$b</code><code>;</code></p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code>echo</code> <code>$a</code><code>;</code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>Ekranda&nbsp;<strong>30</strong>&nbsp;yazar. Birleşik atama operat&ouml;r&uuml; kullanarak toplama işlemi yaptık ve varolan değişkenin değerine atadığım değişkenin değerini ekledik.</p>\r\n\r\n<p>Bu birleşik atama operat&ouml;r&uuml; bizim değişkenin sonuna ekleyeceğimiz ya da &ccedil;ıkartacağımız değerler i&ccedil;in aynı değişkeni tekrar yazdırmayarak bize kolaylık sağlar.</p>\r\n\r\n<h2>Bir değer arttırma ya da eksiltme</h2>\r\n\r\n<p>Bir değişkendeki sayısal değeri bir arttırmak i&ccedil;in &ccedil;ift artı (++) operat&ouml;r&uuml;n&uuml;, bir değer eksiltmek i&ccedil;in de &ccedil;ift eksi (- -) operat&ouml;r&uuml;n&uuml; kullanırız.</p>\r\n\r\n<p>&Ouml;rnek kullanımı:</p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n\r\n			<p>2</p>\r\n\r\n			<p>3</p>\r\n			</td>\r\n			<td>\r\n			<p><code>$a</code> <code>= 10;</code></p>\r\n\r\n			<p><code>$a</code><code>++;</code></p>\r\n\r\n			<p><code>echo</code> <code>$a</code><code>;</code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>Ekranda&nbsp;<strong>11</strong>&nbsp;yazar. $a değişkeninin değerini 1 arttırdık ve ekrana yazdırdık.</p>\r\n\r\n<p>İfadeleri ve operat&ouml;rleri bir başlık altında toplayınca konu yoğunluğundan dolayı ikiye ayırmak durumunda kaldım. Bu yazıda bir &ouml;nceki yazıda anlatmadığımız diğer ifadeleri ve diğer operat&ouml;rleri anlatacağım.</p>\r\n\r\n<p>Kaldığımız yerden karşılaştırma operat&ouml;rlerini anlatmaya başlayarak devam ediyorum.</p>\r\n\r\n<h2>Karşılaştırma operat&ouml;rleri</h2>\r\n\r\n<p>Karşılaştırma operat&ouml;rleri ile adı &uuml;st&uuml;nde birden fazla değerleri kendi aralarında karşılaştırmasını yapacağız. Mesela $a değişkeninde bulunan bir değer $b değişkeni ile aynı mı? Ya da daha mı b&uuml;y&uuml;k? Gibi karşılaştırmaları bu operat&ouml;rler ile yapacağız.</p>\r\n\r\n<p>Karşılaştırma operat&ouml;rlerini bir tablo &uuml;zerinde g&ouml;sterelim:</p>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td><strong>Operat&ouml;r</strong></td>\r\n			<td><strong>İsim</strong></td>\r\n			<td><strong>Kullanılışı</strong></td>\r\n		</tr>\r\n		<tr>\r\n			<td>==</td>\r\n			<td>Eşittir</td>\r\n			<td>$a == $b</td>\r\n		</tr>\r\n		<tr>\r\n			<td>===</td>\r\n			<td>Denktir</td>\r\n			<td>$a === $b</td>\r\n		</tr>\r\n		<tr>\r\n			<td>!=</td>\r\n			<td>Eşit değildir</td>\r\n			<td>$a != $b</td>\r\n		</tr>\r\n		<tr>\r\n			<td>!==</td>\r\n			<td>Denk değildir</td>\r\n			<td>$a !== $b</td>\r\n		</tr>\r\n		<tr>\r\n			<td>&lt;&gt;</td>\r\n			<td>Eşit değildir</td>\r\n			<td>$a &lt;&gt; $b</td>\r\n		</tr>\r\n		<tr>\r\n			<td>&lt;</td>\r\n			<td>K&uuml;&ccedil;&uuml;kt&uuml;r</td>\r\n			<td>$a &lt; $b</td>\r\n		</tr>\r\n		<tr>\r\n			<td>&gt;</td>\r\n			<td>B&uuml;y&uuml;kt&uuml;r</td>\r\n			<td>$a $b</td>\r\n		</tr>\r\n		<tr>\r\n			<td>&lt;=</td>\r\n			<td>K&uuml;&ccedil;&uuml;k ve eşittir</td>\r\n			<td>$a &lt;= $b</td>\r\n		</tr>\r\n		<tr>\r\n			<td>&gt;=</td>\r\n			<td>B&uuml;y&uuml;k ve eşittir</td>\r\n			<td>$a &gt;= $b</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>Karşılaştırma operat&ouml;r&uuml; olan &ccedil;ift eşittir işaretinde dikkat etmemiz gereken ufak bir ayrıntı var. &Ccedil;ift eşittir işareti iki değeri karşılaştırmakta kullanılır, tek eşittir işareti ise değer atamakta kullanılır. Bu y&uuml;zden karşılaştırma operat&ouml;r&uuml; olan &ccedil;ift eşittir kullanmak istediğiniz zaman tek eşittir yapmadığınızdan emin olun.</p>\r\n\r\n<h2>Karşılaştırma operat&ouml;rleri nasıl kullanılır?</h2>\r\n\r\n<p>Karşılaştırma operat&ouml;rlerini daha &ccedil;ok soru sormak gibi değerlendirebiliriz. Bu operat&ouml;rleri koşul gerektirecek olan &ouml;ğreneceğimiz bir&nbsp;<strong>sonraki ifadelerde kullanacağız</strong>. Kullanacağımız bu operat&ouml;rlerin anlamlarına &ouml;rnek olarak şunu diyebilirim:</p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n\r\n			<p>2</p>\r\n			</td>\r\n			<td>\r\n			<p><code>$a</code> <code>= 10;</code></p>\r\n\r\n			<p><code>$b</code> <code>= 20;</code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>Yukarıda a ve b değişkenlerine değer atadım. Şimdi karşılaştırma operat&ouml;r&uuml; ile &ldquo;<strong>$a == $b</strong>&rdquo; dediğimde aslında &ldquo;<strong>$a değişkeni $b değişkenine eşit mi?</strong>&rdquo; diye bir soru sormuş oldum. Bu karşılaştırmanın sonucu yanlış yani&nbsp;<strong>FALSE</strong>&nbsp;d&ouml;necektir.</p>\r\n\r\n<p>Farklı bir operat&ouml;r ile daha deneyelim: &ldquo;$b &gt; $a&rdquo; burada da &ldquo;<strong>$b değişkeni $a değişkeninden b&uuml;y&uuml;k m&uuml;?</strong>&rdquo; diye sormuş oldum. Bu karşılaştırmanın cevabı da doğru yani&nbsp;<strong>TRUE</strong>&nbsp;d&ouml;necektir.</p>\r\n\r\n<h2>Mantıksal operat&ouml;rler</h2>\r\n\r\n<p>Mantıksal operat&ouml;rler ile&nbsp;<strong>birden fazla</strong>&nbsp;karşılaştırmayı değerlendirip, birleştirebiliriz. Mesela bir değişkenin hem 0 dan b&uuml;y&uuml;k m&uuml; hem de 100 den k&uuml;&ccedil;&uuml;k m&uuml; diye bir karşılaştırmasını mantıksal operat&ouml;rler sayesinde yaparız.</p>\r\n\r\n<p>Mantıksal operat&ouml;rleri bir tabloda g&ouml;sterelim:</p>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td><strong>Operat&ouml;r</strong></td>\r\n			<td><strong>İsim</strong></td>\r\n			<td><strong>Kullanılışı</strong></td>\r\n			<td><strong>A&ccedil;ıklaması</strong></td>\r\n		</tr>\r\n		<tr>\r\n			<td>!</td>\r\n			<td>Olumsuzsa</td>\r\n			<td>!$a</td>\r\n			<td>$a&rsquo;nın değeri olumsuz yani FALSE ise TRUE yani doğru d&ouml;ner. Aksini yapar olumsuz mu diye sorar.</td>\r\n		</tr>\r\n		<tr>\r\n			<td>&amp;&amp;</td>\r\n			<td>Ve</td>\r\n			<td>$a &amp;&amp; $b</td>\r\n			<td>$a ve $b&rsquo;nin değeri olumlu ise olumlu yani TRUE d&ouml;ner, ikisinden birisi olumsuz ise olumsuz yani FALSE d&ouml;ner.</td>\r\n		</tr>\r\n		<tr>\r\n			<td>||</td>\r\n			<td>Ya da</td>\r\n			<td>$a || $b</td>\r\n			<td>$a&rsquo;nın değeri ya da $b&rsquo;nin değeri olumlu ise olumlu d&ouml;ner. Birisinin ya da ikisininde olumlu olması yeterlidir.</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>Bunlara bir &ouml;rnekte başta dediğimiz; bir değişkenin değeri &ldquo;0 dan b&uuml;y&uuml;k ve 100 den k&uuml;&ccedil;&uuml;kse&rdquo; karşılaştırmasını yapalım. Bunun i&ccedil;in uygulayacağımız koşul ş&ouml;yledir: &ldquo;<strong>$a &gt; 0 &amp;&amp; $a &lt; 100</strong>&rdquo; Bunun anlamı $a değişkeni 0 dan b&uuml;y&uuml;kse ve 100 den k&uuml;&ccedil;&uuml;ksedir. Eğer $a&rsquo;daki sayı 0 ile 100 arasında ise bu koşulun sonucu olumlu d&ouml;ner.</p>\r\n\r\n<h2>Hata bastırma operat&ouml;r&uuml;</h2>\r\n\r\n<p>Hata bastırma operat&ouml;r&uuml; (<strong>@</strong>) et işaretidir. Her deyimin &ouml;n&uuml;nde kullanılabilir. Hata oluşturacak yerlerin başına bunu koyduğunuzda ekrana bir hata &ccedil;ıktısı verdirmemeye yarar.</p>\r\n\r\n<p>Hatayı g&ouml;rmezden gelmeye ve sonucu olumsuz yapmamaya yarar.</p>\r\n\r\n<p>Diyelim bir b&ouml;lme işlemi yaptırıyoruz, bu b&ouml;lme işlemine belki 0 rakamını da yazabiliriz. 0 yazdığımızda PHP bir rakamı 0 a b&ouml;lemeyeceği i&ccedil;in hata verecektir. Bu durumda bu operat&ouml;r kullanarak hatayı bastırabiliriz. &Ouml;rnek:</p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n\r\n			<p>2</p>\r\n\r\n			<p>3</p>\r\n\r\n			<p>4</p>\r\n			</td>\r\n			<td>\r\n			<p><code>$a</code> <code>= 10;</code></p>\r\n\r\n			<p><code>$b</code> <code>= 0;</code></p>\r\n\r\n			<p><code>$sonuc</code> <code>= @(</code><code>$a</code><code>/</code><code>$b</code><code>);</code></p>\r\n\r\n			<p><code>echo</code> <code>$sonuc</code><code>;</code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>Ekranda hata yazmaz onun yerine olumsuz sonu&ccedil; d&ouml;ner.</p>\r\n\r\n<h1>PHP koşullu ifadeleri</h1>\r\n\r\n<p>Ve nihayet &ouml;ğrendiğimiz bu operat&ouml;rleri kullanarak karar verdirme zamanı geldi! Yapılan &ccedil;alışmalarda ve sayfalarda mantıklı ve işe yarar sonu&ccedil;lar verdirtebilmek i&ccedil;in kodlarımızın karar vermesi gerekiyor.</p>\r\n\r\n<p>PHP&rsquo;de karar verdirtebilmek i&ccedil;in ise&nbsp;<strong>if</strong>&nbsp;gibi bazı ifadeleri kullanacağız. Ve bu ifadeler ile kodlarımıza bir mantıklı bir ama&ccedil; ve sonu&ccedil; oluşturacağız.</p>\r\n\r\n<h2>İf ifadeleri</h2>\r\n\r\n<p>PHP&rsquo;de if ile kodlarımıza kararlar verdirtebiliriz. T&uuml;rk&ccedil;e anlamı&nbsp;<strong>eğer</strong>&nbsp;olan if ifadesi i&ccedil;in bir koşula ihtiyacımız ve koşul sonucunda yapmasını istediğimiz koda ihtiyacımız var.</p>\r\n\r\n<p>If&rsquo;in temel şekli ş&ouml;yledir:</p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n\r\n			<p>2</p>\r\n\r\n			<p>3</p>\r\n			</td>\r\n			<td>\r\n			<p><code>if</code><code>( koşul ) {</code></p>\r\n\r\n			<p><code>// koşul olumlu ise &ccedil;alışacak kodlar</code></p>\r\n\r\n			<p><code>}</code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>Hemen bir &ouml;rnek ile a&ccedil;ıklayıp g&ouml;sterelim:</p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n\r\n			<p>2</p>\r\n\r\n			<p>3</p>\r\n\r\n			<p>4</p>\r\n			</td>\r\n			<td>\r\n			<p><code>$a</code> <code>= 20;</code></p>\r\n\r\n			<p><code>if</code><code>(</code><code>$a</code> <code>&amp;amp;amp;amp;amp;amp;gt; 10) {</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;</code><code>echo</code> <code>&#39;a değişkeni 10 dan b&uuml;y&uuml;kt&uuml;r&#39;</code><code>;</code></p>\r\n\r\n			<p><code>}</code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>İlk olarak $a değişkenine 20 değerini verdik sonrasında if ile &ldquo;eğer $a değişkeni 10 dan b&uuml;y&uuml;kse aşağıdaki kodları &ccedil;alıştır&rdquo; dedik. Yani bu durumda ekranda &ldquo;a değişkeni 10 dan b&uuml;y&uuml;kt&uuml;r&rdquo; yazacaktır. Eğer $a değişkenine 5 değerini verseydik ekranda hi&ccedil;bir şey yazmazdı.</p>\r\n\r\n<h2>If birden fazla koşul uygulama</h2>\r\n\r\n<p>Mantıksal operat&ouml;rler ile if&rsquo;in i&ccedil;erisine birden fazla karşılaştırma ger&ccedil;ekleştirebiliriz. Mantıksal operat&ouml;rlerde verdiğimiz bu &ouml;rneği de hemen if&rsquo;i kullanarak g&ouml;sterelim.</p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n\r\n			<p>2</p>\r\n\r\n			<p>3</p>\r\n\r\n			<p>4</p>\r\n\r\n			<p>5</p>\r\n			</td>\r\n			<td>\r\n			<p><code>$a</code> <code>= 10;</code></p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code>if</code><code>(</code><code>$a</code> <code>&amp;amp;amp;amp;amp;amp;gt; 0 &amp;amp;amp;amp;amp;amp;amp;&amp;amp;amp;amp;amp;amp;amp; </code><code>$a</code> <code>&amp;amp;amp;amp;amp;amp;lt; 100) {</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;</code><code>echo</code> <code>&#39;a değişkeni 0-100 arasında&#39;</code><code>;</code></p>\r\n\r\n			<p><code>}</code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>Burada eğer $a değişkeni 0 dan b&uuml;y&uuml;k ve $a değişkeni 100 den k&uuml;&ccedil;&uuml;k ise aşağıdaki kodları &ccedil;alıştır dedik. Ve $a değişkeni değerine 10 verdiğimiz i&ccedil;in ekranda&nbsp;<strong>a değişkeni 0-100 arasında</strong>&nbsp;yazacaktır.</p>\r\n\r\n<p>Eğer koşullar ger&ccedil;ekleşmiyorsa { &hellip; } parantez i&ccedil;erisine aldığımız kodlar &ccedil;alışmayacaktır.</p>\r\n\r\n<h2>Else ifadeleri</h2>\r\n\r\n<p>Else&rsquo;nin T&uuml;rk&ccedil;e anlamı&nbsp;<strong>değilse</strong>dir. Yani if koşullar olumlu olduğunda { &hellip; } parantez i&ccedil;erisindeki kodları &ccedil;alıştırırken else&rsquo;yi kullanarak eğer koşullar ger&ccedil;ekleşmediyse de bir başka kod bloğunu &ccedil;alıştırabiliriz.</p>\r\n\r\n<p>Yukarıdaki &ouml;rneğimizin &uuml;zerinde uygulayarak g&ouml;sterelim:</p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n\r\n			<p>2</p>\r\n\r\n			<p>3</p>\r\n\r\n			<p>4</p>\r\n\r\n			<p>5</p>\r\n\r\n			<p>6</p>\r\n\r\n			<p>7</p>\r\n			</td>\r\n			<td>\r\n			<p><code>$a</code> <code>= 200;</code></p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code>if</code><code>(</code><code>$a</code> <code>&amp;amp;amp;amp;amp;amp;gt; 0 &amp;amp;amp;amp;amp;amp;amp;&amp;amp;amp;amp;amp;amp;amp; </code><code>$a</code> <code>&amp;amp;amp;amp;amp;amp;lt; 100) {</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;</code><code>echo</code> <code>&#39;a değişkeni 0-100 arasında&#39;</code><code>;</code></p>\r\n\r\n			<p><code>} </code><code>else</code> <code>{</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;</code><code>echo</code> <code>&#39;a değişkeni 0-100 arasında DEĞİL&#39;</code><code>;</code></p>\r\n\r\n			<p><code>}</code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>Burada eğer koşullar doğru değilse&nbsp;<strong>a değişkeni 0-100 arasında DEĞİL</strong>&nbsp;yaz dedik. Ve bu seferde $a değişkenine&nbsp;<strong>200</strong>&nbsp;değerini verdiğimiz i&ccedil;in ekranda &ldquo;<strong>a değişkeni 0-100 arasında DEĞİL</strong>&rdquo; yazacaktır.</p>\r\n\r\n<p>Hem if hem de else olayına bir &ouml;rnek daha g&ouml;sterelim. Ehliyet almak i&ccedil;in 18 yaşını doldurmuş olmak gerekiyor. Şimdi if ve else kullanarak bu durumu ifade edelim:</p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n\r\n			<p>2</p>\r\n\r\n			<p>3</p>\r\n\r\n			<p>4</p>\r\n\r\n			<p>5</p>\r\n\r\n			<p>6</p>\r\n\r\n			<p>7</p>\r\n\r\n			<p>8</p>\r\n\r\n			<p>9</p>\r\n\r\n			<p>10</p>\r\n			</td>\r\n			<td>\r\n			<p><code>$yil</code> <code>= 2010;</code></p>\r\n\r\n			<p><code>$dogum_yili</code> <code>= 1992;</code></p>\r\n\r\n			<p><code>$yas</code> <code>= </code><code>$yil</code> <code>- </code><code>$dogum_yili</code><code>;</code></p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code>if</code><code>(</code><code>$yas</code> <code>&amp;amp;amp;amp;amp;amp;gt;= 18) {</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;</code><code>echo</code> <code>&#39;Ehliyet alabilirsin&#39;</code><code>;</code></p>\r\n\r\n			<p><code>} </code><code>else</code> <code>{</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;</code><code>$kalan_yil</code> <code>= 18 - </code><code>$yas</code><code>;</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;</code><code>echo</code> <code>&#39;Ehliyet almak i&ccedil;in &#39;</code> <code>. </code><code>$kalan_yil</code> <code>. </code><code>&#39; yıla daha ihtiyacın var.&#39;</code><code>;</code></p>\r\n\r\n			<p><code>}</code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>Yukarıda hem yaş hesaplama hem de if ile bir ehliyet alabilirlik testi yaptık. Eğer yaşımız 18 den b&uuml;y&uuml;k ya da eşit ise ekranda Ehliyet alabilirsin yazacaktır. Eğer 18 den k&uuml;&ccedil;&uuml;k ya da eşit değilse yaştan 18&rsquo;i &ccedil;ıkartıp 18 olmasına kalan yılı bularak ekrana ehliyet almak i&ccedil;in ka&ccedil; yıla ihtiyacımız olacağını yazacaktır.</p>\r\n\r\n<h2>Elseif ifadeleri</h2>\r\n\r\n<p>Else değilse demekti if ise eğer demekti, yani bu da demek oluyor &ldquo;değilse eğer&rdquo;. Bu ifade ile bir koşul uymuyorsa hemen ardından başka bir koşul deneyebiliyoruz. Mesela elseif ile bir puan değerlendirmesi yapalım. Notumuz eğer 5 ise pekiyi 4 ise iyi 3 ise orta 2 ise ge&ccedil;er 1 ise zayıf yazdıralım.</p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n\r\n			<p>2</p>\r\n\r\n			<p>3</p>\r\n\r\n			<p>4</p>\r\n\r\n			<p>5</p>\r\n\r\n			<p>6</p>\r\n\r\n			<p>7</p>\r\n\r\n			<p>8</p>\r\n\r\n			<p>9</p>\r\n\r\n			<p>10</p>\r\n\r\n			<p>11</p>\r\n\r\n			<p>12</p>\r\n\r\n			<p>13</p>\r\n			</td>\r\n			<td>\r\n			<p><code>$puan</code> <code>= 5;</code></p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code>if</code><code>(</code><code>$puan</code> <code>== 5) {</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;</code><code>echo</code> <code>&#39;Pekiyi&#39;</code><code>;</code></p>\r\n\r\n			<p><code>} </code><code>elseif</code><code>(</code><code>$puan</code> <code>== 4) {</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;</code><code>echo</code> <code>&#39;İyi&#39;</code><code>;</code></p>\r\n\r\n			<p><code>} </code><code>elseif</code><code>(</code><code>$puan</code> <code>== 3) {</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;</code><code>echo</code> <code>&#39;Orta&#39;</code><code>;</code></p>\r\n\r\n			<p><code>} </code><code>elseif</code><code>(</code><code>$puan</code> <code>== 2) {</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;</code><code>echo</code> <code>&#39;Ge&ccedil;er&#39;</code><code>;</code></p>\r\n\r\n			<p><code>} </code><code>elseif</code><code>(</code><code>$puan</code> <code>== 1) {</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;</code><code>echo</code> <code>&#39;Zayıf&#39;</code><code>;</code></p>\r\n\r\n			<p><code>}</code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>Ekranda&nbsp;<strong>pekiyi</strong>&nbsp;yazar.</p>\r\n\r\n<h2>Switch ifadesi</h2>\r\n\r\n<p>Sadece bir veya birden fazla eşitliği kontrol etmek istediğiniz durumlarda kullanılabilecek bir ifadedir. Switch ile yapılacak işlemin aynısı&nbsp;<strong>else if</strong>&nbsp;ile de yapabilirsiniz, fakat eğer sadece bir veya daha fazla eşitliğin karşılaştırılması &uuml;zerine bir ifade kullanılmak isteniyorsa bu işlem i&ccedil;in&nbsp;<strong>switch</strong>&nbsp;daha uygundur.</p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n\r\n			<p>2</p>\r\n\r\n			<p>3</p>\r\n\r\n			<p>4</p>\r\n\r\n			<p>5</p>\r\n\r\n			<p>6</p>\r\n\r\n			<p>7</p>\r\n\r\n			<p>8</p>\r\n\r\n			<p>9</p>\r\n\r\n			<p>10</p>\r\n\r\n			<p>11</p>\r\n\r\n			<p>12</p>\r\n\r\n			<p>13</p>\r\n\r\n			<p>14</p>\r\n\r\n			<p>15</p>\r\n\r\n			<p>16</p>\r\n\r\n			<p>17</p>\r\n\r\n			<p>18</p>\r\n\r\n			<p>19</p>\r\n\r\n			<p>20</p>\r\n\r\n			<p>21</p>\r\n			</td>\r\n			<td>\r\n			<p><code>// if ile yapmak istediğimizde:</code></p>\r\n\r\n			<p><code>if</code><code>(</code><code>$meyve</code> <code>== </code><code>&#39;karpuz&#39;</code><code>) {</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;</code><code>echo</code> <code>&#39;karpuz se&ccedil;ildi&#39;</code><code>;</code></p>\r\n\r\n			<p><code>} </code><code>else</code> <code>if</code><code>(</code><code>$meyve</code> <code>== </code><code>&#39;&ccedil;ilek&#39;</code><code>) {</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;</code><code>echo</code> <code>&#39;&ccedil;ilek se&ccedil;ildi&#39;</code><code>;</code></p>\r\n\r\n			<p><code>} </code><code>else</code> <code>if</code><code>(</code><code>$meyve</code> <code>== </code><code>&#39;armut&#39;</code><code>) {</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;</code><code>echo</code> <code>&#39;armut se&ccedil;ildi&#39;</code><code>;</code></p>\r\n\r\n			<p><code>}</code></p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code>// aynısı switch ile yapalım:</code></p>\r\n\r\n			<p><code>switch</code><code>(</code><code>$meyve</code><code>) { </code><code>// karşılaştırılacak değişkeni ifade ediyoruz</code></p>\r\n\r\n			<p><code>case</code> <code>&#39;karpuz&#39;</code><code>: </code><code>// eğer karpuz&#39;a eşitse</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;</code><code>echo</code> <code>&#39;karpuz se&ccedil;ildi&#39;</code><code>;</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;</code><code>break</code><code>; </code><code>// eğer bu se&ccedil;enek eşleştiyse karşılaştırmaya devam etme</code></p>\r\n\r\n			<p><code>case</code> <code>&#39;&ccedil;ilek&#39;</code><code>:</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;</code><code>echo</code> <code>&#39;&ccedil;ilek se&ccedil;ildi&#39;</code><code>;</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;</code><code>break</code><code>;</code></p>\r\n\r\n			<p><code>case</code> <code>&#39;armut&#39;</code><code>:</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;</code><code>echo</code> <code>&#39;armut se&ccedil;ildi&#39;</code><code>;</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;</code><code>break</code><code>;</code></p>\r\n\r\n			<p><code>}</code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>Bu tip durumlarda switch kullanmak if kullanmaktan daha performanslı ve kısa oluyor.</p>\r\n\r\n<p>Alt alta case ifadesini kullanarak birden fazla değer karşılaştırması yapabilirsiniz.</p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n\r\n			<p>2</p>\r\n\r\n			<p>3</p>\r\n\r\n			<p>4</p>\r\n\r\n			<p>5</p>\r\n\r\n			<p>6</p>\r\n\r\n			<p>7</p>\r\n\r\n			<p>8</p>\r\n\r\n			<p>9</p>\r\n\r\n			<p>10</p>\r\n			</td>\r\n			<td>\r\n			<p><code>switch</code><code>(</code><code>$meyve</code><code>) {</code></p>\r\n\r\n			<p><code>case</code> <code>&#39;kiraz&#39;</code><code>:</code></p>\r\n\r\n			<p><code>case</code> <code>&#39;&ccedil;ilek&#39;</code><code>:</code></p>\r\n\r\n			<p><code>case</code> <code>&#39;karpuz&#39;</code><code>:</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;</code><code>echo</code> <code>&#39;kırmızı renkli meyve&#39;</code><code>;</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;</code><code>break</code><code>;</code></p>\r\n\r\n			<p><code>case</code> <code>&#39;armut&#39;</code><code>:</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;</code><code>echo</code> <code>&#39;sarı renkli meyve&#39;</code><code>;</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;</code><code>break</code><code>;</code></p>\r\n\r\n			<p><code>}</code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>Eğer switch i&ccedil;erisinde ifade edilen hi&ccedil; bir değerde eşleşmediğinde yapmak istediğiniz bir şey varsa da bunu &ldquo;default&rdquo; ile ifade ediyoruz;</p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n\r\n			<p>2</p>\r\n\r\n			<p>3</p>\r\n\r\n			<p>4</p>\r\n\r\n			<p>5</p>\r\n\r\n			<p>6</p>\r\n\r\n			<p>7</p>\r\n\r\n			<p>8</p>\r\n\r\n			<p>9</p>\r\n\r\n			<p>10</p>\r\n\r\n			<p>11</p>\r\n			</td>\r\n			<td>\r\n			<p><code>switch</code><code>(</code><code>$meyve</code><code>) {</code></p>\r\n\r\n			<p><code>case</code> <code>&#39;muz&#39;</code><code>:</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;</code><code>echo</code> <code>&#39;muz var!&#39;</code><code>;</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;</code><code>break</code><code>;</code></p>\r\n\r\n			<p><code>case</code> <code>&#39;karpuz&#39;</code><code>:</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;</code><code>echo</code> <code>&#39;karpuz var!&#39;</code><code>;</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;</code><code>break</code><code>;</code></p>\r\n\r\n			<p><code>default</code><code>:</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;</code><code>echo</code> <code>&#39;bu meyveden yok!&#39;</code><code>;</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;</code><code>break</code><code>;</code></p>\r\n\r\n			<p><code>}</code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&nbsp;</p>\r\n', 54, 1);
INSERT INTO `tbl_topic` (`id`, `topictext`, `titleId`, `userId`) VALUES
(58, '<p>aşlangı&ccedil; seviyesinin son dersi olan fonksiyonlar bir şeyler inşa etmeye başlamamız i&ccedil;in &ouml;ğrenmemiz gereken en&nbsp;<strong>harika</strong>&nbsp;derslerden birisi. Teorik olarak matematik dersinde g&ouml;rd&uuml;ğ&uuml;m&uuml;z fonksiyonlar gibidir.</p>\r\n\r\n<p>Oluşturduğumuz bir değişken ve i&ccedil;ine yazdığımız kodları istediğimiz yerde tanımladığımız fonksiyonun adıyla &ccedil;alıştırıp&nbsp;<strong>tekrar tekrar</strong>&nbsp;kullanabiliyoruz.</p>\r\n\r\n<p>Gerek &ccedil;alışmalarımızda &ccedil;ok sık&nbsp;<strong>tekrar edeceğimiz kodları</strong>&nbsp;bir yerde paket haline getirip bir fonksiyon adıyla &ccedil;ağırmak i&ccedil;in, gerekse işe yarar kodları belli başlıklar altında derleyip d&uuml;zenli &ccedil;alışmalar yapmak i&ccedil;in g&ouml;z bebeğimiz olan fonksiyonları &ouml;ğrenmeye hazır olun.</p>\r\n\r\n<h2>PHP fonksiyon kullanımı</h2>\r\n\r\n<p>PHP&rsquo;nin kendi i&ccedil;inde y&uuml;zlerce fonksiyonu vardır. Diğer derslerde g&ouml;rd&uuml;ğ&uuml;m&uuml;z&nbsp;<strong>isset()</strong>,&nbsp;<strong>empty()</strong>,&nbsp;<strong>unset()</strong>&nbsp;gibi. Fonksiyon oluşturmak ve kullanmak gayet basit, ama basit olduğu gibi derin konuları da var.</p>\r\n\r\n<p>İlk &ouml;nce nasıl bir fonksiyon oluşturacağımızı g&ouml;sterelim:</p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n\r\n			<p>2</p>\r\n\r\n			<p>3</p>\r\n			</td>\r\n			<td>\r\n			<p><code>function</code> <code>selam_ver() {</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;</code><code>echo</code> <code>&#39;Selam!&#39;</code><code>;</code></p>\r\n\r\n			<p><code>}</code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>Yukarıda&nbsp;<strong>selam_ver()</strong>&nbsp;adında bir fonksiyon oluşturduk. Bu şekilde bir kodu &ccedil;alıştırsak ekrana bir &ccedil;ıktı vermez. &Ccedil;&uuml;nk&uuml; şuan sadece bir fonksiyon tanımladık, i&ccedil;ine yazılan kodların &ccedil;alışması i&ccedil;in o fonksiyonu &ccedil;ağırmamız gerekiyor.</p>\r\n\r\n<p>Hemen bu fonksiyonun altına&nbsp;<strong>selam_ver();</strong>&nbsp;yazacak olursak eğer, işte o zaman ekranda&nbsp;<strong>Selam!</strong>&nbsp;yazar.</p>\r\n\r\n<p>Hemen başka bir &ouml;rnek daha verelim:</p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n\r\n			<p>2</p>\r\n\r\n			<p>3</p>\r\n\r\n			<p>4</p>\r\n\r\n			<p>5</p>\r\n\r\n			<p>6</p>\r\n\r\n			<p>7</p>\r\n			</td>\r\n			<td>\r\n			<p><code>function</code> <code>rakamlar() {</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;</code><code>for</code><code>(</code><code>$sayi</code> <code>= 0; </code><code>$sayi</code><code>&lt;10; </code><code>$sayi</code><code>++) {</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>echo</code> <code>$sayi</code><code>;</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;</code><code>}</code></p>\r\n\r\n			<p><code>}</code></p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code>rakamlar(); </code><code>// oluşturduğumuz fonksiyonu &ccedil;ağıralım</code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>Ekranda&nbsp;<strong>0123456789</strong>&nbsp;yazacaktır.</p>\r\n\r\n<h2>Fonksiyonlara parametre ekleme</h2>\r\n\r\n<p>Yukarıdaki &ouml;rnekte yaptığımız fonksiyonlar dışarıdan veri almadan, her seferinde &ccedil;ağrıldıklarında aynı şeyi &ccedil;alıştıracak olan fonksiyonlardı. Ama şimdi bu fonksiyonlara bir ka&ccedil; parametre eklettirerek farklı kullanımlara kapılarını a&ccedil;abiliriz.</p>\r\n\r\n<p>Hemen parametreli bir fonksiyon yapalım:</p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n\r\n			<p>2</p>\r\n\r\n			<p>3</p>\r\n\r\n			<p>4</p>\r\n\r\n			<p>5</p>\r\n\r\n			<p>6</p>\r\n			</td>\r\n			<td>\r\n			<p><code>function</code> <code>topla(</code><code>$sayi1</code><code>, </code><code>$sayi2</code><code>) {</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;</code><code>$sonuc</code> <code>= </code><code>$sayi1</code> <code>+ </code><code>$sayi2</code><code>;</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;</code><code>echo</code> <code>$sonuc</code><code>;</code></p>\r\n\r\n			<p><code>}</code></p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code>topla(5, 10);</code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>Şimdi&nbsp;<strong>topla</strong>&nbsp;adında bir fonksiyon oluşturduk ve buna 2 adet&nbsp;<strong>parametre</strong>&nbsp;ekledik.&nbsp;<strong>$sayi1</strong>&nbsp;ve&nbsp;<strong>$sayi2</strong>&nbsp;parametreleri bizim o fonksiyonu kullanırken yazacağım değerlerin y&uuml;kleyeceği değişkenlerin adı.</p>\r\n\r\n<p>Biz&nbsp;<strong>topla(5, 10)</strong>&nbsp;dediğimizde fonksiyon i&ccedil;inde $sayi1 değişkeninin değeri 5, $sayi2 değişkeninin değeri ise 10 olacak. Ve ekranda da 15 yazacaktır.</p>\r\n\r\n<p>Parametreli fonksiyona bir başka &ouml;rnek daha verelim:</p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n\r\n			<p>2</p>\r\n\r\n			<p>3</p>\r\n\r\n			<p>4</p>\r\n\r\n			<p>5</p>\r\n\r\n			<p>6</p>\r\n\r\n			<p>7</p>\r\n\r\n			<p>8</p>\r\n\r\n			<p>9</p>\r\n\r\n			<p>10</p>\r\n\r\n			<p>11</p>\r\n			</td>\r\n			<td>\r\n			<p><code>function</code> <code>bolunur_mu(</code><code>$bu</code><code>, </code><code>$buna</code><code>) {</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;</code><code>$kalan</code> <code>= </code><code>$bu</code> <code>% </code><code>$buna</code><code>;</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;</code><code>if</code><code>(</code><code>$kalan</code> <code>== 0) {</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>echo</code> <code>$bu</code> <code>. </code><code>&#39; sayısı &#39;</code> <code>. </code><code>$buna</code> <code>. </code><code>&#39; sayısına b&ouml;l&uuml;n&uuml;r!&#39;</code><code>;</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;</code><code>} </code><code>else</code> <code>{</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>echo</code> <code>$bu</code> <code>. </code><code>&#39; sayısı &#39;</code> <code>. </code><code>$buna</code> <code>. </code><code>&#39; sayısına b&ouml;l&uuml;nmez! (kalan: &#39;</code><code>.</code><code>$kalan</code><code>.</code><code>&#39;)&#39;</code><code>;</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;</code><code>}</code></p>\r\n\r\n			<p><code>}</code></p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code>bolunur_mu(10, 2);</code></p>\r\n\r\n			<p><code>bolunur_mu(25, 10);</code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>İki rakamın birbirine b&ouml;l&uuml;n&uuml;p b&ouml;l&uuml;nmediğini kontrol eden bir fonksiyon yaptık. Ve bu fonksiyonu 2 farklı değerde kullanıp &ccedil;ağırdık. Bu &ccedil;alışmanın sonunda ekranda yazacak olanlar:</p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><code>10 sayısı 2 sayısına b&ouml;l&uuml;n&uuml;r!</code></p>\r\n\r\n			<p><code>25 sayısı 10 sayısına b&ouml;l&uuml;nmez! (kalan: 5)</code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<h2>Parametrelere varsayılan değer verme</h2>\r\n\r\n<p>Parametreli bir fonksiyon yaptığımızda sorunsuz &ccedil;alışabilmesi i&ccedil;in t&uuml;m parametrelerin girilmesi gerekir. Mesela yukarıda verdiğimiz&nbsp;<strong>topla</strong>&nbsp;fonksiyonunu topla(1); şeklinde &ccedil;alışmaya kalktığımızda PHP hata verecektir.</p>\r\n\r\n<p>&Ccedil;&uuml;nk&uuml; fonksiyonu 2 tane parametre ile &ccedil;alışmak &uuml;zere tasarladık. Ama bu durumlara bir istisna sağlayarak parametrelerimize varsayılan değer atayıp, parametresiz de &ccedil;alışmalarını sağlayabiliriz.<br />\r\nŞimdi varsayılan parametreli bir fonksiyon yapalım:</p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n\r\n			<p>2</p>\r\n\r\n			<p>3</p>\r\n\r\n			<p>4</p>\r\n\r\n			<p>5</p>\r\n\r\n			<p>6</p>\r\n			</td>\r\n			<td>\r\n			<p><code>function</code> <code>hosgeldin(</code><code>$isim</code> <code>= </code><code>&#39;Misafir&#39;</code><code>) {</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;</code><code>echo</code> <code>&#39;Hoşgeldin &#39;</code> <code>. </code><code>$isim</code> <code>. </code><code>&#39;! &#39;</code><code>;</code></p>\r\n\r\n			<p><code>}</code></p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code>hosgeldin();</code></p>\r\n\r\n			<p><code>hosgeldin(</code><code>&#39;Musa&#39;</code><code>);</code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&Ouml;rnekte&nbsp;<strong>hosgeldin()</strong>&nbsp;fonksiyonunu ilk olarak parametresiz, ikinci olarak da parametreli &ccedil;alıştırdık. Bu durumda fonksiyonun parametresini tanımladığımız yerde&nbsp;<strong>hosgeldin($isim = &lsquo;misafir&rsquo;)</strong>&nbsp;şeklinde parametreye varsayılan değer atadığımız i&ccedil;in boş bıraktığımızda o parametreye bu değeri verecektir. Yani ekranın &ccedil;ıktısı aşağıdaki gibi olacaktır:</p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p><code>Hoşgeldin Misafir!</code></p>\r\n\r\n			<p><code>Hoşgeldin Musa!</code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<h2>Return ifadesi ile sonucu atama</h2>\r\n\r\n<p>Yukarıda yaptığımız t&uuml;m &ouml;rneklerde fonksiyon sonu&ccedil;ları&nbsp;<strong>echo</strong>&nbsp;ile ekrana yazdırdık. Peki ya biz fonksiyonlardan elde ettiğimiz sonu&ccedil;ları ekrana yazdırmak değilde bir değişkene atayıp kullanmak istiyorsak? İşte o zaman&nbsp;<strong>return</strong>&nbsp;ifadesini kullanacağız.</p>\r\n\r\n<p>Return ifadesi ile fonksiyon i&ccedil;inde elde ettiğimiz sonucu dışarıya aktarırız. Hemen bir &ouml;rnek ile hayata ge&ccedil;irelim:</p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n\r\n			<p>2</p>\r\n\r\n			<p>3</p>\r\n\r\n			<p>4</p>\r\n\r\n			<p>5</p>\r\n\r\n			<p>6</p>\r\n\r\n			<p>7</p>\r\n			</td>\r\n			<td>\r\n			<p><code>function</code> <code>topla(</code><code>$sayi1</code><code>, </code><code>$sayi2</code><code>) {</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;</code><code>$sonuc</code> <code>= </code><code>$sayi1</code> <code>+ </code><code>$sayi2</code><code>;</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;</code><code>return</code> <code>$sonuc</code><code>;</code></p>\r\n\r\n			<p><code>}</code></p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code>$hesap</code> <code>= topla(10, 20);</code></p>\r\n\r\n			<p><code>echo</code> <code>&#39;Fonksiyon ile toplama yaptık ve sonu&ccedil;: &#39;</code> <code>. </code><code>$hesap</code><code>;</code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>İşte yukarıdaki &ouml;rnekte g&ouml;rd&uuml;ğ&uuml;n gibi bu sefer aynı&nbsp;<strong>topla()</strong>&nbsp;fonksiyonu ile echo yerine&nbsp;<strong>return</strong>&nbsp;yazdık. Bu da fonksiyonun sonucunu ona eşitlediğimiz bir değişkene atadı. Yani fonksiyon toplamayı yaptı ve sonucu&nbsp;<strong>$hesap</strong>&nbsp;değişkenine aktardı sonra biz onu echo ile ekrana yazdırdık.</p>\r\n\r\n<h2>Fonksiyonlarda global ifadesi kullanımı ve &ouml;rneği</h2>\r\n\r\n<p>Fonksiyonların i&ccedil;erisinde tanımladığın değişkenler dışarıya g&ouml;nderilmez ve aynı şekilde dışarıda tanımladığın bir değişken fonksiyon i&ccedil;inde g&ouml;r&uuml;lmez. Yani fonksiyonlara kendi i&ccedil;inde bir d&uuml;nya diyebilirsin. Hemen &ouml;rnek ile kafanda canlandıralım:</p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n\r\n			<p>2</p>\r\n\r\n			<p>3</p>\r\n\r\n			<p>4</p>\r\n\r\n			<p>5</p>\r\n\r\n			<p>6</p>\r\n			</td>\r\n			<td>\r\n			<p><code>function</code> <code>deneme() {</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;</code><code>$isim</code> <code>= </code><code>&#39;Musa&#39;</code><code>;</code></p>\r\n\r\n			<p><code>}</code></p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code>deneme();</code></p>\r\n\r\n			<p><code>echo</code> <code>$isim</code><code>;</code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>Bu kodu &ccedil;alıştırdığımızda PHP yalnızca&nbsp;<strong>isim</strong>&nbsp;adında bir değişken olmadığı i&ccedil;in&nbsp;<strong>hata verir</strong>. Biz&nbsp;<strong>$isim</strong>&nbsp;değişkenini fonksiyon i&ccedil;inde tanımladık ve yalnızca orada kullanabiliriz. Dışarıya aktarmak i&ccedil;in return ifadesini kullanıyoruz.</p>\r\n\r\n<p>Eğer fonksiyon i&ccedil;ine dışarıdan bir değişkeni sokmak istiyorsak, yani global bir değişkeni &ccedil;ağırmak istiyorsak&nbsp;<strong>global</strong>&nbsp;ifadesini kullanırız.</p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n\r\n			<p>2</p>\r\n\r\n			<p>3</p>\r\n\r\n			<p>4</p>\r\n\r\n			<p>5</p>\r\n\r\n			<p>6</p>\r\n\r\n			<p>7</p>\r\n\r\n			<p>8</p>\r\n			</td>\r\n			<td>\r\n			<p><code>$isim</code> <code>= </code><code>&#39;Musa&#39;</code><code>;</code></p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code>function</code> <code>selam() {</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;</code><code>global</code> <code>$isim</code><code>; </code><code>// Dışarıda tanımlanmış bir değişkeni fonksiyon i&ccedil;ine &ccedil;ağırdık</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;</code><code>echo</code> <code>&#39;Selam &#39;</code> <code>. </code><code>$isim</code><code>;</code></p>\r\n\r\n			<p><code>}</code></p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code>selam();</code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>Ekranda&nbsp;<strong>Selam Musa</strong>&nbsp;yazar. Global ifadesini kullanarak fonksiyon dışında yazdığımız bir değişkeni &ccedil;ağırdık ve ekrana yazdırdık.<br />\r\n<strong>Return</strong>&nbsp;ifadesi kullanılmadan fonksiyon i&ccedil;indeki bir değişkeni veya &ccedil;ıktıyı dışarı aktaramayız.&nbsp;<strong>Global</strong>&nbsp;ifadesi kullanılmadan da dışarıda kullanılan bir değişkeni fonksiyon i&ccedil;ine aktaramayız.</p>\r\n\r\n<h2>Fonksiyonlarda referans ile değer atama</h2>\r\n\r\n<p>Return ifadesini kullanarak değer atama yaparken fonksiyonun başında bir değişkeni ona atamak i&ccedil;in (<strong>=</strong>&nbsp;eşittir işareti) atama operat&ouml;r&uuml;n&uuml; kullanırız. Peki dikkatini &ccedil;ekti mi bilmiyorum ama&nbsp;<a href=\"https://www.phpr.org/php-dizileri-array/\" target=\"_blank\">diziler</a>de&nbsp;<strong>sıralama yapan fonksiyonları</strong>&nbsp;(<em>sort(), rsort()</em>) bu şekilde kullanmıyorduk.</p>\r\n\r\n<p>Sadece fonksiyonu &ccedil;alıştırarak dışarıdan parametreye g&ouml;nderilen değişkenin değerini referanslar ile değiştirebiliriz.</p>\r\n\r\n<p>Referans uygulamak istediğimiz değişkenin başına (<strong>&amp;</strong>) operat&ouml;r&uuml;n&uuml; koyarız. Bu operat&ouml;r&uuml; yerleştirdiğimiz parametreler, dışarıdan verilecek olan değişkenlerle beraber değişirler.</p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n\r\n			<p>2</p>\r\n\r\n			<p>3</p>\r\n\r\n			<p>4</p>\r\n\r\n			<p>5</p>\r\n\r\n			<p>6</p>\r\n\r\n			<p>7</p>\r\n			</td>\r\n			<td>\r\n			<p><code>function</code> <code>topla(&amp;</code><code>$sayi</code><code>) {</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;</code><code>$sayi</code> <code>= </code><code>$sayi</code> <code>+ 10;</code></p>\r\n\r\n			<p><code>}</code></p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code>$x</code> <code>= 10;</code></p>\r\n\r\n			<p><code>topla(</code><code>$x</code><code>);</code></p>\r\n\r\n			<p><code>echo</code> <code>$x</code><code>;</code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>Ekranda&nbsp;<strong>20</strong>&nbsp;yazar. Topla fonksiyonunun parametresinde kullandığımız referans nedeniyle o parametreye y&uuml;klenen değişkenin değeri fonksiyon i&ccedil;inde değiştirmemizle değişecek. Burada da fonksiyon i&ccedil;inde o parametreye +10 eklediğimiz i&ccedil;in dışarıdaki değişkeninde değeri 10 artmış oldu.</p>\r\n\r\n<p>Faydalı bir ka&ccedil; PHP fonksiyonu &ouml;ğrenmek i&ccedil;in bir&nbsp;<a href=\"https://www.phpr.org/2010/06/faydali-php-fonksiyonlari/\">sonraki yazımı</a>&nbsp;okumayı unutma.</p>\r\n', 55, 1),
(59, '<p>Genellikle formların sonlarında şartları kabul edilmesinde kullanılan tek bir checkbox hazırlamanın &ccedil;ok fazla bir espirisi yok. Bir checkbox ekliyoruz ve PHP kısmında yanlızca elemana verdiğimiz adın g&ouml;nderilip g&ouml;nderilmediğine bakarak se&ccedil;ilip se&ccedil;ilmediğini anlıyoruz.</p>\r\n\r\n<p><strong>form.php:</strong></p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n\r\n			<p>2</p>\r\n\r\n			<p>3</p>\r\n\r\n			<p>4</p>\r\n			</td>\r\n			<td>\r\n			<p><code>&lt;</code><code>form</code> <code>action</code><code>=</code><code>&quot;kontrol.php&quot;</code> <code>method</code><code>=</code><code>&quot;post&quot;</code><code>&gt;</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>&lt;</code><code>label</code><code>&gt;&lt;</code><code>input</code> <code>type</code><code>=</code><code>&quot;checkbox&quot;</code> <code>name</code><code>=</code><code>&quot;onay&quot;</code><code>/&gt; Onaylıyorum&lt;/</code><code>label</code><code>&gt;</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>&lt;</code><code>input</code> <code>type</code><code>=</code><code>&quot;submit&quot;</code> <code>value</code><code>=</code><code>&quot;Tamam&quot;</code><code>&gt;</code></p>\r\n\r\n			<p><code>&lt;/</code><code>form</code><code>&gt;</code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><strong>&Ouml;nizleme:</strong></p>\r\n\r\n<p>&nbsp;Onaylıyorum<br />\r\n&nbsp;</p>\r\n\r\n<p>Checkbox elemanını başlığı ile&nbsp;<strong>label</strong>&nbsp;arasına alarak &ldquo;<strong>Onaylıyorum</strong>&ldquo;a tıklandığında da checkboxu tetiklemesini sağlıyoruz.</p>\r\n\r\n<p><strong>kontrol.php:</strong></p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n\r\n			<p>2</p>\r\n\r\n			<p>3</p>\r\n\r\n			<p>4</p>\r\n\r\n			<p>5</p>\r\n			</td>\r\n			<td>\r\n			<p><code>if</code><code>(isset(</code><code>$_POST</code><code>[</code><code>&#39;onay&#39;</code><code>])) { </code><code>// checkbox se&ccedil;ilmişse &quot;on&quot; değeri g&ouml;nderiliyor</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>echo</code> <code>&#39;Onayladınız!&#39;</code><code>;</code></p>\r\n\r\n			<p><code>} </code><code>else</code> <code>{ </code><code>// se&ccedil;ilmemişse bu değer sayfaya hi&ccedil; g&ouml;nderilmiyor</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>echo</code> <code>&#39;Onaylamadınız.&#39;</code><code>;</code></p>\r\n\r\n			<p><code>}</code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>Bu t&uuml;r kullanımda checkboxa value yani değer tanımlamamıza gerek yok, &ccedil;&uuml;nk&uuml; sadece isset fonksiyonu ile se&ccedil;ilip se&ccedil;ilmediğini kontrol etmemiz yeterli. Eğer se&ccedil;ilmezse sayfaya checkboxun adında bir değer gitmiyor, eğer se&ccedil;ilirse de &ldquo;on&rdquo; değeri g&ouml;nderiliyor.</p>\r\n\r\n<h2>Checkbox ile &ccedil;oklu se&ccedil;im ve işlem uygulama</h2>\r\n\r\n<p>Listelerde birden fazla maddeyi checkbox ile se&ccedil;ip toplu işlemler yapmak i&ccedil;in bir array mantığı uygulayacağız.</p>\r\n\r\n<p><strong>form.php:</strong></p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n\r\n			<p>2</p>\r\n\r\n			<p>3</p>\r\n\r\n			<p>4</p>\r\n\r\n			<p>5</p>\r\n\r\n			<p>6</p>\r\n\r\n			<p>7</p>\r\n			</td>\r\n			<td>\r\n			<p><code>&lt;</code><code>form</code> <code>action</code><code>=</code><code>&quot;kontrol.php&quot;</code> <code>method</code><code>=</code><code>&quot;post&quot;</code><code>&gt;</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>&lt;</code><code>label</code><code>&gt;&lt;</code><code>input</code> <code>type</code><code>=</code><code>&quot;checkbox&quot;</code> <code>name</code><code>=</code><code>&quot;meyveler[]&quot;</code> <code>value</code><code>=</code><code>&quot;elma&quot;</code><code>/&gt; Elma&lt;/</code><code>label</code><code>&gt;&lt;</code><code>br</code><code>/&gt;</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>&lt;</code><code>label</code><code>&gt;&lt;</code><code>input</code> <code>type</code><code>=</code><code>&quot;checkbox&quot;</code> <code>name</code><code>=</code><code>&quot;meyveler[]&quot;</code> <code>value</code><code>=</code><code>&quot;armut&quot;</code><code>/&gt; Armut&lt;/</code><code>label</code><code>&gt;&lt;</code><code>br</code><code>/&gt;</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>&lt;</code><code>label</code><code>&gt;&lt;</code><code>input</code> <code>type</code><code>=</code><code>&quot;checkbox&quot;</code> <code>name</code><code>=</code><code>&quot;meyveler[]&quot;</code> <code>value</code><code>=</code><code>&quot;cilek&quot;</code><code>/&gt; &Ccedil;ilek&lt;/</code><code>label</code><code>&gt;&lt;</code><code>br</code><code>/&gt;</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>&lt;</code><code>label</code><code>&gt;&lt;</code><code>input</code> <code>type</code><code>=</code><code>&quot;checkbox&quot;</code> <code>name</code><code>=</code><code>&quot;meyveler[]&quot;</code> <code>value</code><code>=</code><code>&quot;muz&quot;</code><code>/&gt; Muz&lt;/</code><code>label</code><code>&gt;&lt;</code><code>br</code><code>/&gt;</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>&lt;</code><code>input</code> <code>type</code><code>=</code><code>&quot;submit&quot;</code> <code>value</code><code>=</code><code>&quot;Tamam&quot;</code><code>&gt;</code></p>\r\n\r\n			<p><code>&lt;/</code><code>form</code><code>&gt;</code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><strong>kontrol.php:</strong></p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n\r\n			<p>2</p>\r\n\r\n			<p>3</p>\r\n\r\n			<p>4</p>\r\n\r\n			<p>5</p>\r\n\r\n			<p>6</p>\r\n\r\n			<p>7</p>\r\n\r\n			<p>8</p>\r\n\r\n			<p>9</p>\r\n\r\n			<p>10</p>\r\n\r\n			<p>11</p>\r\n			</td>\r\n			<td>\r\n			<p><code>if</code><code>(isset(</code><code>$_POST</code><code>[</code><code>&#39;meyveler&#39;</code><code>])) {</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>$meyveler</code> <code>= </code><code>$_POST</code><code>[</code><code>&#39;meyveler&#39;</code><code>];</code></p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>echo</code> <code>&#39;Se&ccedil;tiğiniz meyveler: &lt;br/&gt;&#39;</code><code>;</code></p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>foreach</code><code>(</code><code>$meyveler</code> <code>as</code> <code>$meyve</code><code>) {</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>echo</code> <code>&#39; * &#39;</code> <code>. </code><code>$meyve</code> <code>. </code><code>&#39; &lt;br/&gt;&#39;</code><code>;</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>}</code></p>\r\n\r\n			<p><code>} </code><code>else</code> <code>{</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>echo</code> <code>&#39;Hi&ccedil; meyve se&ccedil;mediniz.&#39;</code><code>;</code></p>\r\n\r\n			<p><code>}</code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>Checkboxların her birinin name yani isim değerine &ldquo;<strong>meyveler[]</strong>&rdquo; dedik, buradan bu olayın array mantığıyla işlediğini daha iyi anlayabilirsiniz. B&ouml;ylelikle her se&ccedil;ilen madde &ldquo;meyveler&rdquo; değerine bir array elemanı olarak ekleniyor. PHP tarafına ise bu POST değişkeni array olarak g&ouml;nderiliyor.</p>\r\n\r\n<p>Daha iyi anlamak i&ccedil;in&nbsp;<strong>kontrol.php</strong>&nbsp;en başına&nbsp;<strong>print_r($_POST)</strong>&nbsp;yazarak gelen sonucu net şekilde g&ouml;rebilirsiniz:</p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n\r\n			<p>2</p>\r\n\r\n			<p>3</p>\r\n\r\n			<p>4</p>\r\n\r\n			<p>5</p>\r\n\r\n			<p>6</p>\r\n\r\n			<p>7</p>\r\n\r\n			<p>8</p>\r\n\r\n			<p>9</p>\r\n\r\n			<p>10</p>\r\n			</td>\r\n			<td>\r\n			<p><code>Array</code></p>\r\n\r\n			<p><code>(</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>[meyveler] =&gt; Array</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>(</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>[0] =&gt; elma</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>[1] =&gt; cilek</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>[2] =&gt; muz</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>)</code></p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code>)</code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<h3>&Ccedil;oklu se&ccedil;ilen maddeleri toplu silme uygulama</h3>\r\n\r\n<p>Yukarıdaki &ouml;rnekte nasıl &ccedil;oklu se&ccedil;enek yapılacağını ve PHP&rsquo;de nasıl karşılandığını &ouml;rnek g&ouml;sterdim. Bu y&ouml;nteme bir de toptan i&ccedil;erik silme &ouml;rneği g&ouml;sterebilirim.</p>\r\n\r\n<p>Bunun i&ccedil;in ekranda veritabanından listelenmiş i&ccedil;erik &ouml;rnekleri olduğunu varsayalım.</p>\r\n\r\n<p><strong>form.php</strong></p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n\r\n			<p>2</p>\r\n\r\n			<p>3</p>\r\n\r\n			<p>4</p>\r\n\r\n			<p>5</p>\r\n\r\n			<p>6</p>\r\n\r\n			<p>7</p>\r\n			</td>\r\n			<td>\r\n			<p><code>&lt;</code><code>form</code> <code>action</code><code>=</code><code>&quot;kontrol.php&quot;</code> <code>method</code><code>=</code><code>&quot;post&quot;</code><code>&gt;</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>&lt;</code><code>label</code><code>&gt;&lt;</code><code>input</code> <code>type</code><code>=</code><code>&quot;checkbox&quot;</code> <code>name</code><code>=</code><code>&quot;sil[]&quot;</code> <code>value</code><code>=</code><code>&quot;1&quot;</code><code>/&gt; Birinci yazının başlığı&lt;/</code><code>label</code><code>&gt;&lt;</code><code>br</code><code>/&gt;</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>&lt;</code><code>label</code><code>&gt;&lt;</code><code>input</code> <code>type</code><code>=</code><code>&quot;checkbox&quot;</code> <code>name</code><code>=</code><code>&quot;sil[]&quot;</code> <code>value</code><code>=</code><code>&quot;2&quot;</code><code>/&gt; Bir diğer yazı başlığı&lt;/</code><code>label</code><code>&gt;&lt;</code><code>br</code><code>/&gt;</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>&lt;</code><code>label</code><code>&gt;&lt;</code><code>input</code> <code>type</code><code>=</code><code>&quot;checkbox&quot;</code> <code>name</code><code>=</code><code>&quot;sil[]&quot;</code> <code>value</code><code>=</code><code>&quot;3&quot;</code><code>/&gt; Başka yazı&lt;/</code><code>label</code><code>&gt;&lt;</code><code>br</code><code>/&gt;</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>&lt;</code><code>label</code><code>&gt;&lt;</code><code>input</code> <code>type</code><code>=</code><code>&quot;checkbox&quot;</code> <code>name</code><code>=</code><code>&quot;sil[]&quot;</code> <code>value</code><code>=</code><code>&quot;4&quot;</code><code>/&gt; Sonuncu yazı&lt;/</code><code>label</code><code>&gt;&lt;</code><code>br</code><code>/&gt;</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>&lt;</code><code>input</code> <code>type</code><code>=</code><code>&quot;submit&quot;</code> <code>value</code><code>=</code><code>&quot;Se&ccedil;ilileri sil&quot;</code><code>&gt;</code></p>\r\n\r\n			<p><code>&lt;/</code><code>form</code><code>&gt;</code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>Bu sefer checkboxlara &ldquo;sil[]&rdquo; ismini tanımladık ve değerlerine her yazının NO&rsquo;sunu yazdık. Şimdi bu form ile birden fazla yazı se&ccedil;ildiğinde kontrol.php sayfasına silinecek yazılarının NO&rsquo;sunu i&ccedil;eren &ldquo;sil&rdquo; adında bir array g&ouml;nderilmiş olucak.</p>\r\n\r\n<p><strong>kontrol.php:</strong></p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n\r\n			<p>2</p>\r\n\r\n			<p>3</p>\r\n\r\n			<p>4</p>\r\n\r\n			<p>5</p>\r\n			</td>\r\n			<td>\r\n			<p><code>if</code><code>(isset(</code><code>$_POST</code><code>[</code><code>&#39;sil&#39;</code><code>])) {</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>$silinecekler</code> <code>= implode(</code><code>&#39;, &#39;</code><code>, </code><code>$_POST</code><code>[</code><code>&#39;sil&#39;</code><code>]);</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>mysql_query(</code><code>&#39;DELETE FROM yazilar WHERE NO IN ( &#39;</code> <code>. </code><code>$silinecekler</code> <code>. </code><code>&#39; )&#39;</code><code>);</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>echo</code> <code>count</code><code>(</code><code>$_POST</code><code>[</code><code>&#39;sil&#39;</code><code>]) . </code><code>&#39; adet yazı silindi.&#39;</code><code>;</code></p>\r\n\r\n			<p><code>}</code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>Bu sefer gelen arrayı&nbsp;<strong>implode</strong>&nbsp;ile birleştirdik, yani eğer 1. ve 4. yazıyı se&ccedil;ip formu g&ouml;nderirsem&nbsp;<strong>$silinecekler</strong>&nbsp;değişkeni &ldquo;1, 4&rdquo; şeklinde bir değer almış olacak. Sonu&ccedil; olarakta i&ccedil;erikleri silecek MySQL sorgumuz ise ş&ouml;yle olacak &ldquo;DELETE FROM yazilar WHERE NO IN ( 1, 4 )&rdquo; ve bu iki se&ccedil;ilmiş yazıyı silmiş olacağız.</p>\r\n', 56, 1);
INSERT INTO `tbl_topic` (`id`, `topictext`, `titleId`, `userId`) VALUES
(60, '<p>PHP&rsquo;de ziyaret&ccedil;ilerden ve kullanıcılardan bilgi almak i&ccedil;in formları kullanacağız. Formlar sayesinde kodları dışarıdaki verilere ve dinamik i&ccedil;eriklere a&ccedil;arız. Mesela giriş formları, e-mail g&ouml;nderme formları, hesaplama formları, y&ouml;netim panelleri vesaire.</p>\r\n\r\n<p>Ziyaret&ccedil;ilerin forma yazdıkları değerleri&nbsp;<a href=\"https://www.phpr.org/2010/05/php-dizileri-array/\">burada</a>&nbsp;bahsettiğimiz&nbsp;<strong>$_GET</strong>,&nbsp;<strong>$_POST</strong>&nbsp;ve&nbsp;<strong>$_REQUEST</strong>&nbsp;global dizileri aracılığyla PHP&rsquo;de bir değişkene atarız.</p>\r\n\r\n<p>HTML formu ile PHP scriptimize g&ouml;ndereceğimiz her bir form elemanı PHP de g&ouml;nderdiğimiz metod t&uuml;r&uuml;ne g&ouml;re $_GET ya da $_POST i&ccedil;inde bir eleman olur. Yani bizi&nbsp;<strong>dışarıdaki hayata bağlayan</strong>&nbsp;ve dışarıdan bilgi almamızı sağlayan k&ouml;pr&uuml;lerimiz, pencerelerimiz $_GET ve $_POST global değişkenleridir.</p>\r\n\r\n<h2>HTML Form yapımı</h2>\r\n\r\n<p>PHP&rsquo;ye verileri g&ouml;ndermek i&ccedil;in &ouml;nce bir aray&uuml;z tasarlamamız gerekiyor. Verilerin g&ouml;nderileceği bir form tasarlamamız gerekiyor.</p>\r\n\r\n<p>Bir HTML formunu taslak şeklinde &ccedil;izelim:</p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n\r\n			<p>2</p>\r\n\r\n			<p>3</p>\r\n			</td>\r\n			<td>\r\n			<p><code>&lt;</code><code>form</code> <code>action</code><code>=</code><code>&quot;formun g&ouml;nderileceği sayfa&quot;</code> <code>method</code><code>=</code><code>&quot;formun verilerini g&ouml;nderme metodu&quot;</code><code>&gt;</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;</code><code>buraya ise formun elemanları gelecek.</code></p>\r\n\r\n			<p><code>&lt;/</code><code>form</code><code>&gt;</code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<h2>Temel form elemanları</h2>\r\n\r\n<p>Formun i&ccedil;erisine yerleştireceğimiz bir &ccedil;ok form elemanı mevcut. Metin alanları, parola alanları, &ccedil;oklu onay kutucukları, radyo butonları, g&ouml;nderme butonları, dosya se&ccedil;im elemanları gibi &ccedil;eşit &ccedil;eşit form elemanı mevcuttur.</p>\r\n\r\n<p>Her bir form elemanında &ldquo;name&rdquo; parametresi olmak zorundadır. Bu paramtre o elemanın ismini belirtir. Her form elemanının bu parametresine yazacağımız isim sayesinde PHP&rsquo;de buluruz.</p>\r\n\r\n<p>Aynı şekilde varsayılan form elemanı değerini belirlemek ya da radyo butonların değerini belirlemek i&ccedil;inde &ldquo;value&rdquo; parametresini kullanırız. Bu parametreye yazacağımız değerler PHP&rsquo;de o elemanın değerini belirler.</p>\r\n\r\n<p>İşte HTML form elemanları ve &ouml;rnek kullanımları:</p>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td><strong>Eleman tipi</strong></td>\r\n			<td><strong>A&ccedil;ıklaması</strong></td>\r\n			<td><strong>&Ouml;rnek kod</strong></td>\r\n			<td><strong>G&ouml;r&uuml;n&uuml;m</strong></td>\r\n		</tr>\r\n		<tr>\r\n			<td>text</td>\r\n			<td>Metin kutusu</td>\r\n			<td><code>&lt;input name=&quot;metin&quot; type=&quot;text&quot; value=&quot;varsayılan değer&quot; /&gt;</code></td>\r\n			<td>&nbsp;</td>\r\n		</tr>\r\n		<tr>\r\n			<td>password</td>\r\n			<td>Metin kutusu ile aynı fakat yazılanlar g&ouml;sterilmez</td>\r\n			<td><code>&lt;input name=&quot;sifre&quot; type=&quot;password&quot; value=&quot;varsayılan değer&quot;/&gt;</code></td>\r\n			<td>&nbsp;</td>\r\n		</tr>\r\n		<tr>\r\n			<td>checkbox</td>\r\n			<td>İşaretlemeli onay kutusu</td>\r\n			<td><code>&lt;input name=&quot;onay&quot; type=&quot;checkbox&quot; /&gt;</code></td>\r\n			<td>&nbsp;</td>\r\n		</tr>\r\n		<tr>\r\n			<td>radio</td>\r\n			<td>Radyo butonlar</td>\r\n			<td><code>&lt;input name=&quot;cinsiyet&quot; type=&quot;radio&quot; value=&quot;erkek&quot; /&gt; Erkek, &lt;input name=&quot;cinsiyet&quot; type=&quot;radio&quot; value=&quot;kadin&quot; /&gt; Kadın</code></td>\r\n			<td>&nbsp;Erkek,<br />\r\n			&nbsp;Kadın</td>\r\n		</tr>\r\n		<tr>\r\n			<td>file</td>\r\n			<td>Dosya g&ouml;ndermek i&ccedil;in dosya se&ccedil;me elemanı</td>\r\n			<td><code>&lt;input name=&quot;dosya&quot; type=&quot;file&quot; /&gt;</code></td>\r\n			<td>&nbsp;</td>\r\n		</tr>\r\n		<tr>\r\n			<td>textarea</td>\r\n			<td>Geniş metin alanı</td>\r\n			<td><code>&lt;textarea name=&quot;metin&quot;&gt;varsayılan değeri&lt;/textarea&gt;</code></td>\r\n			<td>&nbsp;</td>\r\n		</tr>\r\n		<tr>\r\n			<td>select, option</td>\r\n			<td>Se&ccedil;im listesi ve se&ccedil;im listesinin se&ccedil;enekleri</td>\r\n			<td><code>&lt;select name=&quot;liste&quot;&gt;<br />\r\n			&lt;option value=&quot;windows&quot;&gt;Windows&lt;/option&gt;<br />\r\n			&lt;option value=&quot;linux&quot;&gt;Linux&lt;/option&gt;<br />\r\n			&lt;option value=&quot;mac&quot;&gt;MacOs&lt;/option&gt;<br />\r\n			&lt;/select&gt;</code></td>\r\n			<td>WindowsLinuxMacOs</td>\r\n		</tr>\r\n		<tr>\r\n			<td>submit</td>\r\n			<td>Formu g&ouml;nderme butonu</td>\r\n			<td><code>&lt;input name=&quot;gonder&quot; type=&quot;submit&quot; value=&quot;G&ouml;nder&quot; /&gt;</code></td>\r\n			<td>&nbsp;</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>Hemen bunlardan yeni bir form &ouml;rneği oluşturup tablodaki &ouml;rnekleri uygulamalı olarak g&ouml;sterelim:</p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n\r\n			<p>2</p>\r\n\r\n			<p>3</p>\r\n\r\n			<p>4</p>\r\n\r\n			<p>5</p>\r\n\r\n			<p>6</p>\r\n\r\n			<p>7</p>\r\n\r\n			<p>8</p>\r\n\r\n			<p>9</p>\r\n\r\n			<p>10</p>\r\n\r\n			<p>11</p>\r\n\r\n			<p>12</p>\r\n\r\n			<p>13</p>\r\n\r\n			<p>14</p>\r\n			</td>\r\n			<td>\r\n			<p><code>&lt;</code><code>form</code> <code>action</code><code>=</code><code>&quot;index.php&quot;</code> <code>method</code><code>=</code><code>&quot;post&quot;</code><code>&gt;</code></p>\r\n\r\n			<p><code>&nbsp;</code><code>İsim: &lt;</code><code>br</code><code>/&gt;</code></p>\r\n\r\n			<p><code>&nbsp;</code><code>&lt;</code><code>input</code> <code>type</code><code>=</code><code>&quot;text&quot;</code> <code>name</code><code>=</code><code>&quot;isim&quot;</code> <code>/&gt;&lt;</code><code>br</code><code>/&gt;</code></p>\r\n\r\n			<p><code>&nbsp;</code><code>Soyisim: &lt;</code><code>br</code><code>/&gt;</code></p>\r\n\r\n			<p><code>&nbsp;</code><code>&lt;</code><code>input</code> <code>type</code><code>=</code><code>&quot;text&quot;</code> <code>name</code><code>=</code><code>&quot;soyisim&quot;</code> <code>/&gt;&lt;</code><code>br</code><code>/&gt;</code></p>\r\n\r\n			<p><code>&nbsp;</code><code>E-mail: &lt;</code><code>br</code><code>/&gt;</code></p>\r\n\r\n			<p><code>&nbsp;</code><code>&lt;</code><code>input</code> <code>type</code><code>=</code><code>&quot;text&quot;</code> <code>name</code><code>=</code><code>&quot;mail&quot;</code> <code>/&gt;&lt;</code><code>br</code><code>/&gt;</code></p>\r\n\r\n			<p><code>&nbsp;</code><code>Cinsiyet: &lt;</code><code>br</code><code>/&gt;</code></p>\r\n\r\n			<p><code>&nbsp;</code><code>&lt;</code><code>input</code> <code>type</code><code>=</code><code>&quot;radio&quot;</code> <code>name</code><code>=</code><code>&quot;cinsiyet&quot;</code> <code>value</code><code>=</code><code>&quot;e&quot;</code> <code>/&gt; Erkek&lt;</code><code>br</code><code>/&gt;</code></p>\r\n\r\n			<p><code>&nbsp;</code><code>&lt;</code><code>input</code> <code>type</code><code>=</code><code>&quot;radio&quot;</code> <code>name</code><code>=</code><code>&quot;cinsiyet&quot;</code> <code>value</code><code>=</code><code>&quot;k&quot;</code> <code>/&gt; Kadın&lt;</code><code>br</code><code>/&gt;</code></p>\r\n\r\n			<p><code>&nbsp;</code><code>Mesaj: &lt;</code><code>br</code><code>/&gt;</code></p>\r\n\r\n			<p><code>&nbsp;</code><code>&lt;</code><code>textarea</code> <code>name</code><code>=</code><code>&quot;mesaj&quot;</code><code>&gt;&lt;/</code><code>textarea</code><code>&gt;&lt;</code><code>br</code><code>/&gt;</code></p>\r\n\r\n			<p><code>&nbsp;</code><code>&lt;</code><code>input</code> <code>type</code><code>=</code><code>&quot;submit&quot;</code> <code>value</code><code>=</code><code>&quot;Formu g&ouml;nder&quot;</code> <code>/&gt;</code></p>\r\n\r\n			<p><code>&lt;/</code><code>form</code><code>&gt;</code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>Formun g&ouml;r&uuml;n&uuml;t&uuml;s&uuml;:</p>\r\n\r\n<p>İsim:<br />\r\n<br />\r\nSoyisim:<br />\r\n<br />\r\nE-mail:<br />\r\n<br />\r\nCinsiyet:<br />\r\n&nbsp;Erkek<br />\r\n&nbsp;Kadın<br />\r\nMesaj:<br />\r\n<br />\r\n&nbsp;</p>\r\n\r\n<h2>Form g&ouml;nderme metodları (GET ve POST) arasındaki farklar</h2>\r\n\r\n<p>İki tane metodumuz var, bunlar GET ve POST. İkiside formumuzdaki verileri PHP scriptimize g&ouml;ndermeye yarıyor. Tek farkları verileri g&ouml;nderme yolları.</p>\r\n\r\n<p>Eğer metod olarak GET&rsquo;i se&ccedil;ersek formu g&ouml;nderdiğimizde PHP dosyamızın adı index.php ise adres &ccedil;ubuğunda g&ouml;nderdiğimiz değerler yazacaktır. &Ouml;rneğin:&nbsp;<strong>http://www.site.com/index.php?isim=musa&amp;cinsiyet=e&amp;mesaj=selam</strong>&nbsp;şeklinde olacaktır.</p>\r\n\r\n<p>POST se&ccedil;tiğimizde ise GET&rsquo;de olduğu gibi g&ouml;nderdiğimiz veriler adres &ccedil;ubuğundan değilde browser &uuml;zerinden g&ouml;nderilir. Yani se&ccedil;tiğimzi PHP sayfasına i&ccedil;ten g&ouml;nderilir, aynı cookie ve sessionlar gibi.</p>\r\n\r\n<p>&Ouml;rnekler ile g&ouml;sterelim:</p>\r\n\r\n<p><strong>index.php</strong>&nbsp;adında bir dosya oluşturalım ve i&ccedil;erisine aşağıdaki kodu ekleyelim.</p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n			</td>\r\n			<td>\r\n			<p><code>echo</code> <code>$_GET</code><code>[</code><code>&#39;isim&#39;</code><code>];</code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>Ve bu sayfaya&nbsp;<strong>index.php?isim=musa</strong>&nbsp;şeklinde girelim. Wamp kullanıyorsanız http://localhost/index.php?isim=musa şeklinde olacaktır. Sonu&ccedil; olarak ekranda adres &ccedil;ubuğunda belirttiğimiz&nbsp;<strong>isim</strong>&nbsp;değeri yani&nbsp;<strong>musa</strong>&nbsp;yazar.</p>\r\n\r\n<p>GET metodunu kullanmak i&ccedil;in bir forma ihtiya&ccedil; yoktur fakat POST metodu yanlızca bir form ile g&ouml;nderilir.</p>\r\n\r\n<p>Bir &ouml;rnek daha yapalım, bu sefer bir matematik işlemi yaptıralım:</p>\r\n\r\n<p><strong>carp.php</strong>&nbsp;adında bir dosya oluşturuyoruz ve aşağıdaki kodları yazıyoruz:</p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n\r\n			<p>2</p>\r\n\r\n			<p>3</p>\r\n			</td>\r\n			<td>\r\n			<p><code>$sayi</code> <code>= </code><code>$_GET</code><code>[</code><code>&#39;x&#39;</code><code>];</code></p>\r\n\r\n			<p><code>$sonuc</code> <code>= </code><code>$sayi</code> <code>* 5;</code></p>\r\n\r\n			<p><code>echo</code> <code>$sonuc</code><code>;</code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>carp.php?x=10 şeklinde girdiğimizde ekranda&nbsp;<strong>50</strong>&nbsp;yazacaktır. Adres &ccedil;ubuğuna yazacağımız her x değerini 5 ile &ccedil;arpıp ekrana yazacaktır.</p>\r\n\r\n<h2>Formu kontrol etmek</h2>\r\n\r\n<p>Bir formun verilerini işlemeden &ouml;nce bize form ile veri g&ouml;nderilip g&ouml;nderilmediğini ya da g&ouml;nderilen değerlerinin boş olup olmadığını kontrol etmemiz gerekiyor. Bunun i&ccedil;inde&nbsp;<strong>if</strong>&nbsp;ifadesini,&nbsp;<strong>isset()</strong>&nbsp;ve&nbsp;<strong>empty()</strong>&nbsp;fonksiyonunu kullanacağız.</p>\r\n\r\n<p>İlk olarak basit bir form yapalım, dosyamızın adı&nbsp;<strong>giris.php</strong>&nbsp;olsun, buradan&nbsp;<strong>kontrol.php</strong>&nbsp;ye veri g&ouml;ndereceğiz:</p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n\r\n			<p>2</p>\r\n\r\n			<p>3</p>\r\n\r\n			<p>4</p>\r\n\r\n			<p>5</p>\r\n\r\n			<p>6</p>\r\n\r\n			<p>7</p>\r\n			</td>\r\n			<td>\r\n			<p><code>&lt;</code><code>form</code> <code>action</code><code>=</code><code>&quot;kontrol.php&quot;</code> <code>method</code><code>=</code><code>&quot;post&quot;</code><code>&gt;</code></p>\r\n\r\n			<p><code>Kullanıcı:&lt;</code><code>br</code><code>/&gt;</code></p>\r\n\r\n			<p><code>&lt;</code><code>input</code> <code>type</code><code>=</code><code>&quot;text&quot;</code> <code>name</code><code>=</code><code>&quot;kullanici&quot;</code> <code>/&gt;&lt;</code><code>br</code><code>/&gt;</code></p>\r\n\r\n			<p><code>Şifre:&lt;</code><code>br</code><code>/&gt;</code></p>\r\n\r\n			<p><code>&lt;</code><code>input</code> <code>type</code><code>=</code><code>&quot;password&quot;</code> <code>name</code><code>=</code><code>&quot;sifre&quot;</code> <code>/&gt;&lt;</code><code>br</code><code>/&gt;</code></p>\r\n\r\n			<p><code>&lt;</code><code>input</code> <code>type</code><code>=</code><code>&quot;submit&quot;</code> <code>value</code><code>=</code><code>&quot;Giriş yap&quot;</code> <code>/&gt;</code></p>\r\n\r\n			<p><code>&lt;/</code><code>form</code><code>&gt;</code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>Şimdide&nbsp;<strong>kontrol.php</strong>&lsquo;nin i&ccedil;eriğini kodlayalım ve kontrol&uuml;m&uuml;z&uuml; yapalım:</p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n\r\n			<p>2</p>\r\n\r\n			<p>3</p>\r\n\r\n			<p>4</p>\r\n\r\n			<p>5</p>\r\n\r\n			<p>6</p>\r\n\r\n			<p>7</p>\r\n\r\n			<p>8</p>\r\n\r\n			<p>9</p>\r\n\r\n			<p>10</p>\r\n\r\n			<p>11</p>\r\n\r\n			<p>12</p>\r\n\r\n			<p>13</p>\r\n\r\n			<p>14</p>\r\n			</td>\r\n			<td>\r\n			<p><code>&lt;?php</code></p>\r\n\r\n			<p><code>if</code><code>(isset(</code><code>$_POST</code><code>[</code><code>&#39;kullanici&#39;</code><code>]) &amp;&amp; isset(</code><code>$_POST</code><code>[</code><code>&#39;sifre&#39;</code><code>])) {</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;</code><code>$kullanici</code> <code>= </code><code>$_POST</code><code>[</code><code>&#39;kullanici&#39;</code><code>];</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;</code><code>$sifre</code> <code>= </code><code>$_POST</code><code>[</code><code>&#39;sifre&#39;</code><code>];</code></p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;</code><code>if</code><code>(</code><code>empty</code><code>(</code><code>$kullanici</code><code>) || </code><code>empty</code><code>(</code><code>$sifre</code><code>)) {</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>echo</code> <code>&#39;L&uuml;tfen boş bırakmayın&#39;</code><code>;</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;</code><code>} </code><code>else</code> <code>{</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>echo</code> <code>&#39;Girilen kullanıcı adı: &#39;</code> <code>. </code><code>$kullanici</code> <code>. </code><code>&#39; şifre: &#39;</code> <code>. </code><code>$sifre</code><code>;</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;</code><code>}</code></p>\r\n\r\n			<p><code>} </code><code>else</code> <code>{</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;</code><code>echo</code> <code>&#39;L&uuml;tfen formu kullanın&#39;</code><code>;</code></p>\r\n\r\n			<p><code>}</code></p>\r\n\r\n			<p><code>?&gt;</code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>İlk koşulda &ldquo;<strong>isset($_POST[&lsquo;kullanici&rsquo;]) &amp;&amp; isset($_POST[&lsquo;sifre&rsquo;])</strong>&rdquo; $_POST[&lsquo;kullanici&rsquo;] ve $_POST[&lsquo;sifre&rsquo;] diye bir değişken tanımlanmış mı diye sorduk. Eğer ikiside tanımlanmış ise bu ifadenin kod bloğuna yazdığımız ikinci bir koşul daha devreye giriyor ve bu sefer g&ouml;nderilmiş olan verilerin boş mu olup olmadığına bakıyor.</p>\r\n\r\n<p>İkinci koşulda &ldquo;<strong>empty($kullanici) || empty($sifre)</strong>&rdquo; $kullanici değişkeninin değeri boşsa ya da $sifre değişkeninin değeri boşsa diye bir koşul tanımlıyoruz. Eğer ikisinden birisinin i&ccedil;eriği boşsa bu sefer ekrana uyarı olarak&nbsp;<strong>L&uuml;tfen boş bırakmayın</strong>&nbsp;yazdırıyoruz. Eğer ikiside boş değilse bu seferde ekrana forma yazdığımız kullanıcı adı ve şifre &ccedil;ıkıyor.</p>\r\n\r\n<p>Bu &ouml;rnekte aynı zamanda i&ccedil; i&ccedil;e if ifadesi kullanmayıda g&ouml;stermiş olduk.</p>\r\n\r\n<h2>Form ile kullanıcı girişi</h2>\r\n\r\n<p>Bu konudan ayrılmadan &ouml;nce basit bir &ouml;rneklede kullanıcı girişi olayını g&ouml;stermek istiyorum. Veritabanı ve fazla detaya girmeden session ve form kullanarak bir kullanıcı girişi olayı yapalım.</p>\r\n\r\n<p>Yukarıdaki&nbsp;<strong>giris.php</strong>&nbsp;&ouml;rneğindeki formu kullanalım. O form bize kullanici ve sifre adında iki veri g&ouml;nderilmesini sağlıyordu. Bunun yanında biz bir kontrol ve bir de panel sayfası yapacağız.</p>\r\n\r\n<p>Kontrol sayfasında g&ouml;nderilen kullanıcı adı ve şifrenin bizde kayıtlı kullanıcı adı ve şifre ile aynı olup olmadığına bakacağız, eğer bizdekiler ile aynı ise bu değerleri session ile kaydedeceğiz sonrasında&nbsp;<strong>panel.php</strong>&lsquo;ye g&ouml;nderip giren kişinin giriş yapıp yapmadığını kontrol edip ona g&ouml;re kullanıcıya &ouml;zel olan sayfayı g&ouml;stereceğiz.</p>\r\n\r\n<p><strong>kontrol.php</strong>:</p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n\r\n			<p>2</p>\r\n\r\n			<p>3</p>\r\n\r\n			<p>4</p>\r\n\r\n			<p>5</p>\r\n\r\n			<p>6</p>\r\n\r\n			<p>7</p>\r\n\r\n			<p>8</p>\r\n\r\n			<p>9</p>\r\n\r\n			<p>10</p>\r\n\r\n			<p>11</p>\r\n\r\n			<p>12</p>\r\n\r\n			<p>13</p>\r\n\r\n			<p>14</p>\r\n\r\n			<p>15</p>\r\n\r\n			<p>16</p>\r\n\r\n			<p>17</p>\r\n\r\n			<p>18</p>\r\n\r\n			<p>19</p>\r\n\r\n			<p>20</p>\r\n\r\n			<p>21</p>\r\n			</td>\r\n			<td>\r\n			<p><code>&lt;?php</code></p>\r\n\r\n			<p><code>if</code><code>(isset(</code><code>$_POST</code><code>[</code><code>&#39;kullanici&#39;</code><code>]) &amp;&amp; isset(</code><code>$_POST</code><code>[</code><code>&#39;sifre&#39;</code><code>])) { </code><code>// form g&ouml;nderilmiş mi</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;</code><code>$kullanici</code> <code>= </code><code>$_POST</code><code>[</code><code>&#39;kullanici&#39;</code><code>];</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;</code><code>$sifre</code> <code>= </code><code>$_POST</code><code>[</code><code>&#39;sifre&#39;</code><code>];</code></p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;</code><code>if</code><code>(</code><code>empty</code><code>(</code><code>$kullanici</code><code>) || </code><code>empty</code><code>(</code><code>$sifre</code><code>)) { </code><code>// g&ouml;nderilenler boş mu</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>echo</code> <code>&#39;L&uuml;tfen boş bırakmayın&#39;</code><code>;</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;</code><code>} </code><code>else</code> <code>{</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>if</code><code>(</code><code>$kullanici</code> <code>== </code><code>&#39;musa&#39;</code> <code>&amp;&amp; </code><code>$sifre</code> <code>== </code><code>&#39;123456&#39;</code><code>) { </code><code>// bilgiler doğru mu</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>session_start();</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>$_SESSION</code><code>[</code><code>&#39;kullanici&#39;</code><code>] = </code><code>&#39;musa&#39;</code><code>;</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>$_SESSION</code><code>[</code><code>&#39;sifre&#39;</code><code>] = </code><code>&#39;123456&#39;</code><code>;</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>echo</code> <code>&#39;Giriş yaptınız! Şimdi panel.php ye girebilirsiniz.&#39;</code><code>;</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>} </code><code>else</code> <code>{</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>echo</code> <code>&#39;Yanlış kullanıcı adı ya da şifre&#39;</code><code>;</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>}</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;</code><code>}</code></p>\r\n\r\n			<p><code>} </code><code>else</code> <code>{</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;</code><code>echo</code> <code>&#39;L&uuml;tfen formu kullanın&#39;</code><code>;</code></p>\r\n\r\n			<p><code>}</code></p>\r\n\r\n			<p><code>?&gt;</code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>Burada bir &ouml;nceki &ouml;rnekteki form kontrol etme ifadelerinden sonra ekstra olarak bir g&ouml;nderilenlerin tam olarak ne olduğunu da kontrol eden bir ifade ekledik. Eğer değerler boş değilse ve istediğimiz değerlere eşit ise session başlatıp kullanici ve sifre adında iki adet session oluşturduk. Bu oluşturduğumuz session değerlerinin i&ccedil;erisine yine şifremizi kaydettik. Bu bilgiler browser kapatılana kadar silinmeyeceği i&ccedil;in bu s&uuml;re&ccedil; i&ccedil;inde kullanıcı oturum yapmış şekilde g&ouml;z&uuml;kecek ve panel.php&rsquo;ye girdiğinde ona kullanıcı i&ccedil;eriğini g&ouml;sterecektir.</p>\r\n\r\n<p><strong>panel.php</strong>:</p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n\r\n			<p>2</p>\r\n\r\n			<p>3</p>\r\n\r\n			<p>4</p>\r\n\r\n			<p>5</p>\r\n\r\n			<p>6</p>\r\n\r\n			<p>7</p>\r\n\r\n			<p>8</p>\r\n\r\n			<p>9</p>\r\n\r\n			<p>10</p>\r\n\r\n			<p>11</p>\r\n\r\n			<p>12</p>\r\n\r\n			<p>13</p>\r\n			</td>\r\n			<td>\r\n			<p><code>&lt;?php</code></p>\r\n\r\n			<p><code>session_start(); </code><code>// session kullanımı başlattık</code></p>\r\n\r\n			<p><code>if</code><code>(isset(</code><code>$_SESSION</code><code>[</code><code>&#39;kullanici&#39;</code><code>]) &amp;&amp; isset(</code><code>$_SESSION</code><code>[</code><code>&#39;sifre&#39;</code><code>])) { </code><code>// bu sefer sessionlar tanımlanmış mı diye bakıyoruz</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;</code><code>if</code><code>(</code><code>$_SESSION</code><code>[</code><code>&#39;kullanici&#39;</code><code>] == </code><code>&#39;musa&#39;</code> <code>&amp;&amp; </code><code>$_SESSION</code><code>[</code><code>&#39;sifre&#39;</code><code>] == </code><code>&#39;123456&#39;</code><code>) {</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>echo</code> <code>&#39;Panele hoşgeldiniz! Bu yazıyı sadece giriş yapmış kişiler g&ouml;rebilir.&#39;</code><code>;</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;</code><code>} </code><code>else</code> <code>{</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>session_destroy(); </code><code>// bilgileri yanlış olduğu i&ccedil;in sessionlar silinir</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>echo</code> <code>&#39;Bilgileriniz yanlış, buraya yanlızca giriş yapmış kişiler girebilir&#39;</code><code>;</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;</code><code>}</code></p>\r\n\r\n			<p><code>} </code><code>else</code> <code>{</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;</code><code>echo</code> <code>&#39;Sadece giriş yapmış kişiler g&ouml;rebilir&#39;</code><code>;</code></p>\r\n\r\n			<p><code>}</code></p>\r\n\r\n			<p><code>?&gt;</code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>Burada ise kontrol.php de g&ouml;nderilen POST verilerini kontrol ettiğimiz gibi SESSION verilerini kontrol ettik. Sadece 1 kere giris.php &uuml;zerinden giriş yaptıktan sonra bir oturum boyunca panel.php sayfasında oturum a&ccedil;mış bir şekilde durabiliriz.</p>\r\n\r\n<p>İşte genel olarak kullanıcı girişinin ve form kullanımının mantığı budur.<br />\r\nForm ile dosya y&uuml;kleme olayını ise daha sonraki derslerde detaylı olarak anlatacağım.</p>\r\n', 57, 1),
(61, '<p>İ&ccedil;erikleriniz &ccedil;oğaldı, bayağı kaynağınız ve birikiminiz oldu. Ve artık bunları sayfalamanın zamanı geldi. MySQL veritabanı tablosu verileri ile sayfalama yapımı anlatacağım bu yazıda genel sayfalama mantığını anladıktan sonra başka kaynaklardan gelen (array, xml, vs.) verilerle de sayfalama yapabileceğinize inanıyorum.</p>\r\n\r\n<h2>Toplam sayfa sayısını bulmak</h2>\r\n\r\n<p>Sayfalama olayına &ouml;ncelikle toplam sayfa sayısını bulmakla başlayalım. Bu işlem i&ccedil;in toplam i&ccedil;erik sayısını bir sayfada g&ouml;stereceğimiz i&ccedil;erik sayısına b&ouml;leceğiz, &ccedil;ıkan sonucu ise&nbsp;<strong>ceil</strong>&nbsp;fonksiyonu ile yukarı yuvarlayacağız.</p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n\r\n			<p>2</p>\r\n\r\n			<p>3</p>\r\n\r\n			<p>4</p>\r\n\r\n			<p>5</p>\r\n\r\n			<p>6</p>\r\n\r\n			<p>7</p>\r\n			</td>\r\n			<td>\r\n			<p><code>$sayfada</code> <code>= 5; </code><code>// sayfada g&ouml;sterilecek i&ccedil;erik miktarını belirtiyoruz.</code></p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code>$sorgu</code> <code>= mysql_query(</code><code>&#39;SELECT COUNT(*) AS toplam FROM mesajlar&#39;</code><code>);</code></p>\r\n\r\n			<p><code>$sonuc</code> <code>= mysql_fetch_assoc(</code><code>$sorgu</code><code>);</code></p>\r\n\r\n			<p><code>$toplam_icerik</code> <code>= </code><code>$sonuc</code><code>[</code><code>&#39;toplam&#39;</code><code>];</code></p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code>$toplam_sayfa</code> <code>= </code><code>ceil</code><code>(</code><code>$toplam_icerik</code> <code>/ </code><code>$sayfada</code><code>);</code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>Buradaki ince noktalardan birisi yukarı yuvarlamak. Diyelim her sayfada 5 i&ccedil;erik istiyoruz ve 12 i&ccedil;erik var, bu durumda (12 / 5 = 2.4),&nbsp;<strong>ceil</strong>&nbsp;fonksiyonu ile bu rakamı 3&rsquo;e yuvarlıyoruz. Eğer normal&nbsp;<strong>round</strong>&nbsp;fonksiyonunu kullanırsak b&ouml;yle bir durumda 2 sayfamız olur ve son 2 i&ccedil;erik g&ouml;r&uuml;nmez.</p>\r\n\r\n<p>Eğer &ccedil;ok fazla i&ccedil;eriğiniz varsa, her sayfada toplam i&ccedil;erik sayınızı sayan bu SQL sorgusunu &ccedil;alıştırmak yerine bir şekilde cache uygulayıp oradan okutmanız performans a&ccedil;ısından daha faydalı olacaktır.</p>\r\n\r\n<h2>Sayfanın i&ccedil;eriğini listelemek</h2>\r\n\r\n<p>Bir sayfada ne kadar i&ccedil;erik olacağını belirledik, şimdi gelelim bulunduğumuz sayfaya g&ouml;re i&ccedil;eriklerimizi listelemeye. Bu noktada artık kullanıcı tarafından sayfa sayısını almanın zamanı geldi. Ben &ouml;rneğimde &ldquo;<strong>sayfa</strong>&rdquo; GET verisi ile alacağım, yani&nbsp;<strong>index.php?sayfa=2</strong>&nbsp;şeklinde olacak. İsterseniz &ldquo;s&rdquo;de idealdir.</p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n\r\n			<p>2</p>\r\n\r\n			<p>3</p>\r\n\r\n			<p>4</p>\r\n\r\n			<p>5</p>\r\n\r\n			<p>6</p>\r\n\r\n			<p>7</p>\r\n\r\n			<p>8</p>\r\n			</td>\r\n			<td>\r\n			<p><code>// eğer sayfa girilmemişse 1 varsayalım.</code></p>\r\n\r\n			<p><code>$sayfa</code> <code>= isset(</code><code>$_GET</code><code>[</code><code>&#39;sayfa&#39;</code><code>]) ? (int) </code><code>$_GET</code><code>[</code><code>&#39;sayfa&#39;</code><code>] : 1;</code></p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code>// eğer 1&#39;den k&uuml;&ccedil;&uuml;k bir sayfa sayısı girildiyse 1 yapalım.</code></p>\r\n\r\n			<p><code>if</code><code>(</code><code>$sayfa</code> <code>&lt; 1) </code><code>$sayfa</code> <code>= 1; </code></p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code>// toplam sayfa sayımızdan fazla yazılırsa en son sayfayı varsayalım.</code></p>\r\n\r\n			<p><code>if</code><code>(</code><code>$sayfa</code> <code>&gt; </code><code>$toplam_sayfa</code><code>) </code><code>$sayfa</code> <code>= </code><code>$toplam_sayfa</code><code>; </code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>Eklediğimiz bu ufak koşullar ile ge&ccedil;ersiz yazılan sayfa numaralarından doğacak olan hataları da engellemiş oluyoruz. Ayrıca değişkeni tanımlarken başına&nbsp;<strong>(int)</strong>&nbsp;eklememiz sayı haricinde yapılan girişleri ge&ccedil;ersiz kılıyor. Bu ifadeyi NO, ID gibi dışardan gelen verileri &ccedil;ekerken de kullanabilirsiniz.</p>\r\n\r\n<p>Hangi sayfada olduğumuzu da belirlediğimize g&ouml;re artık i&ccedil;eriklerimizin istenilen kısmını listeleyebiliriz.</p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n\r\n			<p>2</p>\r\n\r\n			<p>3</p>\r\n\r\n			<p>4</p>\r\n\r\n			<p>5</p>\r\n\r\n			<p>6</p>\r\n\r\n			<p>7</p>\r\n\r\n			<p>8</p>\r\n			</td>\r\n			<td>\r\n			<p><code>// ka&ccedil;ıncı i&ccedil;erikten başlanacağını ifade edecek limit değeri.</code></p>\r\n\r\n			<p><code>$limit</code> <code>= (</code><code>$sayfa</code> <code>- 1) * </code><code>$sayfada</code><code>;</code></p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code>$sorgu</code> <code>= mysql_query(</code><code>&#39;SELECT * FROM mesajlar LIMIT &#39;</code> <code>. </code><code>$limit</code> <code>. </code><code>&#39;, &#39;</code> <code>. </code><code>$sayfada</code><code>);</code></p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code>while</code><code>(</code><code>$icerik</code> <code>= mysql_fetch_assoc(</code><code>$sorgu</code><code>)) {</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;</code><code>// ...</code></p>\r\n\r\n			<p><code>}</code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>Sanırım kilit ve kafa karıştıran noktası burası.&nbsp;<strong>LIMIT</strong>&nbsp;ifadesi ile t&uuml;m i&ccedil;erikler arasından bizim istediğimiz adet ve aralıktaki i&ccedil;erikleri istiyoruz. Normalde sadece &ldquo;LIMIT 10&rdquo; dediğimizde 10 adet i&ccedil;erik verir. Fakat virg&uuml;l ile ikinci bir sayı daha girdiğimizde ka&ccedil;ıncı sıradan sonra vereceğini ifade eder.</p>\r\n\r\n<p>Yani &ldquo;LIMIT 0, 5&rdquo; dediğimizde 0. i&ccedil;erikten yani ilk i&ccedil;erikten sonra 5 tane ver diyoruz, bu bizim ilk sayfamız oluyor. 2. sayfa i&ccedil;in &ldquo;LIMIT 5, 5&rdquo; yani 5. i&ccedil;erikten sonra 5 tane g&ouml;ster diyoruz. 3. sayfa i&ccedil;in &ldquo;LIMIT 10, 5&rdquo;. Bu ifade i&ccedil;in &ldquo;<strong>($sayfa &ndash; 1) * $sayfada</strong>&rdquo; işlemimizi yapıyoruz.</p>\r\n\r\n<h2>Sayfa sayılarını g&ouml;sterme</h2>\r\n\r\n<p>Son olarak en alta sayfa sayılarını g&ouml;stereceğiz. Bunun i&ccedil;in d&ouml;ng&uuml; ile toplam sayfa sayısı kadar link oluşturacağız. Ayrıca bulunduğumuz sayfayı da dikkate alarak o sayfayı yazarken link yapmayacağız.</p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n\r\n			<p>2</p>\r\n\r\n			<p>3</p>\r\n\r\n			<p>4</p>\r\n\r\n			<p>5</p>\r\n\r\n			<p>6</p>\r\n\r\n			<p>7</p>\r\n			</td>\r\n			<td>\r\n			<p><code>for</code><code>(</code><code>$s</code> <code>= 1; </code><code>$s</code> <code>&lt;= </code><code>$toplam_sayfa</code><code>; </code><code>$s</code><code>++) {</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;</code><code>if</code><code>(</code><code>$sayfa</code> <code>== </code><code>$s</code><code>) { </code><code>// eğer bulunduğumuz sayfa ise link yapma.</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>echo</code> <code>$s</code> <code>. </code><code>&#39; &#39;</code><code>; </code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;</code><code>} </code><code>else</code> <code>{</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>echo</code> <code>&#39;&lt;a href=&quot;?sayfa=&#39;</code> <code>. </code><code>$s</code> <code>. </code><code>&#39;&quot;&gt;&#39;</code> <code>. </code><code>$s</code> <code>. </code><code>&#39;&lt;/a&gt; &#39;</code><code>;</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;</code><code>}</code></p>\r\n\r\n			<p><code>}</code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<h2>Sonu&ccedil;</h2>\r\n\r\n<p>Şimdi t&uuml;m hepsine bir arada bakalım ve daha rahat anlayalım.</p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n\r\n			<p>2</p>\r\n\r\n			<p>3</p>\r\n\r\n			<p>4</p>\r\n\r\n			<p>5</p>\r\n\r\n			<p>6</p>\r\n\r\n			<p>7</p>\r\n\r\n			<p>8</p>\r\n\r\n			<p>9</p>\r\n\r\n			<p>10</p>\r\n\r\n			<p>11</p>\r\n\r\n			<p>12</p>\r\n\r\n			<p>13</p>\r\n\r\n			<p>14</p>\r\n\r\n			<p>15</p>\r\n\r\n			<p>16</p>\r\n\r\n			<p>17</p>\r\n\r\n			<p>18</p>\r\n\r\n			<p>19</p>\r\n\r\n			<p>20</p>\r\n\r\n			<p>21</p>\r\n\r\n			<p>22</p>\r\n\r\n			<p>23</p>\r\n\r\n			<p>24</p>\r\n\r\n			<p>25</p>\r\n\r\n			<p>26</p>\r\n\r\n			<p>27</p>\r\n			</td>\r\n			<td>\r\n			<p><code>$sayfada</code> <code>= 5; </code><code>// sayfada g&ouml;sterilecek i&ccedil;erik miktarını belirtiyoruz.</code></p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code>$sorgu</code> <code>= mysql_query(</code><code>&#39;SELECT COUNT(*) AS toplam FROM mesajlar&#39;</code><code>);</code></p>\r\n\r\n			<p><code>$sonuc</code> <code>= mysql_fetch_assoc(</code><code>$sorgu</code><code>);</code></p>\r\n\r\n			<p><code>$toplam_icerik</code> <code>= </code><code>$sonuc</code><code>[</code><code>&#39;toplam&#39;</code><code>];</code></p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code>$toplam_sayfa</code> <code>= </code><code>ceil</code><code>(</code><code>$toplam_icerik</code> <code>/ </code><code>$sayfada</code><code>);</code></p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code>$sayfa</code> <code>= isset(</code><code>$_GET</code><code>[</code><code>&#39;sayfa&#39;</code><code>]) ? (int) </code><code>$_GET</code><code>[</code><code>&#39;sayfa&#39;</code><code>] : 1;</code></p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code>if</code><code>(</code><code>$sayfa</code> <code>&lt; 1) </code><code>$sayfa</code> <code>= 1; </code></p>\r\n\r\n			<p><code>if</code><code>(</code><code>$sayfa</code> <code>&gt; </code><code>$toplam_sayfa</code><code>) </code><code>$sayfa</code> <code>= </code><code>$toplam_sayfa</code><code>; </code></p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code>$limit</code> <code>= (</code><code>$sayfa</code> <code>- 1) * </code><code>$sayfada</code><code>;</code></p>\r\n\r\n			<p><code>$sorgu</code> <code>= mysql_query(</code><code>&#39;SELECT * FROM mesajlar LIMIT &#39;</code> <code>. </code><code>$limit</code> <code>. </code><code>&#39;, &#39;</code> <code>. </code><code>$sayfada</code><code>);</code></p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code>while</code><code>(</code><code>$icerik</code> <code>= mysql_fetch_assoc(</code><code>$sorgu</code><code>)) {</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;</code><code>// ...</code></p>\r\n\r\n			<p><code>}</code></p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code>for</code><code>(</code><code>$s</code> <code>= 1; </code><code>$s</code> <code>&lt;= </code><code>$toplam_sayfa</code><code>; </code><code>$s</code><code>++) {</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;</code><code>if</code><code>(</code><code>$sayfa</code> <code>== </code><code>$s</code><code>) { </code><code>// eğer bulunduğumuz sayfa ise link yapma.</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>echo</code> <code>$s</code> <code>. </code><code>&#39; &#39;</code><code>; </code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;</code><code>} </code><code>else</code> <code>{</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>echo</code> <code>&#39;&lt;a href=&quot;?sayfa=&#39;</code> <code>. </code><code>$s</code> <code>. </code><code>&#39;&quot;&gt;&#39;</code> <code>. </code><code>$s</code> <code>. </code><code>&#39;&lt;/a&gt; &#39;</code><code>;</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;</code><code>}</code></p>\r\n\r\n			<p><code>}</code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<h2>&Ccedil;ok daha fazlası</h2>\r\n\r\n<p>Yukarıda anlattığım bu y&ouml;ntem ile artık i&ccedil;eriklerinizi sayfalı yapabilirsiniz. Ama biraz ileri g&ouml;r&uuml;şl&uuml; olursak ya da elimizde &ccedil;ook fazla i&ccedil;erik ve bu nedenle y&uuml;zlerce sayfamız varsa; 1&rsquo;den 200&rsquo;lere kadar &ccedil;ok uzun sayfalar bağlantımız olur. Hem &ccedil;irkin hem de kullanıcı dostu olmayan bir g&ouml;r&uuml;nt&uuml; ile karşılaşırız. Bunu &ouml;nlemek i&ccedil;in ne kadar &ccedil;ok sayfamız olursa olsun kullanıcını o an ka&ccedil;ıncı sayfada ise ona ilaveten sonraki ve &ouml;nceki 5-10 sayfayı g&ouml;stermeliyiz. Yani şu şekilde;</p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n			</td>\r\n			<td>\r\n			<p><code>&lt;&lt;İlk sayfa &lt;&Ouml;nceki 35 36 37 38 [39] 40 41 42 43 Sonraki&gt; Son sayfa&gt;&gt;</code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>Ben bu olay i&ccedil;in bir kod bloğu hazırladım, bunu direkt &ccedil;alışmanıza dahil edip kullanabilir ya da inceleyip daha farklı versiyonlarını yazabilirsiniz. Dikkat edilmesi gereken nokta; bu y&ouml;ntemin doğru ve g&uuml;zel &ccedil;alışması i&ccedil;in&nbsp;<strong>$sayfa_goster</strong>&nbsp;değerine&nbsp;<strong>her zaman tek sayı girin</strong>. Bu sayede kullanıcı bulunduğu sayfayı yukarıdaki &ouml;rnekteki gibi ortada g&ouml;r&uuml;r.</p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n\r\n			<p>2</p>\r\n\r\n			<p>3</p>\r\n\r\n			<p>4</p>\r\n\r\n			<p>5</p>\r\n\r\n			<p>6</p>\r\n\r\n			<p>7</p>\r\n\r\n			<p>8</p>\r\n\r\n			<p>9</p>\r\n\r\n			<p>10</p>\r\n\r\n			<p>11</p>\r\n\r\n			<p>12</p>\r\n\r\n			<p>13</p>\r\n\r\n			<p>14</p>\r\n\r\n			<p>15</p>\r\n\r\n			<p>16</p>\r\n\r\n			<p>17</p>\r\n\r\n			<p>18</p>\r\n\r\n			<p>19</p>\r\n\r\n			<p>20</p>\r\n\r\n			<p>21</p>\r\n\r\n			<p>22</p>\r\n\r\n			<p>23</p>\r\n\r\n			<p>24</p>\r\n\r\n			<p>25</p>\r\n\r\n			<p>26</p>\r\n\r\n			<p>27</p>\r\n\r\n			<p>28</p>\r\n\r\n			<p>29</p>\r\n\r\n			<p>30</p>\r\n\r\n			<p>31</p>\r\n			</td>\r\n			<td>\r\n			<p><code>// yukarıdan geldiği varsayılan değişkenler:</code></p>\r\n\r\n			<p><code>// $toplam_sayfa ve $sayfa</code></p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code>$sayfa_goster</code> <code>= 11; </code><code>// g&ouml;sterilecek sayfa sayısı</code></p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code>$en_az_orta</code> <code>= </code><code>ceil</code><code>(</code><code>$sayfa_goster</code><code>/2);</code></p>\r\n\r\n			<p><code>$en_fazla_orta</code> <code>= (</code><code>$toplam_sayfa</code><code>+1) - </code><code>$en_az_orta</code><code>;</code></p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code>$sayfa_orta</code> <code>= </code><code>$sayfa</code><code>;</code></p>\r\n\r\n			<p><code>if</code><code>(</code><code>$sayfa_orta</code> <code>&lt; </code><code>$en_az_orta</code><code>) </code><code>$sayfa_orta</code> <code>= </code><code>$en_az_orta</code><code>;</code></p>\r\n\r\n			<p><code>if</code><code>(</code><code>$sayfa_orta</code> <code>&gt; </code><code>$en_fazla_orta</code><code>) </code><code>$sayfa_orta</code> <code>= </code><code>$en_fazla_orta</code><code>;</code></p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code>$sol_sayfalar</code> <code>= </code><code>round</code><code>(</code><code>$sayfa_orta</code> <code>- ((</code><code>$sayfa_goster</code><code>-1) / 2));</code></p>\r\n\r\n			<p><code>$sag_sayfalar</code> <code>= </code><code>round</code><code>(((</code><code>$sayfa_goster</code><code>-1) / 2) + </code><code>$sayfa_orta</code><code>); </code></p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code>if</code><code>(</code><code>$sol_sayfalar</code> <code>&lt; 1) </code><code>$sol_sayfalar</code> <code>= 1;</code></p>\r\n\r\n			<p><code>if</code><code>(</code><code>$sag_sayfalar</code> <code>&gt; </code><code>$toplam_sayfa</code><code>) </code><code>$sag_sayfalar</code> <code>= </code><code>$toplam_sayfa</code><code>;</code></p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code>if</code><code>(</code><code>$sayfa</code> <code>!= 1) </code><code>echo</code> <code>&#39; &lt;a href=&quot;?sayfa=1&quot;&gt;&amp;lt;&amp;lt;İlk sayfa&lt;/a&gt; &#39;</code><code>;</code></p>\r\n\r\n			<p><code>if</code><code>(</code><code>$sayfa</code> <code>!= 1) </code><code>echo</code> <code>&#39; &lt;a href=&quot;?sayfa=&#39;</code><code>.(</code><code>$sayfa</code><code>-1).</code><code>&#39;&quot;&gt;&amp;lt;&Ouml;nceki&lt;/a&gt; &#39;</code><code>;</code></p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code>for</code><code>(</code><code>$s</code> <code>= </code><code>$sol_sayfalar</code><code>; </code><code>$s</code> <code>&lt;= </code><code>$sag_sayfalar</code><code>; </code><code>$s</code><code>++) {</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>if</code><code>(</code><code>$sayfa</code> <code>== </code><code>$s</code><code>) {</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>echo</code> <code>&#39;[&#39;</code> <code>. </code><code>$s</code> <code>. </code><code>&#39;] &#39;</code><code>;</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>} </code><code>else</code> <code>{</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>echo</code> <code>&#39;&lt;a href=&quot;?sayfa=&#39;</code><code>.</code><code>$s</code><code>.</code><code>&#39;&quot;&gt;&#39;</code><code>.</code><code>$s</code><code>.</code><code>&#39;&lt;/a&gt; &#39;</code><code>;</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>}</code></p>\r\n\r\n			<p><code>}</code></p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code>if</code><code>(</code><code>$sayfa</code> <code>!= </code><code>$toplam_sayfa</code><code>) </code><code>echo</code> <code>&#39; &lt;a href=&quot;?sayfa=&#39;</code><code>.(</code><code>$sayfa</code><code>+1).</code><code>&#39;&quot;&gt;Sonraki&amp;gt;&lt;/a&gt; &#39;</code><code>;</code></p>\r\n\r\n			<p><code>if</code><code>(</code><code>$sayfa</code> <code>!= </code><code>$toplam_sayfa</code><code>) </code><code>echo</code> <code>&#39; &lt;a href=&quot;?sayfa=&#39;</code><code>.</code><code>$toplam_sayfa</code><code>.</code><code>&#39;&quot;&gt;Son sayfa&amp;gt;&amp;gt;&lt;/a&gt;&#39;</code><code>;</code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>1000+ sayfadan &ccedil;ok daha &ouml;tesi i&ccedil;in burada anlattığımız &ldquo;LIMIT 10, 5&rdquo; ifadesini kullanmak yerine&nbsp;<a href=\"http://www.slideshare.net/suratbhati/efficient-pagination-using-mysql-6187107\" target=\"_blank\">şu slayt</a>ta anlatılan y&ouml;ntemleri inceleyebilirsiniz. Eğer fırsat olursa buradaki slaytta bahsi ge&ccedil;en y&ouml;ntemleri de ayrı bir yazı ya da bu yazıya ek olarak yazmayı d&uuml;ş&uuml;n&uuml;yorum.</p>\r\n\r\n<p>Bu konuyla alakalı aklınıza takılan soruları ya da uyguladığınızda karşılaştığınız sorunları paylaşmaktan &ccedil;ekinmeyin.</p>\r\n', 58, 1);
INSERT INTO `tbl_topic` (`id`, `topictext`, `titleId`, `userId`) VALUES
(62, '<p>Zaman hızla ilerliyor, bunu &ccedil;alışmalarımızda sağlıklı ve fonksiyonel bir şekilde sunabilmek i&ccedil;in PHP ile tarih ve saat ifadelerinden bahsedeceğim.</p>\r\n\r\n<p>Tarih verilerini kullanmaya başlamadan &ouml;nce yapmamız gereken bir takım ayarlar var. Bunlardan ilki doğru saat ve tarihe ulaşabilmek i&ccedil;in hangi il, &uuml;lke ya da zaman diliminde olduğumuzu sunucuya belirtmek.</p>\r\n\r\n<p>Bunun i&ccedil;in &ldquo;<strong>date_default_timezone_set</strong>&rdquo; fonksiyonu ile bizim zaman dilimimizin belirtecini giriyoruz. Eğer farklı diyarların zaman dilimi belirte&ccedil;lerini merak ediyorsanız&nbsp;<a href=\"http://www.php.net/manual/tr/timezones.php\" target=\"_blank\">şuradan</a>&nbsp;bakabilirsiniz. Bu fonksiyonu uygulamanızın ayar dosyalarının i&ccedil;erisine, tarih fonksiyonlarını kullanmadan &ouml;nce yazmalısınız.</p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n			</td>\r\n			<td>\r\n			<p><code>date_default_timezone_set(</code><code>&#39;Europe/Istanbul&#39;</code><code>);</code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<h2>Saat ka&ccedil;?</h2>\r\n\r\n<p>İstediğimiz zaman birimini ya da formatını alıp ekrana yazmak i&ccedil;in&nbsp;<strong>date</strong>&nbsp;fonksiyonunu kullanıyoruz. Kullanımı gayet basit olan bu fonksiyonun i&ccedil;erisinde kullanacağımız bi&ccedil;im karakterlerini &ouml;ğrenmek i&ccedil;in &ouml;ncelikle&nbsp;<a href=\"http://www.php.net/manual/tr/function.date.php\" target=\"_blank\">şuradaki</a>&nbsp;tabloya bakabilirsiniz.</p>\r\n\r\n<p>Ben burada sadece en &ccedil;ok kullanılanlarından bahsedeceğim:</p>\r\n\r\n<table>\r\n	<thead>\r\n		<tr>\r\n			<th>Harf</th>\r\n			<th>A&ccedil;ıklaması</th>\r\n			<th>&Ouml;rnek</th>\r\n		</tr>\r\n	</thead>\r\n	<tbody>\r\n		<tr>\r\n			<td>d</td>\r\n			<td>İki haneli şeklinde g&uuml;n&uuml; verir</td>\r\n			<td>27</td>\r\n		</tr>\r\n		<tr>\r\n			<td>m</td>\r\n			<td>İki haneli şeklinde ayı verir</td>\r\n			<td>07</td>\r\n		</tr>\r\n		<tr>\r\n			<td>Y</td>\r\n			<td>D&ouml;rt haneli şeklinde yılı verir</td>\r\n			<td>2013</td>\r\n		</tr>\r\n		<tr>\r\n			<td>H</td>\r\n			<td>İki haneli ve 24 saat formatında saati verir</td>\r\n			<td>19</td>\r\n		</tr>\r\n		<tr>\r\n			<td>i</td>\r\n			<td>İki haneli şeklinde dakikayı verir</td>\r\n			<td>38</td>\r\n		</tr>\r\n		<tr>\r\n			<td>s</td>\r\n			<td>İki haneli şeklinde saniyeyi verir</td>\r\n			<td>59</td>\r\n		</tr>\r\n		<tr>\r\n			<td>l</td>\r\n			<td>(k&uuml;&ccedil;&uuml;k L) Haftanın g&uuml;n&uuml;n&uuml;n ingilizce adını verir</td>\r\n			<td>Monday</td>\r\n		</tr>\r\n		<tr>\r\n			<td>F</td>\r\n			<td>Ayın ingilizce adını verir</td>\r\n			<td>July</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>Yukarıdaki tabloya g&ouml;re tarih ve zamanları ifade etmek i&ccedil;in kullanacağımız bi&ccedil;imler ş&ouml;yle;</p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n\r\n			<p>2</p>\r\n\r\n			<p>3</p>\r\n\r\n			<p>4</p>\r\n\r\n			<p>5</p>\r\n\r\n			<p>6</p>\r\n\r\n			<p>7</p>\r\n\r\n			<p>8</p>\r\n			</td>\r\n			<td>\r\n			<p><code>// &Ouml;rnek sonu&ccedil;: 29.07.2013 12:13:00</code></p>\r\n\r\n			<p><code>echo</code> <code>date</code><code>(</code><code>&#39;d.m.Y H:i:s&#39;</code><code>);</code></p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code>// &Ouml;rnek sonu&ccedil;: Saat: 12:13</code></p>\r\n\r\n			<p><code>echo</code> <code>&#39;Saat: &#39;</code> <code>. </code><code>date</code><code>(</code><code>&#39;H:i&#39;</code><code>);</code></p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code>// &Ouml;rnek sonu: 29 July 2013 Monday</code></p>\r\n\r\n			<p><code>echo</code> <code>date</code><code>(</code><code>&#39;d F Y l&#39;</code><code>);</code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<h2>Unix time</h2>\r\n\r\n<p>PHP tarih ve zaman ifadelerinde unix zaman damgasını kullanır.&nbsp;<a href=\"https://en.wikipedia.org/wiki/Unix_time\" target=\"_blank\">Unix timestamp</a>&nbsp;en basit ifadeyle &ldquo;<strong>1 Ocak 1970 00:00:00</strong>&rdquo; tarihinden itibaren g&uuml;n&uuml;m&uuml;ze kadar ge&ccedil;en&nbsp;<strong>saniye</strong>&nbsp;sayısıdır.</p>\r\n\r\n<p>Şuanın unix zaman damgasını almak i&ccedil;in i&ccedil;in&nbsp;<strong>time</strong>&nbsp;fonksiyonunu kullanacağız. &Ouml;rneğin ben bu yazıyı hazırlarken ki zamana g&ouml;re elde ettiğim değer aşağıdaki gibi;</p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n\r\n			<p>2</p>\r\n			</td>\r\n			<td>\r\n			<p><code>echo</code> <code>time();</code></p>\r\n\r\n			<p><code>// 1375057836</code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>Bu sayıyı &ouml;nce saniyelere, dakikalara, saatlere ve g&uuml;nlere b&ouml;lerek tam tarihe ulaşabilirsiniz, fakat date fonksiyonu bu işlemleri sizin i&ccedil;in otomatik olarak yapıyor. Veritabanında tarihi saklamanın ucuz ve performanslı yollarından birisidir.</p>\r\n\r\n<h2>Zamanda yolculuk</h2>\r\n\r\n<p>Date fonksiyonuna&nbsp;<strong>ikinci parametre</strong>&nbsp;olarak unix zaman damgasında bir değer girerseniz o girdiğiniz değerin tarihini yazar. &Ouml;rneğin yukarıda time fonksiyonu ile o anki zamanı aldık ve veritabanına yazdık diyelim, sonrasında tarihi g&ouml;stermek istediğimizde date fonksiyonunun ikinci parametresine bu değeri yerleştirmemiz yeterli. Bu sefer bize anlık zamanı değil ona g&ouml;nderdiğimiz değerin zamanını istediğimiz bi&ccedil;imde d&ouml;nd&uuml;recektir.</p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n\r\n			<p>2</p>\r\n\r\n			<p>3</p>\r\n\r\n			<p>4</p>\r\n\r\n			<p>5</p>\r\n			</td>\r\n			<td>\r\n			<p><code>// 29.07.2013 03:30:36</code></p>\r\n\r\n			<p><code>echo</code> <code>date</code><code>(</code><code>&#39;d.m.Y H:i:s&#39;</code><code>, 1375057836);</code></p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code>// 03:30:36</code></p>\r\n\r\n			<p><code>echo</code> <code>date</code><code>(</code><code>&#39;H:i:s&#39;</code><code>, 1375057836);</code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>Aynı mantıkta anlık bir dakika &ouml;ncesini almak i&ccedil;in ş&ouml;yle bir ifade kullanabiliriz;</p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n\r\n			<p>2</p>\r\n			</td>\r\n			<td>\r\n			<p><code>echo</code> <code>date</code><code>(</code><code>&#39;H:i:s&#39;</code><code>, time() - 60);</code></p>\r\n\r\n			<p><code>// Ekranda 1 dakika &ouml;nceki saat yazar</code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<h2>Zaman oluşturmak</h2>\r\n\r\n<p>Yukarıdaki &ouml;rneklerde anın damgasını aldık ya da daha &ouml;nce aldığımız zamanı yazdırdık. İstediğimiz bir zamanın unix zaman damgasını almak i&ccedil;in&nbsp;<strong>mktime</strong>&nbsp;fonksiyonu geliyor.</p>\r\n\r\n<p>Parametreleri sırasıyla ş&ouml;yle;&nbsp;<strong>saat, dakika, saniye, ay, g&uuml;n, yıl</strong>.</p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n\r\n			<p>2</p>\r\n			</td>\r\n			<td>\r\n			<p><code>// 723033059</code></p>\r\n\r\n			<p><code>$timestamp</code> <code>= </code><code>mktime</code><code>(12, 20, 59, 11, 29, 1992);</code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>&Ouml;rneğin yukarıda&nbsp;<strong>29 Kasım 1992 12:20:59</strong>&nbsp;zamanının unix zaman damgasını elde ettik.</p>\r\n\r\n<h2>Zaman farkını hesaplamak</h2>\r\n\r\n<p>Unix zaman damgasının değeri saniye olduğu i&ccedil;in iki değeri birbirinden &ccedil;ıkarttığımızda aralarındaki&nbsp;<strong>saniye farkına</strong>&nbsp;ulaşmış oluruz. Bu sayede iki farklı zaman arasında ge&ccedil;en s&uuml;reyi hesaplayabiliriz.</p>\r\n\r\n<p>Fakat elimize ge&ccedil;ecek sonu&ccedil; saniye olduğu i&ccedil;in eğer 60&rsquo;dan b&uuml;y&uuml;k ise 60&rsquo;a b&ouml;l&uuml;p dakikayı, eğer dakika sayısı da 60&rsquo;dan b&uuml;y&uuml;kse saat farkı olduğunu ifade etmemiz gerekir.</p>\r\n\r\n<p>&Ouml;rneğin ben yine yukarıda oluşturduğum 1992 yılına ait zaman damgası ile g&uuml;n&uuml;m&uuml;z arasındaki farkı bulduracağım.</p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n\r\n			<p>2</p>\r\n\r\n			<p>3</p>\r\n\r\n			<p>4</p>\r\n\r\n			<p>5</p>\r\n\r\n			<p>6</p>\r\n\r\n			<p>7</p>\r\n\r\n			<p>8</p>\r\n			</td>\r\n			<td>\r\n			<p><code>$bugun</code> <code>= time();</code></p>\r\n\r\n			<p><code>$gecmis</code> <code>= </code><code>mktime</code><code>(12, 20, 59, 11, 29, 1992);</code></p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code>$fark</code> <code>= </code><code>$bugun</code> <code>- </code><code>$gecis</code><code>;</code></p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code>echo</code> <code>&#39;Bug&uuml;n: &#39;</code> <code>. </code><code>$bugun</code><code>;</code></p>\r\n\r\n			<p><code>echo</code> <code>&#39;Ge&ccedil;miş: &#39;</code> <code>. </code><code>$gecmis</code><code>;</code></p>\r\n\r\n			<p><code>echo</code> <code>&#39;Saniye farkı: &#39;</code> <code>. </code><code>$fark</code><code>;</code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>Benim bu &ccedil;alışmayı denediğim ana g&ouml;re aldığım &ccedil;ıktı şu şekilde;</p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n\r\n			<p>2</p>\r\n\r\n			<p>3</p>\r\n			</td>\r\n			<td>\r\n			<p><code>Bug&uuml;n: 1375484072</code></p>\r\n\r\n			<p><code>Ge&ccedil;miş: 723032459</code></p>\r\n\r\n			<p><code>Saniye farkı: 652451613</code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>İki zaman arasında&nbsp;<strong>652451613</strong>&nbsp;saniye ge&ccedil;miş. Bu aslında benim şu zamana kadar yaşadığım saniye sayısı oluyor&nbsp;&nbsp;Gelin şimdi bunu zaman birimlerine b&ouml;lelim ve daha anlaşılır bir bi&ccedil;ime sokalım.</p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n\r\n			<p>2</p>\r\n\r\n			<p>3</p>\r\n\r\n			<p>4</p>\r\n\r\n			<p>5</p>\r\n\r\n			<p>6</p>\r\n\r\n			<p>7</p>\r\n\r\n			<p>8</p>\r\n\r\n			<p>9</p>\r\n\r\n			<p>10</p>\r\n\r\n			<p>11</p>\r\n\r\n			<p>12</p>\r\n\r\n			<p>13</p>\r\n\r\n			<p>14</p>\r\n\r\n			<p>15</p>\r\n\r\n			<p>16</p>\r\n\r\n			<p>17</p>\r\n			</td>\r\n			<td>\r\n			<p><code>$dakika</code> <code>= </code><code>$fark</code> <code>/ 60;</code></p>\r\n\r\n			<p><code>$saniye_farki</code> <code>= </code><code>floor</code><code>(</code><code>$fark</code> <code>- (</code><code>floor</code><code>(</code><code>$dakika</code><code>) * 60));</code></p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code>$saat</code> <code>= </code><code>$dakika</code> <code>/ 60;</code></p>\r\n\r\n			<p><code>$dakika_farki</code> <code>= </code><code>floor</code><code>(</code><code>$dakika</code> <code>- (</code><code>floor</code><code>(</code><code>$saat</code><code>) * 60));</code></p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code>$gun</code> <code>= </code><code>$saat</code> <code>/ 24;</code></p>\r\n\r\n			<p><code>$saat_farki</code> <code>= </code><code>floor</code><code>(</code><code>$saat</code> <code>- (</code><code>floor</code><code>(</code><code>$gun</code><code>) * 24));</code></p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code>$yil</code> <code>= </code><code>floor</code><code>(</code><code>$gun</code><code>/365);</code></p>\r\n\r\n			<p><code>$gun_farki</code> <code>= </code><code>floor</code><code>(</code><code>$gun</code> <code>- (</code><code>floor</code><code>(</code><code>$yil</code><code>) * 365));</code></p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code>echo</code> <code>$yil</code> <code>. </code><code>&#39; yıl&#39;</code><code>;</code></p>\r\n\r\n			<p><code>echo</code> <code>$gun_farki</code> <code>. </code><code>&#39; g&uuml;n&#39;</code><code>;</code></p>\r\n\r\n			<p><code>echo</code> <code>$saat_farki</code> <code>. </code><code>&#39; saat&#39;</code><code>;</code></p>\r\n\r\n			<p><code>echo</code> <code>$dakika_farki</code> <code>. </code><code>&#39; dakika&#39;</code><code>;</code></p>\r\n\r\n			<p><code>echo</code> <code>$saniye_farki</code> <code>. </code><code>&#39; saniye&#39;</code><code>;</code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>Bu işlemin sonucunda da ş&ouml;yle bir sonu&ccedil;la karşılaşıyoruz.</p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n\r\n			<p>2</p>\r\n\r\n			<p>3</p>\r\n\r\n			<p>4</p>\r\n\r\n			<p>5</p>\r\n			</td>\r\n			<td>\r\n			<p><code>20 yıl</code></p>\r\n\r\n			<p><code>251 g&uuml;n</code></p>\r\n\r\n			<p><code>12 saat</code></p>\r\n\r\n			<p><code>33 dakika</code></p>\r\n\r\n			<p><code>33 saniye</code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>Yani doğduğum g&uuml;nden bug&uuml;ne ge&ccedil;en zamanım buymuş.</p>\r\n\r\n<h2>Tarihi unix zaman damgasına &ccedil;evirmek</h2>\r\n\r\n<p><strong>Strtotime</strong>&nbsp;fonksiyonu ile yazılı tarihi unix zaman damgasına &ccedil;evirebiliriz. Zaman ifadeleri haricinde bir takım İngilizce ifadeleri de kullanabiliyoruz.</p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n\r\n			<p>2</p>\r\n\r\n			<p>3</p>\r\n\r\n			<p>4</p>\r\n\r\n			<p>5</p>\r\n\r\n			<p>6</p>\r\n\r\n			<p>7</p>\r\n\r\n			<p>8</p>\r\n\r\n			<p>9</p>\r\n\r\n			<p>10</p>\r\n\r\n			<p>11</p>\r\n\r\n			<p>12</p>\r\n\r\n			<p>13</p>\r\n\r\n			<p>14</p>\r\n\r\n			<p>15</p>\r\n\r\n			<p>16</p>\r\n\r\n			<p>17</p>\r\n\r\n			<p>18</p>\r\n			</td>\r\n			<td>\r\n			<p><code>echo</code> <code>strtotime</code><code>(</code><code>&#39;03.08.2013 03:23&#39;</code><code>);</code></p>\r\n\r\n			<p><code>// Girilen tarihin unix zaman damgasını verir</code></p>\r\n\r\n			<p><code>// 1375489380</code></p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code>// Uygulanabilir diğer ifadeler</code></p>\r\n\r\n			<p><code>strtotime</code><code>(</code><code>&#39;2013-08-03&#39;</code><code>);</code></p>\r\n\r\n			<p><code>strtotime</code><code>(</code><code>&#39;12:02:59&#39;</code><code>);</code></p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code>// Şuanki zamana 1 g&uuml;n ekler ve 1 saat &ccedil;ıkartır</code></p>\r\n\r\n			<p><code>strtotime</code><code>(</code><code>&#39;+1 day, -1 hour&#39;</code><code>);</code></p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code>// Bir hafta &ouml;ncesinin zaman damgasını verir</code></p>\r\n\r\n			<p><code>strtotime</code><code>(</code><code>&#39;-1 week&#39;</code><code>);</code></p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code>// Enteresan bir &ouml;rnek</code></p>\r\n\r\n			<p><code>echo</code> <code>date</code><code>(</code><code>&#39;d.m.Y H:i:s&#39;</code><code>, </code><code>strtotime</code><code>(</code><code>&#39;+5 years -2 weeks +3 months -5 minutes&#39;</code><code>));</code></p>\r\n\r\n			<p><code>// Şuanki zamana 5 yıl, 3 ay ekleyip 5 dakika ve 2 hafta &ccedil;ıkartır,</code></p>\r\n\r\n			<p><code>// elde ettiği zamanı belirttiğim formatta yazdırır.</code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>Kullanıcılarınıza tarih girmelerini istediğinizde, girdikleri tarihi bu fonksiyondan ge&ccedil;irip veritabanınızda unix formatında saklayabilirsiniz. Fonksiyon eğer anlayamadığı bir bi&ccedil;im ile karşılaşırsa&nbsp;<strong>false</strong>&nbsp;d&ouml;necektir.</p>\r\n\r\n<h2>Tarihi T&uuml;rk&ccedil;e yazdırmak</h2>\r\n\r\n<p><strong>Date</strong>&nbsp;fonksiyonu ayı ve haftanın g&uuml;nlerini İngilizce olarak veriyor. Bu nedenle tarihi T&uuml;rk&ccedil;e yazdırmak istediğimizde 2 farklı se&ccedil;eneğimiz var. Birincisi eğer kodlarımızı &ccedil;alıştıracağımız sunucuda T&uuml;rk&ccedil;e dil desteği var ise iki fonksiyonla olayı ger&ccedil;ekleştirebiliyoruz.</p>\r\n\r\n<h3>1. Y&ouml;ntem (Eğer sistemde T&uuml;rk&ccedil;e dili tanımlıysa)</h3>\r\n\r\n<p>&Ouml;nce&nbsp;<strong>setlocale</strong>&nbsp;fonksiyonu ile zaman işlemlerinde kullanacağımız dilimizi ifade ediyoruz. Sonrasında&nbsp;<strong>strftime</strong>&nbsp;fonksiyonu ile ifade ettiğimiz dilde zaman &ccedil;ıktısını alıyoruz. Strftime fonksiyonunun bi&ccedil;im karakterleri date fonksiyonunkilerinden farklı, yine t&uuml;m bi&ccedil;im karakterleri i&ccedil;in&nbsp;<a href=\"https://php.net/manual/tr/function.strftime.php\">şuraya</a>&nbsp;bakabilirsiniz fakat ben bizim kullanacaklarımızı tanıtacağım.</p>\r\n\r\n<table>\r\n	<thead>\r\n		<tr>\r\n			<th>Harf</th>\r\n			<th>A&ccedil;ıklaması</th>\r\n			<th>&Ouml;rnek</th>\r\n		</tr>\r\n	</thead>\r\n	<tbody>\r\n		<tr>\r\n			<td>%e</td>\r\n			<td>G&uuml;n&uuml; sıfır dolgusuz verir</td>\r\n			<td>27</td>\r\n		</tr>\r\n		<tr>\r\n			<td>%m</td>\r\n			<td>İki haneli şeklinde ayı verir</td>\r\n			<td>07</td>\r\n		</tr>\r\n		<tr>\r\n			<td>%Y</td>\r\n			<td>D&ouml;rt haneli şeklinde yılı verir</td>\r\n			<td>2013</td>\r\n		</tr>\r\n		<tr>\r\n			<td>%H</td>\r\n			<td>İki haneli ve 24 saat formatında saati verir</td>\r\n			<td>19</td>\r\n		</tr>\r\n		<tr>\r\n			<td>%M</td>\r\n			<td>İki haneli şeklinde dakikayı verir</td>\r\n			<td>38</td>\r\n		</tr>\r\n		<tr>\r\n			<td>%S</td>\r\n			<td>İki haneli şeklinde saniyeyi verir</td>\r\n			<td>59</td>\r\n		</tr>\r\n		<tr>\r\n			<td>%A</td>\r\n			<td>Haftanın g&uuml;n&uuml;n&uuml;n adını verir</td>\r\n			<td>Perşembe</td>\r\n		</tr>\r\n		<tr>\r\n			<td>%B</td>\r\n			<td>Ayın adını verir</td>\r\n			<td>Ocak</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n\r\n			<p>2</p>\r\n\r\n			<p>3</p>\r\n\r\n			<p>4</p>\r\n\r\n			<p>5</p>\r\n\r\n			<p>6</p>\r\n\r\n			<p>7</p>\r\n\r\n			<p>8</p>\r\n\r\n			<p>9</p>\r\n			</td>\r\n			<td>\r\n			<p><code>// Zaman i&ccedil;in kullanacağımız dili ifade ediyoruz</code></p>\r\n\r\n			<p><code>setlocale(LC_TIME, </code><code>&#39;tr_TR&#39;</code><code>);</code></p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code>// Şu şekilde de olabilir</code></p>\r\n\r\n			<p><code>// setlocale(LC_TIME, &#39;tr_TR.UTF-8&#39;);</code></p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code>// İstediğimiz bi&ccedil;imde ve belirttiğimiz dilde tarihi yazdırıyoruz</code></p>\r\n\r\n			<p><code>echo</code> <code>strftime</code><code>(</code><code>&#39;%e %B %Y %A %H:%M:%S&#39;</code><code>);</code></p>\r\n\r\n			<p><code>// &Ouml;rnek Sonu&ccedil;: 3 Ağustos 2013 Cumartesi 02:05:42</code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>Eğer sunucunuz T&uuml;rk&ccedil;e&rsquo;yi biliyorsa bu kadar kolay, fakat bilmiyorsa alternatif ve birazda manuel olarak diğer y&ouml;ntemi uygulamalıyız.</p>\r\n\r\n<h3>2. Y&ouml;ntem</h3>\r\n\r\n<p>Bu sefer date fonksiyonu ile ka&ccedil;ıncı ayda ve haftanın ka&ccedil;ıncı g&uuml;n&uuml;nde olduğumuzu alıp, kendi tanımladığımız dizilerden ay ve g&uuml;n isimlerini eşleştireceğiz. Yukarıda anlattıklarımın dışında; haftanın ka&ccedil;ıncı g&uuml;n&uuml; olduğu veren &ldquo;<strong>N</strong>&ldquo;, g&uuml;n&uuml; sıfır dolgusuz veren &ldquo;<strong>j</strong>&rdquo; karakterini kullanacağız.</p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n\r\n			<p>2</p>\r\n\r\n			<p>3</p>\r\n\r\n			<p>4</p>\r\n\r\n			<p>5</p>\r\n\r\n			<p>6</p>\r\n\r\n			<p>7</p>\r\n\r\n			<p>8</p>\r\n\r\n			<p>9</p>\r\n\r\n			<p>10</p>\r\n\r\n			<p>11</p>\r\n\r\n			<p>12</p>\r\n\r\n			<p>13</p>\r\n\r\n			<p>14</p>\r\n\r\n			<p>15</p>\r\n\r\n			<p>16</p>\r\n\r\n			<p>17</p>\r\n\r\n			<p>18</p>\r\n\r\n			<p>19</p>\r\n\r\n			<p>20</p>\r\n\r\n			<p>21</p>\r\n\r\n			<p>22</p>\r\n\r\n			<p>23</p>\r\n\r\n			<p>24</p>\r\n\r\n			<p>25</p>\r\n\r\n			<p>26</p>\r\n\r\n			<p>27</p>\r\n\r\n			<p>28</p>\r\n\r\n			<p>29</p>\r\n\r\n			<p>30</p>\r\n			</td>\r\n			<td>\r\n			<p><code>$gunler</code> <code>= </code><code>array</code><code>(</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>&#39;Pazartesi&#39;</code><code>,</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>&#39;Salı&#39;</code><code>,</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>&#39;&Ccedil;arşamba&#39;</code><code>,</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>&#39;Perşembe&#39;</code><code>,</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>&#39;Cuma&#39;</code><code>,</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>&#39;Cumartesi&#39;</code><code>,</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>&#39;Pazar&#39;</code></p>\r\n\r\n			<p><code>);</code></p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code>$aylar</code> <code>= </code><code>array</code><code>(</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>&#39;Ocak&#39;</code><code>,</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>&#39;Şubat&#39;</code><code>,</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>&#39;Mart&#39;</code><code>,</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>&#39;Nisan&#39;</code><code>,</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>&#39;Mayıs&#39;</code><code>,</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>&#39;Haziran&#39;</code><code>,</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>&#39;Temmuz&#39;</code><code>,</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>&#39;Ağustos&#39;</code><code>,</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>&#39;Eyl&uuml;l&#39;</code><code>,</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>&#39;Ekim&#39;</code><code>,</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>&#39;Kasım&#39;</code><code>,</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;</code><code>&#39;Aralık&#39;</code></p>\r\n\r\n			<p><code>);</code></p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code>$ay</code> <code>= </code><code>$aylar</code><code>[</code><code>date</code><code>(</code><code>&#39;m&#39;</code><code>) - 1];</code></p>\r\n\r\n			<p><code>$gun</code> <code>= </code><code>$gunler</code><code>[</code><code>date</code><code>(</code><code>&#39;N&#39;</code><code>) - 1];</code></p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code>echo</code> <code>date</code><code>(</code><code>&#39;j &#39;</code><code>) . </code><code>$ay</code> <code>. </code><code>date</code><code>(</code><code>&#39; Y &#39;</code><code>) . </code><code>$gun</code> <code>. </code><code>date</code><code>(</code><code>&#39; H:i:s&#39;</code><code>);</code></p>\r\n\r\n			<p><code>// &Ouml;rnek Sonu&ccedil;: 3 Ağustos 2013 Cumartesi 02:19:18</code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>Eğer dilerseniz bu dizini ve ifadeyi kullanarak kendinize bir fonksiyon hazırlayabilirsiniz.</p>\r\n\r\n<p>Bu yazıda PHP&rsquo;nin temel tarih ve saat fonksiyonlarından bahsetmeye &ccedil;alıştım. Bir sonraki yazıda&nbsp;<a href=\"http://www.php.net/manual/tr/book.datetime.php\">DateTime</a>&nbsp;tarih ve saat sınıfından bahsetmeye &ccedil;alışacağım.</p>\r\n\r\n<p>Zamanı iyi değerlendirmeniz dileğiyle.</p>\r\n', 59, 1),
(63, '<h2>Metot Yapımı ve Kullanımı</h2>\r\n\r\n<pre>\r\n int MetotAdi(int a,int b)\r\n {\r\n    return a+b;\r\n }\r\n</pre>\r\n\r\n<p>Bu metot, iki tane int t&uuml;r&uuml;nden girdi alır ve bu girdilerin toplamını int t&uuml;r&uuml;nden tutar. Ancak bu metodu programımız i&ccedil;inde kullanabilmemiz i&ccedil;in bu metodun i&ccedil;inde bulunduğu sınıf t&uuml;r&uuml;nden bir nesne belirleyip &quot;.&quot; operat&ouml;r&uuml;yle bu nesne &uuml;zerinden metodumuza erişmeliyiz. &Ouml;rnek:</p>\r\n\r\n<pre>\r\n using System;\r\n class Metotlar\r\n {\r\n    int Topla(int a,int b)\r\n    {\r\n       return a+b;\r\n    }\r\n    static void Main()\r\n    {\r\n       Metotlar nesne=new Metotlar();\r\n       int a=nesne.Topla(2,5);\r\n       Console.Write(a);\r\n    }\r\n }\r\n</pre>\r\n\r\n<ul>\r\n	<li>static olarak tanımlanan metotlara erişmek i&ccedil;in metodun i&ccedil;inde bulunduğu sınıf t&uuml;r&uuml;nden bir nesne belirtmeye gerek yoktur. static olarak tanımlanan metotlara sadece metodun adını yazarak erişilebilir. &Ouml;rnek:</li>\r\n</ul>\r\n\r\n<pre>\r\n using System;\r\n class Metotlar\r\n {\r\n    static int Topla(int a,int b)\r\n    {\r\n       return a+b;\r\n    }\r\n    static void Main()\r\n    {\r\n       int a=Topla(2,5);\r\n       Console.Write(a);\r\n    }\r\n }\r\n</pre>\r\n\r\n<ul>\r\n	<li>B&uuml;t&uuml;n programlarda &ouml;nce Main metodu &ccedil;alışır. Diğer metotlar Main metodunun i&ccedil;inden &ccedil;ağrılmadık&ccedil;a &ccedil;alışmaz.</li>\r\n	<li>Eğer metot, i&ccedil;inde bulunduğumuz sınıfta değil de, başka bir sınıf i&ccedil;inde oluşturulmuşsa o metodu kullanabilmek i&ccedil;in &ouml;nce sınıfı yazmamız gerekir. &Ouml;rnek:</li>\r\n</ul>\r\n\r\n<pre>\r\n using System;\r\n class Metotlar1\r\n {\r\n    public static int Topla(int a,int b)\r\n    {\r\n       return a+b;\r\n    }\r\n }\r\n class Metotlar2\r\n {\r\n    static void Main()\r\n    {\r\n       int a=Metotlar1.Topla(2,5);\r\n       Console.Write(a);\r\n    }\r\n }\r\n</pre>\r\n\r\n<p>Dikkat ettiyseniz bu metodun yazıldığı satırın (4. satır) başına&nbsp;<code>public</code>&nbsp;anahtar s&ouml;zc&uuml;ğ&uuml; konmuş.&nbsp;<code>public</code>&nbsp;s&ouml;zc&uuml;ğ&uuml;yle derleyiciye bu metoda her sınıftan erişilebileceğini s&ouml;yl&uuml;yoruz. Eğer public s&ouml;zc&uuml;ğ&uuml; yazılmamış olsaydı bu metoda sadece&nbsp;<code>Metotlar1</code>&nbsp;sınıfından erişilebilirdi.</p>\r\n\r\n<ul>\r\n	<li>Şimdi de static olmayan bir metodu başka bir sınıf i&ccedil;inde yazalım ve kullanalım:</li>\r\n</ul>\r\n\r\n<pre>\r\n using System;\r\n class Metotlar1\r\n {\r\n    public int Topla(int a,int b)\r\n    {\r\n       return a+b;\r\n    }\r\n }\r\n class Metotlar2\r\n {\r\n    static void Main()\r\n    {\r\n       Metotlar1 nesne=new Metotlar1();\r\n       int a=nesne.Topla(3,9);\r\n       Console.Write(a);\r\n    }\r\n }\r\n</pre>\r\n\r\n<ul>\r\n	<li>B&uuml;t&uuml;n değer tutan metotlar bir değermiş gibi kullanılabilir, ancak değişkenmiş gibi kullanılamaz.</li>\r\n	<li>Herhangi bir değer tutmayan (<code>WriteLine</code>&nbsp;gibi) metotları&nbsp;<code>void</code>&nbsp;anahtar s&ouml;zc&uuml;ğ&uuml;yle &uuml;retiriz. &Ouml;rnek:</li>\r\n</ul>\r\n\r\n<pre>\r\n using System;\r\n class Metotlar1\r\n {\r\n    static void Yaz(object a,int b)\r\n    {\r\n       for(;b&gt;0;b--)\r\n       {\r\n          Console.Write(a);\r\n       }\r\n    }\r\n    static void Main()\r\n    {\r\n       Yaz(&quot;deneme&quot;,5);\r\n    }\r\n }\r\n</pre>\r\n\r\n<p>Burada oluşturduğumuz&nbsp;<code>Yaz</code>&nbsp;metodu aldığı ilk parametreyi ikinci parametre kere ekrana yazar. &Ouml;rneğin programımızda &quot;deneme&quot; stringi ekrana 5 kez yazdırılıyor.</p>\r\n\r\n<ul>\r\n	<li>Herhangi bir değer tutmayan metotlarda&nbsp;<code>return;</code>&nbsp;komutu, yanına herhangi bir ifade olmadan kullanılabilir. Aslında&nbsp;<code>return;</code>&nbsp;komutunun asıl g&ouml;revi metottan &ccedil;ıkmaktır, ancak yanına bazı ifadeler koyularak metodun tuttuğu değeri belirtme vazifesi de g&ouml;r&uuml;r. &Ouml;rneğin bir&nbsp;<code>if</code>&nbsp;koşulu belirtip, eğer koşul sağlanırsa metottan &ccedil;ıkılmasını, koşul sağlanmazsa başka komutlar da &ccedil;alıştırılmasını sağlayabiliriz. Ancak doğal olarak bir metodun son satırında&nbsp;<code>return;</code>&nbsp;komutunun kullanılması gereksizdir. &Ouml;rnek kullanım:</li>\r\n</ul>\r\n\r\n<pre>\r\n using System;\r\n class Metotlar1\r\n {\r\n    static void Yaz(object a,int b)\r\n    {\r\n        if(b&gt;10)\r\n        {\r\n          return;\r\n        }\r\n        for(;b&gt;0;b--)\r\n        {\r\n          Console.Write(a);\r\n        }\r\n    }\r\n    static void Main()\r\n    {\r\n       Yaz(&#39;n&#39;,10);\r\n    }\r\n }\r\n</pre>\r\n\r\n<p>Bu programda eğer metoda verilen ikinci parametre 10&#39;dan b&uuml;y&uuml;kse metottan hi&ccedil;bir şey yapılmadan &ccedil;ıkılıyor.</p>\r\n', 60, 1),
(64, '<p>PHP&rsquo;de&nbsp;<strong>e-posta</strong>&nbsp;g&ouml;ndermek gayet&nbsp;<strong>basit</strong>&nbsp;ve sadece&nbsp;<strong>mail()</strong>&nbsp;fonksiyonu ile ger&ccedil;ekleşiyor. En az &uuml;&ccedil; parametre ile &ccedil;alışan bu fonksiyona posta g&ouml;nderilecek adresi, mesajın konusunu ve mesajın i&ccedil;eriğini yazarız.</p>\r\n\r\n<p>D&ouml;rd&uuml;nc&uuml; parametresi ile başlıkları kullanarakta birden fazla kullanıcıya g&ouml;ndermeye ya da g&ouml;nderici e-posta adresini belirtme gibi ifadeler ekleyebilirsin.</p>\r\n\r\n<p>T&uuml;m bu mail g&ouml;nderme işlerine girmeden &ouml;nce bir mail formu yapmamız gerekiyor.&nbsp;<strong>HTML formları</strong>&nbsp;hakkında daha fazla bilgi almak i&ccedil;in&nbsp;<a href=\"https://www.phpr.org/2010/06/php-form-kullanimi-ve-ornekleri/\">&ouml;nceki yazımıza</a>&nbsp;g&ouml;z atabilirsin.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h2>Mail formu hazırlamak</h2>\r\n\r\n<p>Formumuzu hazırlarken HTML kullanacağız. Yani aray&uuml;z ve form elementlerini HTML dilinde yazacağız. Ve bu formun verilerini PHP uygulamamıza g&ouml;ndereceğiz.</p>\r\n\r\n<p>Biz formu yapacağımız dosya adını&nbsp;<strong>form.php</strong>, maili g&ouml;nderecek olan PHP uygulamamızın olacağı dosyanın adınıda&nbsp;<strong>mail.php</strong>&nbsp;olarak ayarladık. Ve bu y&uuml;zden formun&nbsp;<strong>action</strong>&nbsp;parametresine&nbsp;<strong>mail.php</strong>&nbsp;yazdık.</p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n\r\n			<p>2</p>\r\n\r\n			<p>3</p>\r\n\r\n			<p>4</p>\r\n\r\n			<p>5</p>\r\n\r\n			<p>6</p>\r\n\r\n			<p>7</p>\r\n\r\n			<p>8</p>\r\n\r\n			<p>9</p>\r\n\r\n			<p>10</p>\r\n\r\n			<p>11</p>\r\n			</td>\r\n			<td>\r\n			<p><code>&lt;</code><code>form</code> <code>action</code><code>=</code><code>&quot;mail.php&quot;</code> <code>method</code><code>=</code><code>&quot;post&quot;</code><code>&gt;</code></p>\r\n\r\n			<p><code>Adınız: &lt;</code><code>br</code><code>/&gt;</code></p>\r\n\r\n			<p><code>&lt;</code><code>input</code> <code>type</code><code>=</code><code>&quot;text&quot;</code> <code>name</code><code>=</code><code>&quot;ad&quot;</code> <code>/&gt;&lt;</code><code>br</code><code>/&gt;</code></p>\r\n\r\n			<p><code>E-Posta adresiniz: &lt;</code><code>br</code><code>/&gt;</code></p>\r\n\r\n			<p><code>&lt;</code><code>input</code> <code>type</code><code>=</code><code>&quot;text&quot;</code> <code>name</code><code>=</code><code>&quot;eposta&quot;</code> <code>/&gt;&lt;</code><code>br</code><code>/&gt;</code></p>\r\n\r\n			<p><code>Konu: &lt;</code><code>br</code><code>/&gt;</code></p>\r\n\r\n			<p><code>&lt;</code><code>input</code> <code>type</code><code>=</code><code>&quot;text&quot;</code> <code>name</code><code>=</code><code>&quot;konu&quot;</code> <code>/&gt;&lt;</code><code>br</code><code>/&gt;</code></p>\r\n\r\n			<p><code>Mesajınız: &lt;</code><code>br</code><code>/&gt;</code></p>\r\n\r\n			<p><code>&lt;</code><code>textarea</code> <code>name</code><code>=</code><code>&quot;mesaj&quot;</code><code>&gt;&lt;/</code><code>textarea</code><code>&gt;&lt;</code><code>br</code><code>/&gt;</code></p>\r\n\r\n			<p><code>&lt;</code><code>input</code> <code>type</code><code>=</code><code>&quot;submit&quot;</code> <code>value</code><code>=</code><code>&quot;Mesajı G&ouml;nder&quot;</code> <code>/&gt;</code></p>\r\n\r\n			<p><code>&lt;/</code><code>form</code><code>&gt;</code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>Formun&nbsp;<strong>action</strong>&nbsp;parametresine yazdığımız adres, formu g&ouml;ndereceğimiz PHP uygulamasının adresi olmalı. Bu formun g&ouml;r&uuml;nt&uuml;s&uuml; ş&ouml;yle olur:</p>\r\n\r\n<p><img alt=\"\" src=\"https://www.phpr.org/wp-content/uploads/2010/06/mail-form.png\" style=\"height:237px; width:206px\" /></p>\r\n\r\n<p>İstediğimiz kadar form elementi ekleyebiliriz, yanlız eklediğimiz elementlerin&nbsp;<strong>name</strong>&nbsp;parametresine her birine ayrı ve ayırt edici bir değer vermeyi unutmayın. Form elementlerine verdiğimiz bu&nbsp;<strong>name</strong>&nbsp;parametrelerini PHP uygulamamızda aynı şekilde bu verilere ulaşmak i&ccedil;in kullanacağız.</p>\r\n\r\n<h2>PHP ile formu kontrol etme ve mail g&ouml;nderme</h2>\r\n\r\n<p>Şimdi gelelim PHP kodu kısmına. Burada &ouml;nde bize formdan g&ouml;nderilen verileri kontrol edeceğiz ve sonrasında g&ouml;nderilen bilgiler uygun ise maili g&ouml;ndereceğiz.</p>\r\n\r\n<p>Kontrol işleminde t&uuml;m form değerleri tanımlanmış mı ve boş mu diye bakacağız.</p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n\r\n			<p>2</p>\r\n\r\n			<p>3</p>\r\n\r\n			<p>4</p>\r\n\r\n			<p>5</p>\r\n\r\n			<p>6</p>\r\n\r\n			<p>7</p>\r\n\r\n			<p>8</p>\r\n\r\n			<p>9</p>\r\n\r\n			<p>10</p>\r\n\r\n			<p>11</p>\r\n\r\n			<p>12</p>\r\n\r\n			<p>13</p>\r\n\r\n			<p>14</p>\r\n\r\n			<p>15</p>\r\n			</td>\r\n			<td>\r\n			<p><code>if</code><code>(isset(</code><code>$_POST</code><code>[</code><code>&#39;ad&#39;</code><code>]) &amp;&amp; isset(</code><code>$_POST</code><code>[</code><code>&#39;eposta&#39;</code><code>]) &amp;&amp; isset(</code><code>$_POST</code><code>[</code><code>&#39;konu&#39;</code><code>]) &amp;&amp; isset(</code><code>$_POST</code><code>[</code><code>&#39;mesaj&#39;</code><code>])) {</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;</code><code>if</code><code>(</code><code>empty</code><code>(</code><code>$_POST</code><code>[</code><code>&#39;ad&#39;</code><code>]) || </code><code>empty</code><code>(</code><code>$_POST</code><code>[</code><code>&#39;eposta&#39;</code><code>]) || </code><code>empty</code><code>(</code><code>$_POST</code><code>[</code><code>&#39;konu&#39;</code><code>]) || </code><code>empty</code><code>(</code><code>$_POST</code><code>[</code><code>&#39;mesaj&#39;</code><code>])) {</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>echo</code> <code>&#39;L&uuml;tfen boş yer bırakmayın!&#39;</code><code>;</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;</code><code>} </code><code>else</code> <code>{</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>$ad</code> <code>= </code><code>strip_tags</code><code>(</code><code>$_POST</code><code>[</code><code>&#39;ad&#39;</code><code>]);</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>$eposta</code> <code>= </code><code>strip_tags</code><code>(</code><code>$_POST</code><code>[</code><code>&#39;eposta&#39;</code><code>]);</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>$konu</code> <code>= </code><code>strip_tags</code><code>(</code><code>$_POST</code><code>[</code><code>&#39;konu&#39;</code><code>]);</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>$mesaj</code> <code>= </code><code>strip_tags</code><code>(</code><code>$_POST</code><code>[</code><code>&#39;mesaj&#39;</code><code>]);</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>$icerik</code> <code>= </code><code>&#39;Ad: &#39;</code> <code>. </code><code>$ad</code> <code>. </code><code>&#39;&lt;br/&gt;E-Posta: &#39;</code><code>. </code><code>$eposta</code> <code>. </code><code>&#39;&lt;br/&gt;&#39;</code> <code>. </code><code>$mesaj</code><code>;</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>mail(</code><code>&#39;bizim-posta-adresimiz@sitemiz.com&#39;</code><code>, </code><code>$konu</code><code>, </code><code>$icerik</code><code>);</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code>echo</code> <code>&#39;Mesajınız G&ouml;nderildi! Teşekk&uuml;rler.&#39;</code><code>;</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;</code><code>}</code></p>\r\n\r\n			<p><code>} </code><code>else</code> <code>{</code></p>\r\n\r\n			<p><code>&nbsp;&nbsp;&nbsp;</code><code>echo</code> <code>&#39;L&uuml;tfen Formu Kullanın!&#39;</code><code>;</code></p>\r\n\r\n			<p><code>}</code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>14 satırlık bu kodlarımızın i&ccedil;erisinde 2 koşul kullandık. İlk koşulda formun verileri g&ouml;nderilmiş mi diye tek tek kontrol ettik, ikinci koşulda ise g&ouml;nderilen değerleri boş mu diye kontrol ettik. Eğer iki koşulda ge&ccedil;ilirse e-posta g&ouml;nderilmek i&ccedil;in hazırdır ve ilk parametrede belirttiğimiz adrese g&ouml;nderilir. Hepsi bu kadar.</p>\r\n\r\n<h2>PHP mail g&ouml;ndermede header kullanımı</h2>\r\n\r\n<p>Mail fonksiyonunu 3 parametre ile en sade halini kullanmış oluruz. Eğer istersek 4. parametreye header dediğimiz &ouml;zel başlık ifadelerini yerleştirerek, g&ouml;nderinin adresi, g&ouml;nderilecek diğer kişiler, gizli g&ouml;nderim, html şeklinde g&ouml;nderim gibi bir &ccedil;ok şey yapabiliriz.</p>\r\n\r\n<p>&Ouml;rneğin bir header &ouml;rneği ile nasıl yollayan adresi belirteceğimizi g&ouml;sterelim:</p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n\r\n			<p>2</p>\r\n\r\n			<p>3</p>\r\n\r\n			<p>4</p>\r\n\r\n			<p>5</p>\r\n			</td>\r\n			<td>\r\n			<p><code>$headers</code> <code>= </code><code>&#39;From: gonderen@adres.com&#39;</code> <code>. </code><code>&quot;rn&quot;</code><code>;</code></p>\r\n\r\n			<p><code>$gonderilecek</code> <code>= </code><code>&#39;gonderilecek@adres.com&#39;</code><code>;</code></p>\r\n\r\n			<p><code>$konu</code> <code>= </code><code>&#39;E-Postanın konusu&#39;</code><code>;</code></p>\r\n\r\n			<p><code>$mesaj</code> <code>= </code><code>&#39;Mesajın i&ccedil;eriği.&#39;</code><code>;</code></p>\r\n\r\n			<p><code>mail(</code><code>$gonderilecek</code><code>, </code><code>$konu</code><code>, </code><code>$mesaj</code><code>, </code><code>$headers</code><code>);</code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>Bu kodu &ccedil;alıştırdığımızda&nbsp;<strong>gonderilecek@adres.com</strong>&nbsp;adresine&nbsp;<strong>gonderen@adres.com</strong>&nbsp;adresinden bir mail g&ouml;ndermiş oluruz.</p>\r\n\r\n<p>Daha detaylı bir &ouml;rnek i&ccedil;in şu kodu inceleyebilirsin:</p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n\r\n			<p>2</p>\r\n\r\n			<p>3</p>\r\n\r\n			<p>4</p>\r\n\r\n			<p>5</p>\r\n\r\n			<p>6</p>\r\n\r\n			<p>7</p>\r\n\r\n			<p>8</p>\r\n\r\n			<p>9</p>\r\n\r\n			<p>10</p>\r\n\r\n			<p>11</p>\r\n\r\n			<p>12</p>\r\n\r\n			<p>13</p>\r\n			</td>\r\n			<td>\r\n			<p><code>$headers</code>&nbsp; <code>= </code><code>&#39;MIME-Version: 1.0&#39;</code> <code>. </code><code>&quot;rn&quot;</code><code>;</code></p>\r\n\r\n			<p><code>$headers</code> <code>.= </code><code>&#39;Content-type: text/html; charset=utf-8&#39;</code> <code>. </code><code>&quot;rn&quot;</code><code>;</code></p>\r\n\r\n			<p><code>$headers</code> <code>.= </code><code>&#39;To: Alıcı 1 &lt;alici1@adres.com&gt;, Alıcı 2 &lt;alici2@adres.com&gt;&#39;</code> <code>. </code><code>&quot;rn&quot;</code><code>;</code></p>\r\n\r\n			<p><code>$headers</code> <code>.= </code><code>&#39;From: Yollayan &lt;yollayan@adres.com&gt;&#39;</code> <code>. </code><code>&quot;rn&quot;</code><code>;</code></p>\r\n\r\n			<p><code>$headers</code> <code>.= </code><code>&#39;Reply-To: Yanit &lt;yanit@adres.com&gt;&#39;</code> <code>. </code><code>&quot;rn&quot;</code><code>;</code></p>\r\n\r\n			<p><code>$headers</code> <code>.= </code><code>&#39;X-Mailer: PHP/&#39;</code> <code>. phpversion() . </code><code>&quot;rn&quot;</code><code>;</code></p>\r\n\r\n			<p><code>$headers</code> <code>.= </code><code>&#39;Cc: diger-gonderilecek@adres.com&#39;</code> <code>. </code><code>&quot;rn&quot;</code><code>;</code></p>\r\n\r\n			<p><code>$headers</code> <code>.= </code><code>&#39;Bcc: gizli-gonderilecek@adres.com&#39;</code> <code>. </code><code>&quot;rn&quot;</code><code>;</code></p>\r\n\r\n			<p>&nbsp;</p>\r\n\r\n			<p><code>$eposta</code> <code>= </code><code>&#39;alici1@adresi.com&#39;</code><code>;</code></p>\r\n\r\n			<p><code>$konu</code> <code>= </code><code>&#39;HTML kodlu e-posta g&ouml;nderme&#39;</code><code>;</code></p>\r\n\r\n			<p><code>$mesaj</code> <code>= </code><code>&#39;&lt;b&gt;&lt;i&gt;Kalın ve italik bir yazı g&ouml;nderiyoruz&lt;/i&gt;&lt;/b&gt;&#39;</code><code>;</code></p>\r\n\r\n			<p><code>mail(</code><code>$eposta</code><code>, </code><code>$konu</code><code>, </code><code>$mesaj</code><code>, </code><code>$headers</code><code>);</code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>Yukarıda yaptığımız &ouml;rnek &ccedil;alışmanın dosyalarını indirmek i&ccedil;in&nbsp;<a href=\"https://www.phpr.org/wp-content/uploads/2010/06/php-mail-form.zip\">buraya</a>&nbsp;<small>(714 bayt, 2 dosya)</small>&nbsp;tıklayın.<br />\r\n<em>Bir sonraki PHP ser&uuml;venlerinde g&ouml;r&uuml;şmek &uuml;zere hoş&ccedil;akalın.</em></p>\r\n', 61, 1),
(65, '<p>PHP&rsquo;de ve bazı diğer programlama dillerinde &ldquo;<strong>n</strong>&ldquo;, &ldquo;<strong>r</strong>&ldquo;, &ldquo;<strong>t</strong>&rdquo; karakterleriyle karşılaştığınız olmuştur. Ve ilk karşılaştığınızda eminim bunlar nedir ve neden &ccedil;ıktılarda g&ouml;z&uuml;km&uuml;yor diye merak etmişsinizdir.</p>\r\n\r\n<p>Uzun uzun anlatılacak bir konu olmadığı i&ccedil;in hemen kısaca bu karakterlerin neyi ifade ettiklerini g&ouml;stermek istiyorum:</p>\r\n\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<th><strong>Karakter</strong></th>\r\n			<th><strong>A&ccedil;ıklaması</strong></th>\r\n		</tr>\r\n		<tr>\r\n			<td>n</td>\r\n			<td>Satır sonu, bu işaretten sonra yazılanlar yeni satırda &ccedil;ıkar. (Tıpkı bir metin belgesinde ENTER tuşu ile alt satıra inmek gibi)</td>\r\n		</tr>\r\n		<tr>\r\n			<td>r</td>\r\n			<td><strong>n</strong>&nbsp;ile aynıdır, Mac işletim sistemleri i&ccedil;indir.</td>\r\n		</tr>\r\n		<tr>\r\n			<td>t</td>\r\n			<td>Bir tabdır, bu karakter uzun bir boşluk oluşturur.</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>T&uuml;m bu karakterleri PHP&rsquo;de yanlızca&nbsp;<strong>&ccedil;ift tırnak</strong>&nbsp;i&ccedil;erisinde&nbsp;<strong>kullanabilirsin</strong>. Tek tırnaklarda işe yaramazlar.</p>\r\n\r\n<p>&Ouml;rnek bir kullanım:</p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n			</td>\r\n			<td>\r\n			<p><code>echo</code> <code>&quot;Selam D&uuml;nya!nBurası yeni satır.&quot;</code><code>;</code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>Sonu&ccedil; ş&ouml;yle olacaktır:</p>\r\n\r\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<td>\r\n			<p>1</p>\r\n\r\n			<p>2</p>\r\n			</td>\r\n			<td>\r\n			<p><code>Selam D&uuml;nya!</code></p>\r\n\r\n			<p><code>Burası yeni satır.</code></p>\r\n			</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n', 62, 1),
(67, '<p>teşekk&uuml;rler</p>\r\n', 62, 1),
(68, '<p>deneme</p>\r\n', 62, 1),
(69, '<p>dsadasdas</p>\r\n', 62, 1),
(70, '<p>2. sayfa</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>vvv</p>\r\n', 62, 1),
(71, '<p>2. sayfadaa 2</p>\r\n', 62, 1);

-- --------------------------------------------------------

--
-- Tablo için tablo yapısı `tbl_user`
--

CREATE TABLE `tbl_user` (
  `id` int(11) NOT NULL,
  `username` varchar(20) COLLATE utf8mb4_turkish_ci NOT NULL,
  `pass` varchar(20) COLLATE utf8mb4_turkish_ci NOT NULL,
  `fname` varchar(20) COLLATE utf8mb4_turkish_ci NOT NULL,
  `sname` varchar(20) COLLATE utf8mb4_turkish_ci NOT NULL,
  `mail` varchar(50) COLLATE utf8mb4_turkish_ci NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_turkish_ci;

--
-- Tablo döküm verisi `tbl_user`
--

INSERT INTO `tbl_user` (`id`, `username`, `pass`, `fname`, `sname`, `mail`) VALUES
(1, 'admin', 'pass', 'aaa', 'bbb', 'a@gmail.com');

--
-- Dökümü yapılmış tablolar için indeksler
--

--
-- Tablo için indeksler `tbl_titles`
--
ALTER TABLE `tbl_titles`
  ADD PRIMARY KEY (`id`),
  ADD UNIQUE KEY `title` (`title`);

--
-- Tablo için indeksler `tbl_topic`
--
ALTER TABLE `tbl_topic`
  ADD PRIMARY KEY (`id`),
  ADD KEY `userId` (`userId`),
  ADD KEY `titleId` (`titleId`);

--
-- Tablo için indeksler `tbl_user`
--
ALTER TABLE `tbl_user`
  ADD PRIMARY KEY (`id`),
  ADD UNIQUE KEY `username` (`username`),
  ADD UNIQUE KEY `mail` (`mail`);

--
-- Dökümü yapılmış tablolar için AUTO_INCREMENT değeri
--

--
-- Tablo için AUTO_INCREMENT değeri `tbl_titles`
--
ALTER TABLE `tbl_titles`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=64;

--
-- Tablo için AUTO_INCREMENT değeri `tbl_topic`
--
ALTER TABLE `tbl_topic`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=74;

--
-- Tablo için AUTO_INCREMENT değeri `tbl_user`
--
ALTER TABLE `tbl_user`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=22;

--
-- Dökümü yapılmış tablolar için kısıtlamalar
--

--
-- Tablo kısıtlamaları `tbl_topic`
--
ALTER TABLE `tbl_topic`
  ADD CONSTRAINT `tbl_topic_ibfk_1` FOREIGN KEY (`userId`) REFERENCES `tbl_user` (`id`),
  ADD CONSTRAINT `tbl_topic_ibfk_2` FOREIGN KEY (`titleId`) REFERENCES `tbl_titles` (`id`);
COMMIT;

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
